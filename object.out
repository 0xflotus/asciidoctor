Defines[keywords] is 'AsciiDoc, DocBook, EPUB, PDF, ebooks, slideshow, slidy, man page'
continuing key: description with partial value: 'AsciiDoc is a text document format for writing notes, '
Closing out continuation for key description, final value: 'AsciiDoc is a text document format for writing notes, documentation, articles, books, ebooks, slideshows,   web pages, man pages and blogs.  AsciiDoc files can betranslated to many formats including HTML, PDF, EPUB, man page.'
About to do the section thing, and first line is:
AsciiDoc Home Page
==================
**************
About to do the next section thing, and first line is:
.{revdate}: AsciiDoc {revnumber} Released
************************************************************************
**************
About to do the next section thing, and first line is:
'Stuart Rackham'
************************************************************************
**************
About to do the next section thing, and first line is:
Introduction
------------
**************
This line matches REGEXP[:name]:
Introduction
Next line matched REGEXP[:line]:
------------
0
About to do the section thing, and first line is:
Introduction
------------
**************
About to do the next section thing, and first line is:
{description}

**************
About to do the next section thing, and first line is:
AsciiDoc is highly configurable: both the AsciiDoc source file syntax
and the backend output markups (which can be almost any type of
**************
This line matches REGEXP[:name]:
AsciiDoc is highly configurable: both the AsciiDoc source file syntax
Why didn't this line match REGEXP[:line], I wonder?
and the backend output markups (which can be almost any type of
6
About to do the next section thing, and first line is:
AsciiDoc is free software and is licenced under the terms of the 'GNU
General Public License version 2' (GPLv2).
**************
This line matches REGEXP[:name]:
AsciiDoc is free software and is licenced under the terms of the 'GNU
Why didn't this line match REGEXP[:line], I wonder?
General Public License version 2' (GPLv2).
27
About to do the next section thing, and first line is:
TIP: The pages you are reading were written using AsciiDoc, to view
the corresponding AsciiDoc source click on the *Page Source* menu item
**************
This line matches REGEXP[:name]:
TIP: The pages you are reading were written using AsciiDoc, to view
Why didn't this line match REGEXP[:line], I wonder?
the corresponding AsciiDoc source click on the *Page Source* menu item
3
About to do the next section thing, and first line is:
Overview and Examples
---------------------
**************
This line matches REGEXP[:name]:
Overview and Examples
Next line matched REGEXP[:line]:
---------------------
0
About to do the section thing, and first line is:
Overview and Examples
---------------------
**************
About to do the next section thing, and first line is:
You write an AsciiDoc document the same way you would write a
normal text document, there are no markup tags or weird format
**************
This line matches REGEXP[:name]:
You write an AsciiDoc document the same way you would write a
Why didn't this line match REGEXP[:line], I wonder?
normal text document, there are no markup tags or weird format
1
About to do the next section thing, and first line is:
The asciidoc(1) command translates AsciiDoc files to HTML, XHTML and
DocBook markups.  DocBook can be post-processed to presentation
**************
This line matches REGEXP[:name]:
The asciidoc(1) command translates AsciiDoc files to HTML, XHTML and
Why didn't this line match REGEXP[:line], I wonder?
DocBook markups.  DocBook can be post-processed to presentation
5
About to do the next section thing, and first line is:
Example Articles
~~~~~~~~~~~~~~~~
**************
This line matches REGEXP[:name]:
Example Articles
Next line matched REGEXP[:line]:
~~~~~~~~~~~~~~~~
0
About to do the section thing, and first line is:
Example Articles
~~~~~~~~~~~~~~~~
**************
About to do the next section thing, and first line is:
- This XHTML version of the
  link:asciidoc.css-embedded.html[AsciiDoc User Guide]
**************
About to do the next section thing, and first line is:
This XHTML version of the
  link:asciidoc.css-embedded.html[AsciiDoc User Guide]
**************
This line matches REGEXP[:name]:
This XHTML version of the
Why didn't this line match REGEXP[:line], I wonder?
  link:asciidoc.css-embedded.html[AsciiDoc User Guide]
30
About to do the next section thing, and first line is:
Here's the link:asciidoc.html[same document] created by first
  generating DocBook markup using AsciiDoc and then converting the
**************
This line matches REGEXP[:name]:
Here's the link:asciidoc.html[same document] created by first
Why didn't this line match REGEXP[:line], I wonder?
  generating DocBook markup using AsciiDoc and then converting the
6
About to do the next section thing, and first line is:
The User Guide again, this time a
  link:chunked/index.html[chunked version].
**************
This line matches REGEXP[:name]:
The User Guide again, this time a
Why didn't this line match REGEXP[:line], I wonder?
  link:chunked/index.html[chunked version].
11
About to do the next section thing, and first line is:
AsciiDoc generated this link:article-standalone.html[stand-alone
  HTML file] containing embedded CSS, JavaScript and images from this
**************
This line matches REGEXP[:name]:
AsciiDoc generated this link:article-standalone.html[stand-alone
Why didn't this line match REGEXP[:line], I wonder?
  HTML file] containing embedded CSS, JavaScript and images from this
6
About to do the next section thing, and first line is:
  asciidoc -a data-uri -a icons -a toc -a max-width=55em article.txt
nil
**************
About to do the next section thing, and first line is:
The same link:article.txt[AsciiDoc article template] generated
  link:article-html5-toc2.html[this HTML 5] (the 'toc2' attribute puts
**************
This line matches REGEXP[:name]:
The same link:article.txt[AsciiDoc article template] generated
Why didn't this line match REGEXP[:line], I wonder?
  link:article-html5-toc2.html[this HTML 5] (the 'toc2' attribute puts
9
About to do the next section thing, and first line is:
  asciidoc -b html5 -a icons -a toc2 -a theme=flask article.txt
nil
**************
About to do the next section thing, and first line is:
The same link:article.txt[AsciiDoc article template] produced
  this link:article.html[HTML file] and this
**************
This line matches REGEXP[:name]:
The same link:article.txt[AsciiDoc article template] produced
Why didn't this line match REGEXP[:line], I wonder?
  this link:article.html[HTML file] and this
16
About to do the next section thing, and first line is:
Example Books
~~~~~~~~~~~~~
**************
This line matches REGEXP[:name]:
Example Books
Next line matched REGEXP[:line]:
~~~~~~~~~~~~~
0
About to do the section thing, and first line is:
X7
Example Books
**************
About to do the next section thing, and first line is:
AsciiDoc markup supports all the standard DocBook frontmatter and
backmatter sections (dedication, preface, bibliography, glossary,
**************
This line matches REGEXP[:name]:
AsciiDoc markup supports all the standard DocBook frontmatter and
Why didn't this line match REGEXP[:line], I wonder?
backmatter sections (dedication, preface, bibliography, glossary,
0
About to do the next section thing, and first line is:
- This link:book.txt[AsciiDoc book] produced link:book.html[this HTML
  file] using the 'DocBook XSL Stylesheets'.
**************
About to do the next section thing, and first line is:
This link:book.txt[AsciiDoc book] produced link:book.html[this HTML
  file] using the 'DocBook XSL Stylesheets'.
**************
This line matches REGEXP[:name]:
This link:book.txt[AsciiDoc book] produced link:book.html[this HTML
Why didn't this line match REGEXP[:line], I wonder?
  file] using the 'DocBook XSL Stylesheets'.
22
About to do the next section thing, and first line is:
The link:asciidoc.pdf[PDF formatted AsciiDoc User Guide] was
  generated from asciidoc(1) DocBook output.
**************
This line matches REGEXP[:name]:
The link:asciidoc.pdf[PDF formatted AsciiDoc User Guide] was
Why didn't this line match REGEXP[:line], I wonder?
  generated from asciidoc(1) DocBook output.
15
About to do the next section thing, and first line is:
The link:asciidoc.epub[EPUB formatted AsciiDoc User Guide] was
  generated using link:a2x.1.html[a2x].
**************
This line matches REGEXP[:name]:
The link:asciidoc.epub[EPUB formatted AsciiDoc User Guide] was
Why didn't this line match REGEXP[:line], I wonder?
  generated using link:a2x.1.html[a2x].
22
About to do the next section thing, and first line is:
This link:book.epub[EPUB formatted book skeleton] was generated
  using link:a2x.1.html[a2x].
**************
This line matches REGEXP[:name]:
This link:book.epub[EPUB formatted book skeleton] was generated
Why didn't this line match REGEXP[:line], I wonder?
  using link:a2x.1.html[a2x].
33
About to do the next section thing, and first line is:
This link:book-multi.txt[multi-part AsciiDoc book] produced
  link:book-multi.html[this HTML file] using the 'DocBook XSL
**************
This line matches REGEXP[:name]:
This link:book-multi.txt[multi-part AsciiDoc book] produced
Why didn't this line match REGEXP[:line], I wonder?
  link:book-multi.html[this HTML file] using the 'DocBook XSL
3
About to do the next section thing, and first line is:
Example UNIX Man Pages
~~~~~~~~~~~~~~~~~~~~~~
**************
This line matches REGEXP[:name]:
Example UNIX Man Pages
Next line matched REGEXP[:line]:
~~~~~~~~~~~~~~~~~~~~~~
0
About to do the section thing, and first line is:
Example UNIX Man Pages
~~~~~~~~~~~~~~~~~~~~~~
**************
About to do the next section thing, and first line is:
HTML formatted AsciiDoc man pages
link:asciidoc.1.css-embedded.html[with stylesheets] and
**************
This line matches REGEXP[:name]:
HTML formatted AsciiDoc man pages
Why didn't this line match REGEXP[:line], I wonder?
link:asciidoc.1.css-embedded.html[with stylesheets] and
22
About to do the next section thing, and first line is:
This link:asciidoc.1[roff formatted  man page] was generated from
asciidoc(1) DocBook output using `xsltproc(1)` and DocBook XSL
**************
This line matches REGEXP[:name]:
This link:asciidoc.1[roff formatted  man page] was generated from
Why didn't this line match REGEXP[:line], I wonder?
asciidoc(1) DocBook output using `xsltproc(1)` and DocBook XSL
3
About to do the next section thing, and first line is:
Example Slideshows
~~~~~~~~~~~~~~~~~~
**************
This line matches REGEXP[:name]:
Example Slideshows
Next line matched REGEXP[:line]:
~~~~~~~~~~~~~~~~~~
0
About to do the section thing, and first line is:
X8
Example Slideshows
**************
About to do the next section thing, and first line is:
The http://www.w3.org/Talks/Tools/Slidy2/[Slidy] backend generates
HTML slideshows that can be viewed in any web browser.  What's nice is
**************
This line matches REGEXP[:name]:
The http://www.w3.org/Talks/Tools/Slidy2/[Slidy] backend generates
Why didn't this line match REGEXP[:line], I wonder?
HTML slideshows that can be viewed in any web browser.  What's nice is
4
About to do the next section thing, and first line is:
- Here is the link:slidy.html[slidy backend documentation] slideshow
  and here is it's link:slidy.txt[AsciiDoc source].
**************
About to do the next section thing, and first line is:
Here is the link:slidy.html[slidy backend documentation] slideshow
  and here is it's link:slidy.txt[AsciiDoc source].
**************
This line matches REGEXP[:name]:
Here is the link:slidy.html[slidy backend documentation] slideshow
Why didn't this line match REGEXP[:line], I wonder?
  and here is it's link:slidy.txt[AsciiDoc source].
14
About to do the next section thing, and first line is:
An link:slidy-example.html[example slidy slideshow] and the
  link:slidy-example.txt[AsciiDoc source].
**************
This line matches REGEXP[:name]:
An link:slidy-example.html[example slidy slideshow] and the
Why didn't this line match REGEXP[:line], I wonder?
  link:slidy-example.txt[AsciiDoc source].
16
About to do the next section thing, and first line is:
Example Web Site
~~~~~~~~~~~~~~~~
**************
This line matches REGEXP[:name]:
Example Web Site
Next line matched REGEXP[:line]:
~~~~~~~~~~~~~~~~
0
About to do the section thing, and first line is:
Example Web Site
~~~~~~~~~~~~~~~~
**************
About to do the next section thing, and first line is:
The link:README-website.html[AsciiDoc website] is included in the
AsciiDoc distribution (in `./examples/website/`) as an example website
**************
This line matches REGEXP[:name]:
The link:README-website.html[AsciiDoc website] is included in the
Why didn't this line match REGEXP[:line], I wonder?
AsciiDoc distribution (in `./examples/website/`) as an example website
5
About to do the next section thing, and first line is:
More examples
~~~~~~~~~~~~~
**************
This line matches REGEXP[:name]:
More examples
Next line matched REGEXP[:line]:
~~~~~~~~~~~~~
0
About to do the section thing, and first line is:
More examples
~~~~~~~~~~~~~
**************
About to do the next section thing, and first line is:
- See below: <<X6,'Documents written using AsciiDoc'>>.
- Example link:newtables.html[Tables].
**************
About to do the next section thing, and first line is:
See below: <<X6,'Documents written using AsciiDoc'>>.
nil
**************
This line matches REGEXP[:name]:
See below: <<X6,'Documents written using AsciiDoc'>>.
Why didn't this line match REGEXP[:line], I wonder?

53
About to do the next section thing, and first line is:
Example link:newtables.html[Tables].
nil
**************
This line matches REGEXP[:name]:
Example link:newtables.html[Tables].
Why didn't this line match REGEXP[:line], I wonder?

36
About to do the next section thing, and first line is:
eBook Publication
-----------------
**************
This line matches REGEXP[:name]:
eBook Publication
Next line matched REGEXP[:line]:
-----------------
0
About to do the section thing, and first line is:
eBook Publication
-----------------
**************
About to do the next section thing, and first line is:
The two most popular open eBook formats are
http://en.wikipedia.org/wiki/EPUB[EPUB] and PDF.
**************
This line matches REGEXP[:name]:
The two most popular open eBook formats are
Why didn't this line match REGEXP[:line], I wonder?
http://en.wikipedia.org/wiki/EPUB[EPUB] and PDF.
5
About to do the next section thing, and first line is:
Blogpost weblog client
----------------------
**************
This line matches REGEXP[:name]:
Blogpost weblog client
Next line matched REGEXP[:line]:
----------------------
0
About to do the section thing, and first line is:
Blogpost weblog client
----------------------
**************
About to do the next section thing, and first line is:
http://srackham.wordpress.com/blogpost-readme/[blogpost] is a
command-line weblog client for publishing AsciiDoc documents to
**************
This line matches REGEXP[:name]:
http://srackham.wordpress.com/blogpost-readme/[blogpost] is a
Why didn't this line match REGEXP[:line], I wonder?
command-line weblog client for publishing AsciiDoc documents to
2
About to do the next section thing, and first line is:
Source code highlighter
-----------------------
**************
This line matches REGEXP[:name]:
Source code highlighter
Next line matched REGEXP[:line]:
-----------------------
0
About to do the section thing, and first line is:
Source code highlighter
-----------------------
**************
About to do the next section thing, and first line is:
AsciiDoc includes a link:source-highlight-filter.html[source code
highlighter filter] that uses
**************
This line matches REGEXP[:name]:
AsciiDoc includes a link:source-highlight-filter.html[source code
Why didn't this line match REGEXP[:line], I wonder?
highlighter filter] that uses
36
About to do the next section thing, and first line is:
Mathematical Formulae
---------------------
**************
This line matches REGEXP[:name]:
Mathematical Formulae
Next line matched REGEXP[:line]:
---------------------
0
About to do the section thing, and first line is:
X3
Mathematical Formulae
**************
About to do the next section thing, and first line is:
You can include mathematical formulae in AsciiDoc XHTML documents using
link:asciimathml.html[ASCIIMathML] or link:latexmathml.html[LaTeXMathML]
**************
This line matches REGEXP[:name]:
You can include mathematical formulae in AsciiDoc XHTML documents using
Why didn't this line match REGEXP[:line], I wonder?
link:asciimathml.html[ASCIIMathML] or link:latexmathml.html[LaTeXMathML]
1
About to do the next section thing, and first line is:
The link:latex-filter.html[AsciiDoc LaTeX filter] translates LaTeX
source to a PNG image that is automatically inserted into the AsciiDoc
**************
This line matches REGEXP[:name]:
The link:latex-filter.html[AsciiDoc LaTeX filter] translates LaTeX
Why didn't this line match REGEXP[:line], I wonder?
source to a PNG image that is automatically inserted into the AsciiDoc
4
About to do the next section thing, and first line is:
AsciiDoc also has 'latexmath' macros for DocBook outputs -- they are
documented in link:latexmath.pdf[this PDF file] and can be used in
**************
This line matches REGEXP[:name]:
AsciiDoc also has 'latexmath' macros for DocBook outputs -- they are
Why didn't this line match REGEXP[:line], I wonder?
documented in link:latexmath.pdf[this PDF file] and can be used in
2
About to do the next section thing, and first line is:
Editor Support
--------------
**************
This line matches REGEXP[:name]:
Editor Support
Next line matched REGEXP[:line]:
--------------
0
About to do the section thing, and first line is:
Editor Support
--------------
**************
About to do the next section thing, and first line is:
- An AsciiDoc syntax highlighter for the Vim text editor is included in the
  AsciiDoc distribution (see 'Appendix F' of the 'AsciiDoc User Guide' for
**************
About to do the next section thing, and first line is:
An AsciiDoc syntax highlighter for the Vim text editor is included in the
  AsciiDoc distribution (see 'Appendix F' of the 'AsciiDoc User Guide' for
**************
This line matches REGEXP[:name]:
An AsciiDoc syntax highlighter for the Vim text editor is included in the
Why didn't this line match REGEXP[:line], I wonder?
  AsciiDoc distribution (see 'Appendix F' of the 'AsciiDoc User Guide' for
2
About to do the next section thing, and first line is:
.Syntax highlighter screenshot
image::images/highlighter.png[height=400,caption="",link="images/highlighter.png"]
**************
This line matches REGEXP[:name]:
image::images/highlighter.png[height=400,caption="",link="images/highlighter.png"]
Why didn't this line match REGEXP[:line], I wonder?

83
About to do the next section thing, and first line is:
Dag Wieers has implemented an alternative Vim syntax file for
  AsciiDoc which can be found here
**************
This line matches REGEXP[:name]:
Dag Wieers has implemented an alternative Vim syntax file for
Why didn't this line match REGEXP[:line], I wonder?
  AsciiDoc which can be found here
26
About to do the next section thing, and first line is:
David Avsajanishvili has written a source highlighter for AsciiDoc
  files for http://projects.gnome.org/gtksourceview/[GtkSourceView]
**************
This line matches REGEXP[:name]:
David Avsajanishvili has written a source highlighter for AsciiDoc
Why didn't this line match REGEXP[:line], I wonder?
  files for http://projects.gnome.org/gtksourceview/[GtkSourceView]
2
About to do the next section thing, and first line is:
Florian Kaufman has written 'adoc-mode.el' -- a major-mode for
  editing AsciiDoc files in Emacs, you can find it
**************
This line matches REGEXP[:name]:
Florian Kaufman has written 'adoc-mode.el' -- a major-mode for
Why didn't this line match REGEXP[:line], I wonder?
  editing AsciiDoc files in Emacs, you can find it
11
About to do the next section thing, and first line is:
The http://xpt.sourceforge.net/[*Nix Power Tools project] has
  released an http://xpt.sourceforge.net/tools/doc-mode/[AsciiDoc
**************
This line matches REGEXP[:name]:
The http://xpt.sourceforge.net/[*Nix Power Tools project] has
Why didn't this line match REGEXP[:line], I wonder?
  released an http://xpt.sourceforge.net/tools/doc-mode/[AsciiDoc
5
About to do the next section thing, and first line is:
Terrence Brannon has written
  http://github.com/metaperl/asciidoc-el[AsciiDoc functions for
**************
This line matches REGEXP[:name]:
Terrence Brannon has written
Why didn't this line match REGEXP[:line], I wonder?
  http://github.com/metaperl/asciidoc-el[AsciiDoc functions for
36
About to do the next section thing, and first line is:
Christian Zuckschwerdt has written a
  https://github.com/zuckschwerdt/asciidoc.tmbundle[TextMate bundle]
**************
This line matches REGEXP[:name]:
Christian Zuckschwerdt has written a
Why didn't this line match REGEXP[:line], I wonder?
  https://github.com/zuckschwerdt/asciidoc.tmbundle[TextMate bundle]
33
About to do the next section thing, and first line is:
Try AsciiDoc on the Web
-----------------------
**************
This line matches REGEXP[:name]:
Try AsciiDoc on the Web
Next line matched REGEXP[:line]:
-----------------------
0
About to do the section thing, and first line is:
Try AsciiDoc on the Web
-----------------------
**************
About to do the next section thing, and first line is:
Andrew Koster has written a Web based application to interactively
convert and display AsciiDoc source:
**************
This line matches REGEXP[:name]:
Andrew Koster has written a Web based application to interactively
Why didn't this line match REGEXP[:line], I wonder?
convert and display AsciiDoc source:
30
About to do the next section thing, and first line is:
External Resources and Applications
-----------------------------------
**************
This line matches REGEXP[:name]:
External Resources and Applications
Next line matched REGEXP[:line]:
-----------------------------------
0
About to do the section thing, and first line is:
X2
External Resources and Applications
**************
About to do the next section thing, and first line is:
Here are resources that I know of, if you know of more drop me a line
and I'll add them to the list.
**************
This line matches REGEXP[:name]:
Here are resources that I know of, if you know of more drop me a line
Why didn't this line match REGEXP[:line], I wonder?
and I'll add them to the list.
39
About to do the next section thing, and first line is:
- Check the link:INSTALL.html#X2[installation page] for packaged versions
  of AsciiDoc.
**************
About to do the next section thing, and first line is:
Check the link:INSTALL.html#X2[installation page] for packaged versions
  of AsciiDoc.
**************
This line matches REGEXP[:name]:
Check the link:INSTALL.html#X2[installation page] for packaged versions
Why didn't this line match REGEXP[:line], I wonder?
  of AsciiDoc.
56
About to do the next section thing, and first line is:
Alex Efros has written an HTML formatted
  http://powerman.name/doc/asciidoc[AsciiDoc Cheatsheet] using
**************
This line matches REGEXP[:name]:
Alex Efros has written an HTML formatted
Why didn't this line match REGEXP[:line], I wonder?
  http://powerman.name/doc/asciidoc[AsciiDoc Cheatsheet] using
23
About to do the next section thing, and first line is:
Thomas Berker has written an
  http://liksom.info/blog/?q=node/114[AsciiDoc Cheatsheet] in Open
**************
This line matches REGEXP[:name]:
Thomas Berker has written an
Why didn't this line match REGEXP[:line], I wonder?
  http://liksom.info/blog/?q=node/114[AsciiDoc Cheatsheet] in Open
39
About to do the next section thing, and first line is:
The http://www.wikimatrix.org/[WikiMatrix] website has an excellent
  http://www.wikimatrix.org/syntax.php[web page] that compares the
**************
This line matches REGEXP[:name]:
The http://www.wikimatrix.org/[WikiMatrix] website has an excellent
Why didn't this line match REGEXP[:line], I wonder?
  http://www.wikimatrix.org/syntax.php[web page] that compares the
0
About to do the next section thing, and first line is:
Franck Pommereau has written
  http://www.univ-paris12.fr/lacl/pommereau/soft/asciidoctest.html[Asciidoctest],
**************
This line matches REGEXP[:name]:
Franck Pommereau has written
Why didn't this line match REGEXP[:line], I wonder?
  http://www.univ-paris12.fr/lacl/pommereau/soft/asciidoctest.html[Asciidoctest],
54
About to do the next section thing, and first line is:
The http://remips.sourceforge.net/[ReMIPS] project website has been
  built using AsciiDoc.
**************
This line matches REGEXP[:name]:
The http://remips.sourceforge.net/[ReMIPS] project website has been
Why didn't this line match REGEXP[:line], I wonder?
  built using AsciiDoc.
43
About to do the next section thing, and first line is:
Here are some link:asciidoc-docbook-xsl.html[DocBook XSL Stylesheets
  Notes].
**************
This line matches REGEXP[:name]:
Here are some link:asciidoc-docbook-xsl.html[DocBook XSL Stylesheets
Why didn't this line match REGEXP[:line], I wonder?
  Notes].
58
About to do the next section thing, and first line is:
Karl Mowatt-Wilson has developed an http://ikiwiki.info/[ikiwiki]
  plugin for AsciiDoc which he uses to render
**************
This line matches REGEXP[:name]:
Karl Mowatt-Wilson has developed an http://ikiwiki.info/[ikiwiki]
Why didn't this line match REGEXP[:line], I wonder?
  plugin for AsciiDoc which he uses to render
19
About to do the next section thing, and first line is:
Glenn Eychaner has
  http://groups.google.com/group/asciidoc/browse_thread/thread/bf04b55628efe214[reworked
**************
This line matches REGEXP[:name]:
Glenn Eychaner has
Why didn't this line match REGEXP[:line], I wonder?
  http://groups.google.com/group/asciidoc/browse_thread/thread/bf04b55628efe214[reworked
71
About to do the next section thing, and first line is:
David Hajage has written an AsciiDoc package for the
  http://www.r-project.org/[R Project] (R is a free software
**************
This line matches REGEXP[:name]:
David Hajage has written an AsciiDoc package for the
Why didn't this line match REGEXP[:line], I wonder?
  http://www.r-project.org/[R Project] (R is a free software
9
About to do the next section thing, and first line is:
Pascal Rapaz has written a Python script to automate AsciiDoc
  website generation. You can find it at
**************
This line matches REGEXP[:name]:
Pascal Rapaz has written a Python script to automate AsciiDoc
Why didn't this line match REGEXP[:line], I wonder?
  website generation. You can find it at
20
About to do the next section thing, and first line is:
Jared Henley has written
  http://jared.henley.id.au/software/awb/documentation.html[AsciiDoc
**************
This line matches REGEXP[:name]:
Jared Henley has written
Why didn't this line match REGEXP[:line], I wonder?
  http://jared.henley.id.au/software/awb/documentation.html[AsciiDoc
45
About to do the next section thing, and first line is:
Brad Adkins has written
  http://dbixjcl.org/jcl/asciidocgen/asciidocgen.html[AsciiDocGen], a
**************
This line matches REGEXP[:name]:
Brad Adkins has written
Why didn't this line match REGEXP[:line], I wonder?
  http://dbixjcl.org/jcl/asciidocgen/asciidocgen.html[AsciiDocGen], a
47
About to do the next section thing, and first line is:
Filippo Negroni has developed a set of tools to facilitate 'literate
  programming' using AsciiDoc.  The set of tools is called
**************
This line matches REGEXP[:name]:
Filippo Negroni has developed a set of tools to facilitate 'literate
Why didn't this line match REGEXP[:line], I wonder?
  programming' using AsciiDoc.  The set of tools is called
9
About to do the next section thing, and first line is:
http://vanderwijk.info/2009/4/23/full-text-based-document-generation-using-asciidoc-and-ditaa[Ivo's
  blog] describes a http://ditaa.sourceforge.net/[ditaa] filter for
**************
This line matches REGEXP[:name]:
http://vanderwijk.info/2009/4/23/full-text-based-document-generation-using-asciidoc-and-ditaa[Ivo's
Why didn't this line match REGEXP[:line], I wonder?
  blog] describes a http://ditaa.sourceforge.net/[ditaa] filter for
31
About to do the next section thing, and first line is:
http://github.com/github/gollum[Gollum] is a git-powered wiki, it
  supports various formats, including AsciiDoc.
**************
This line matches REGEXP[:name]:
http://github.com/github/gollum[Gollum] is a git-powered wiki, it
Why didn't this line match REGEXP[:line], I wonder?
  supports various formats, including AsciiDoc.
17
About to do the next section thing, and first line is:
Gregory Romé has written an
  http://github.com/gpr/redmine_asciidoc_formatter[AsciiDoc plugin]
**************
This line matches REGEXP[:name]:
Gregory Romé has written an
Why didn't this line match REGEXP[:line], I wonder?
  http://github.com/gpr/redmine_asciidoc_formatter[AsciiDoc plugin]
40
About to do the next section thing, and first line is:
Paul Hsu has started a
  http://github.com/paulhsu/AsciiDoc.CHT.userguide[Chinese translation
**************
This line matches REGEXP[:name]:
Paul Hsu has started a
Why didn't this line match REGEXP[:line], I wonder?
  http://github.com/paulhsu/AsciiDoc.CHT.userguide[Chinese translation
49
About to do the next section thing, and first line is:
Dag Wieers has written
  http://dag.wieers.com/home-made/unoconv/[UNOCONV]. 'UNOCONV' can
**************
This line matches REGEXP[:name]:
Dag Wieers has written
Why didn't this line match REGEXP[:line], I wonder?
  http://dag.wieers.com/home-made/unoconv/[UNOCONV]. 'UNOCONV' can
45
About to do the next section thing, and first line is:
Ed Keith has written http://codeextactor.berlios.de/[Code
  Extractor], it extracts code snippets from source code files and
**************
This line matches REGEXP[:name]:
Ed Keith has written http://codeextactor.berlios.de/[Code
Why didn't this line match REGEXP[:line], I wonder?
  Extractor], it extracts code snippets from source code files and
10
About to do the next section thing, and first line is:
The http://csrp.iut-blagnac.fr/jmiwebsite/home/[JMI website] hosts
  a number of extras for AsciiDoc and Slidy written by Jean-Michel
**************
This line matches REGEXP[:name]:
The http://csrp.iut-blagnac.fr/jmiwebsite/home/[JMI website] hosts
Why didn't this line match REGEXP[:line], I wonder?
  a number of extras for AsciiDoc and Slidy written by Jean-Michel
1
About to do the next section thing, and first line is:
Ryan Tomayko has written an number of
  http://tomayko.com/src/adoc-themes/[themes for AsciiDoc] along with
**************
This line matches REGEXP[:name]:
Ryan Tomayko has written an number of
Why didn't this line match REGEXP[:line], I wonder?
  http://tomayko.com/src/adoc-themes/[themes for AsciiDoc] along with
33
About to do the next section thing, and first line is:
Ilya Portnov has written a
  https://gitorious.org/doc-building-system[document building system
**************
This line matches REGEXP[:name]:
Ilya Portnov has written a
Why didn't this line match REGEXP[:line], I wonder?
  https://gitorious.org/doc-building-system[document building system
43
About to do the next section thing, and first line is:
Lex Trotman has written
  https://github.com/elextr/codiicsa[codiicsa], a program that
**************
This line matches REGEXP[:name]:
Lex Trotman has written
Why didn't this line match REGEXP[:line], I wonder?
  https://github.com/elextr/codiicsa[codiicsa], a program that
40
About to do the next section thing, and first line is:
Qingping Hou has written http://houqp.github.com/asciidoc-deckjs/[an
  AsciiDoc backend for deck.js].
**************
This line matches REGEXP[:name]:
Qingping Hou has written http://houqp.github.com/asciidoc-deckjs/[an
Why didn't this line match REGEXP[:line], I wonder?
  AsciiDoc backend for deck.js].
35
About to do the next section thing, and first line is:
The guys from O'Reilly Media have posted an
  https://github.com/oreillymedia/docbook2asciidoc[XSL Stylesheet to
**************
This line matches REGEXP[:name]:
The guys from O'Reilly Media have posted an
Why didn't this line match REGEXP[:line], I wonder?
  https://github.com/oreillymedia/docbook2asciidoc[XSL Stylesheet to
26
About to do the next section thing, and first line is:
Please let me know if any of these links need updating.

**************
This line matches REGEXP[:name]:
Please let me know if any of these links need updating.
Why didn't this line match REGEXP[:line], I wonder?

55
About to do the next section thing, and first line is:
Documents written using AsciiDoc
--------------------------------
**************
This line matches REGEXP[:name]:
Documents written using AsciiDoc
Next line matched REGEXP[:line]:
--------------------------------
0
About to do the section thing, and first line is:
X6
Documents written using AsciiDoc
**************
About to do the next section thing, and first line is:
Here are some documents I know of, if you know of more drop me a line
and I'll add them to the list.
**************
This line matches REGEXP[:name]:
Here are some documents I know of, if you know of more drop me a line
Why didn't this line match REGEXP[:line], I wonder?
and I'll add them to the list.
39
About to do the next section thing, and first line is:
- The book http://practicalunittesting.com/[Practical Unit Testing] by
  Tomek Kaczanowski was
**************
About to do the next section thing, and first line is:
The book http://practicalunittesting.com/[Practical Unit Testing] by
  Tomek Kaczanowski was
**************
This line matches REGEXP[:name]:
The book http://practicalunittesting.com/[Practical Unit Testing] by
Why didn't this line match REGEXP[:line], I wonder?
  Tomek Kaczanowski was
44
About to do the next section thing, and first line is:
The book http://oreilly.com/catalog/9781449397296[Programming iOS 4]
  by Matt Neuburg was written using AsciiDoc. Matt has
**************
This line matches REGEXP[:name]:
The book http://oreilly.com/catalog/9781449397296[Programming iOS 4]
Why didn't this line match REGEXP[:line], I wonder?
  by Matt Neuburg was written using AsciiDoc. Matt has
13
About to do the next section thing, and first line is:
The book
  http://oreilly.com/catalog/9780596155957/index.html[Programming
**************
This line matches REGEXP[:name]:
The book
Why didn't this line match REGEXP[:line], I wonder?
  http://oreilly.com/catalog/9780596155957/index.html[Programming
58
About to do the next section thing, and first line is:
The http://www.ncfaculty.net/dogle/fishR/index.html[fishR] website
  has a number of
**************
This line matches REGEXP[:name]:
The http://www.ncfaculty.net/dogle/fishR/index.html[fishR] website
Why didn't this line match REGEXP[:line], I wonder?
  has a number of
48
About to do the next section thing, and first line is:
The Neo4j graph database project uses Asciidoc, and the output is
  published here: http://docs.neo4j.org/. The build process includes
**************
This line matches REGEXP[:name]:
The Neo4j graph database project uses Asciidoc, and the output is
Why didn't this line match REGEXP[:line], I wonder?
  published here: http://docs.neo4j.org/. The build process includes
4
About to do the next section thing, and first line is:
http://frugalware.org/[Frugalware Linux] uses AsciiDoc for
  http://frugalware.org/docs[documentation].
**************
This line matches REGEXP[:name]:
http://frugalware.org/[Frugalware Linux] uses AsciiDoc for
Why didn't this line match REGEXP[:line], I wonder?
  http://frugalware.org/docs[documentation].
13
About to do the next section thing, and first line is:
http://www.cherokee-project.com/doc/[Cherokee documentation].
nil
**************
This line matches REGEXP[:name]:
http://www.cherokee-project.com/doc/[Cherokee documentation].
Why didn't this line match REGEXP[:line], I wonder?

61
About to do the next section thing, and first line is:
Henrik Maier produced this professional User manual using AsciiDoc:
  http://www.proconx.com/assets/files/products/modg100/UMMBRG300-1101.pdf
**************
This line matches REGEXP[:name]:
Henrik Maier produced this professional User manual using AsciiDoc:
Why didn't this line match REGEXP[:line], I wonder?
  http://www.proconx.com/assets/files/products/modg100/UMMBRG300-1101.pdf
7
About to do the next section thing, and first line is:
Henrik also produced this folded single page brochure format
  example:
**************
This line matches REGEXP[:name]:
Henrik also produced this folded single page brochure format
Why didn't this line match REGEXP[:line], I wonder?
  example:
49
About to do the next section thing, and first line is:
See this
http://groups.google.com/group/asciidoc/browse_thread/thread/16ab5a06864b934f[AsciiDoc
**************
This line matches REGEXP[:name]:
See this
Why didn't this line match REGEXP[:line], I wonder?
http://groups.google.com/group/asciidoc/browse_thread/thread/16ab5a06864b934f[AsciiDoc
78
About to do the next section thing, and first line is:
The
  http://www.kernel.org/pub/software/scm/git/docs/user-manual.html[Git
**************
This line matches REGEXP[:name]:
The
Why didn't this line match REGEXP[:line], I wonder?
  http://www.kernel.org/pub/software/scm/git/docs/user-manual.html[Git
68
About to do the next section thing, and first line is:
'Git Magic' +
  http://www-cs-students.stanford.edu/~blynn/gitmagic/ +
**************
About to do the next section thing, and first line is:
'CouchDB: The Definitive Guide' +
  http://books.couchdb.org/relax/ +
**************
About to do the next section thing, and first line is:
'Ramaze Manual' +
  http://book.ramaze.net/ +
**************
About to do the next section thing, and first line is:
Some documentation about git by Nico Schottelius (in German)
  http://nico.schotteli.us/papers/linux/git-firmen/.
**************
This line matches REGEXP[:name]:
Some documentation about git by Nico Schottelius (in German)
Why didn't this line match REGEXP[:line], I wonder?
  http://nico.schotteli.us/papers/linux/git-firmen/.
7
About to do the next section thing, and first line is:
The http://www.netpromi.com/kirbybase_ruby.html[KirbyBase for Ruby]
  database management system manual.
**************
This line matches REGEXP[:name]:
The http://www.netpromi.com/kirbybase_ruby.html[KirbyBase for Ruby]
Why didn't this line match REGEXP[:line], I wonder?
  database management system manual.
30
About to do the next section thing, and first line is:
The http://xpt.sourceforge.net/[*Nix Power Tools project] uses
  AsciiDoc for documentation.
**************
This line matches REGEXP[:name]:
The http://xpt.sourceforge.net/[*Nix Power Tools project] uses
Why didn't this line match REGEXP[:line], I wonder?
  AsciiDoc for documentation.
32
About to do the next section thing, and first line is:
The http://www.wesnoth.org/[Battle for Wesnoth] project uses
  AsciiDoc for its http://www.wesnoth.org/wiki/WesnothManual[Manual]
**************
This line matches REGEXP[:name]:
The http://www.wesnoth.org/[Battle for Wesnoth] project uses
Why didn't this line match REGEXP[:line], I wonder?
  AsciiDoc for its http://www.wesnoth.org/wiki/WesnothManual[Manual]
9
About to do the next section thing, and first line is:
Troy Hanson uses AsciiDoc to generate user guides for the
  http://tpl.sourceforge.net/[tpl] and
**************
This line matches REGEXP[:name]:
Troy Hanson uses AsciiDoc to generate user guides for the
Why didn't this line match REGEXP[:line], I wonder?
  http://tpl.sourceforge.net/[tpl] and
18
About to do the next section thing, and first line is:
http://volnitsky.com/[Leonid Volnitsky's site] is generated using
  AsciiDoc and includes Leonid's matplotlib filter.
**************
This line matches REGEXP[:name]:
http://volnitsky.com/[Leonid Volnitsky's site] is generated using
Why didn't this line match REGEXP[:line], I wonder?
  AsciiDoc and includes Leonid's matplotlib filter.
13
About to do the next section thing, and first line is:
http://www.weechat.org/[WeeChat] uses AsciiDoc for
  http://www.weechat.org/doc[project documentation].
**************
This line matches REGEXP[:name]:
http://www.weechat.org/[WeeChat] uses AsciiDoc for
Why didn't this line match REGEXP[:line], I wonder?
  http://www.weechat.org/doc[project documentation].
3
About to do the next section thing, and first line is:
http://www.clansuite.com/[Clansuite] uses AsciiDoc for
  http://www.clansuite.com/documentation/[project documentation].
**************
This line matches REGEXP[:name]:
http://www.clansuite.com/[Clansuite] uses AsciiDoc for
Why didn't this line match REGEXP[:line], I wonder?
  http://www.clansuite.com/documentation/[project documentation].
12
About to do the next section thing, and first line is:
The http://fc-solve.berlios.de/[Freecell Solver program] uses
  AsciiDoc for its
**************
This line matches REGEXP[:name]:
The http://fc-solve.berlios.de/[Freecell Solver program] uses
Why didn't this line match REGEXP[:line], I wonder?
  AsciiDoc for its
42
About to do the next section thing, and first line is:
Eric Raymond's http://gpsd.berlios.de/AIVDM.html[AIVDM/AIVDO
  protocol decoding] documentation is written using AsciiDoc.
**************
This line matches REGEXP[:name]:
Eric Raymond's http://gpsd.berlios.de/AIVDM.html[AIVDM/AIVDO
Why didn't this line match REGEXP[:line], I wonder?
  protocol decoding] documentation is written using AsciiDoc.
2
About to do the next section thing, and first line is:
Dwight Schauer has written an http://lxc.teegra.net/[LXC HOWTO] in
  AsciiDoc.
**************
This line matches REGEXP[:name]:
Dwight Schauer has written an http://lxc.teegra.net/[LXC HOWTO] in
Why didn't this line match REGEXP[:line], I wonder?
  AsciiDoc.
54
About to do the next section thing, and first line is:
The http://www.rowetel.com/ucasterisk/[Free Telephony Project]
  website is generated using AsciiDoc.
**************
This line matches REGEXP[:name]:
The http://www.rowetel.com/ucasterisk/[Free Telephony Project]
Why didn't this line match REGEXP[:line], I wonder?
  website is generated using AsciiDoc.
23
About to do the next section thing, and first line is:
Warren Block has http://www.wonkity.com/~wblock/docs/[posted a
  number of articles written using AsciiDoc].
**************
This line matches REGEXP[:name]:
Warren Block has http://www.wonkity.com/~wblock/docs/[posted a
Why didn't this line match REGEXP[:line], I wonder?
  number of articles written using AsciiDoc].
16
About to do the next section thing, and first line is:
The http://code.google.com/p/waf/[Waf project's] 'Waf Book' is
  written using AsciiDoc, there is an
**************
This line matches REGEXP[:name]:
The http://code.google.com/p/waf/[Waf project's] 'Waf Book' is
Why didn't this line match REGEXP[:line], I wonder?
  written using AsciiDoc, there is an
24
About to do the next section thing, and first line is:
The http://www.diffkit.org/[DiffKit] project's documentation and
  website have been written using Asciidoc.
**************
This line matches REGEXP[:name]:
The http://www.diffkit.org/[DiffKit] project's documentation and
Why didn't this line match REGEXP[:line], I wonder?
  website have been written using Asciidoc.
20
About to do the next section thing, and first line is:
The http://www.networkupstools.org[Network UPS Tools] project
  http://www.networkupstools.org/documentation.html[documentation] is
**************
This line matches REGEXP[:name]:
The http://www.networkupstools.org[Network UPS Tools] project
Why didn't this line match REGEXP[:line], I wonder?
  http://www.networkupstools.org/documentation.html[documentation] is
9
About to do the next section thing, and first line is:
http://www.archlinux.org/pacman/[Pacman], the
  http://www.archlinux.org/[Arch Linux] package manager, has been
**************
This line matches REGEXP[:name]:
http://www.archlinux.org/pacman/[Pacman], the
Why didn't this line match REGEXP[:line], I wonder?
  http://www.archlinux.org/[Arch Linux] package manager, has been
21
About to do the next section thing, and first line is:
Suraj Kurapati has written a number of customized manuals for his
  Open Source projects using AsciiDoc:
**************
This line matches REGEXP[:name]:
Suraj Kurapati has written a number of customized manuals for his
Why didn't this line match REGEXP[:line], I wonder?
  Open Source projects using AsciiDoc:
26
About to do the next section thing, and first line is:
http://snk.tuxfamily.org/lib/detest/
nil
**************
This line matches REGEXP[:name]:
http://snk.tuxfamily.org/lib/detest/
Why didn't this line match REGEXP[:line], I wonder?

36
About to do the next section thing, and first line is:
http://snk.tuxfamily.org/lib/ember/
nil
**************
This line matches REGEXP[:name]:
http://snk.tuxfamily.org/lib/ember/
Why didn't this line match REGEXP[:line], I wonder?

35
About to do the next section thing, and first line is:
http://snk.tuxfamily.org/lib/inochi/
nil
**************
This line matches REGEXP[:name]:
http://snk.tuxfamily.org/lib/inochi/
Why didn't this line match REGEXP[:line], I wonder?

36
About to do the next section thing, and first line is:
http://snk.tuxfamily.org/lib/rumai/
nil
**************
This line matches REGEXP[:name]:
http://snk.tuxfamily.org/lib/rumai/
Why didn't this line match REGEXP[:line], I wonder?

35
About to do the next section thing, and first line is:
The http://cxxtest.com/[CxxTest] project (unit testing for C++
  language) has written its User Guide using AsciiDoc.
**************
This line matches REGEXP[:name]:
The http://cxxtest.com/[CxxTest] project (unit testing for C++
Why didn't this line match REGEXP[:line], I wonder?
  language) has written its User Guide using AsciiDoc.
7
About to do the next section thing, and first line is:
Please let me know if any of these links need updating.

**************
This line matches REGEXP[:name]:
Please let me know if any of these links need updating.
Why didn't this line match REGEXP[:line], I wonder?

55
About to do the next section thing, and first line is:
DocBook 5.0 Backend
-------------------
**************
This line matches REGEXP[:name]:
DocBook 5.0 Backend
Next line matched REGEXP[:line]:
-------------------
0
About to do the section thing, and first line is:
DocBook 5.0 Backend
-------------------
**************
About to do the next section thing, and first line is:
Shlomi Fish has begun work on a DocBook 5.0 `docbook50.conf` backend
configuration file, you can find it
**************
This line matches REGEXP[:name]:
Shlomi Fish has begun work on a DocBook 5.0 `docbook50.conf` backend
Why didn't this line match REGEXP[:line], I wonder?
configuration file, you can find it
33
About to do the next section thing, and first line is:
LaTeX Backend
-------------
**************
This line matches REGEXP[:name]:
LaTeX Backend
Next line matched REGEXP[:line]:
-------------
0
About to do the section thing, and first line is:
X1
LaTeX Backend
**************
About to do the next section thing, and first line is:
An experimental LaTeX backend was written for AsciiDoc in 2006 by
Benjamin Klum.  Benjamin did a superhuman job (I admit it, I didn't
**************
This line matches REGEXP[:name]:
An experimental LaTeX backend was written for AsciiDoc in 2006 by
Why didn't this line match REGEXP[:line], I wonder?
Benjamin Klum.  Benjamin did a superhuman job (I admit it, I didn't
2
About to do the next section thing, and first line is:
In 2009 Geoff Eddy stepped up and updated the LaTeX backend, thanks to
Geoff's efforts it now works with AsciiDoc 8.4.3. Geoff's updated
**************
This line matches REGEXP[:name]:
In 2009 Geoff Eddy stepped up and updated the LaTeX backend, thanks to
Why didn't this line match REGEXP[:line], I wonder?
Geoff's efforts it now works with AsciiDoc 8.4.3. Geoff's updated
5
About to do the next section thing, and first line is:
It's probably also worth pointing out that LaTeX output can be
generated by passing AsciiDoc generated DocBook through `dblatex(1)`.
**************
This line matches REGEXP[:name]:
It's probably also worth pointing out that LaTeX output can be
Why didn't this line match REGEXP[:line], I wonder?
generated by passing AsciiDoc generated DocBook through `dblatex(1)`.
7
About to do the next section thing, and first line is:
Patches and bug reports
-----------------------
**************
This line matches REGEXP[:name]:
Patches and bug reports
Next line matched REGEXP[:line]:
-----------------------
0
About to do the section thing, and first line is:
Patches and bug reports
-----------------------
**************
About to do the next section thing, and first line is:
Patches and bug reports are are encouraged, but please try to follow
these guidelines:
**************
This line matches REGEXP[:name]:
Patches and bug reports are are encouraged, but please try to follow
Why didn't this line match REGEXP[:line], I wonder?
these guidelines:
51
About to do the next section thing, and first line is:
- Post bug reports and patches to the
  http://groups.google.com/group/asciidoc[asciidoc discussion list],
**************
About to do the next section thing, and first line is:
Post bug reports and patches to the
  http://groups.google.com/group/asciidoc[asciidoc discussion list],
**************
This line matches REGEXP[:name]:
Post bug reports and patches to the
Why didn't this line match REGEXP[:line], I wonder?
  http://groups.google.com/group/asciidoc[asciidoc discussion list],
34
About to do the next section thing, and first line is:
The email subject line should be a specific and concise topic
  summary. Commonly accepted subject line prefixes such as '[ANN]',
**************
This line matches REGEXP[:name]:
The email subject line should be a specific and concise topic
Why didn't this line match REGEXP[:line], I wonder?
  summary. Commonly accepted subject line prefixes such as '[ANN]',
7
About to do the next section thing, and first line is:
=== Bug reports
- When reporting problems please illustrate the problem with the
**************
About to do the next section thing, and first line is:
=== Patches
- Keep patches small and atomic (one issue per patch) -- no patch
**************
No header
Preamble is #<Asciidoc::Section:0x100c09c60>
It has 2 blocks.
I have 13 blocks
Block #0 is a Asciidoc::Section
Name is Introduction
========================================
Block #1 is a Asciidoc::Section
Name is Overview and Examples
========================================
Block #2 is a Asciidoc::Section
Name is eBook Publication
========================================
Block #3 is a Asciidoc::Section
Name is Blogpost weblog client
========================================
Block #4 is a Asciidoc::Section
Name is Source code highlighter
========================================
Block #5 is a Asciidoc::Section
Name is Mathematical Formulae
========================================
Block #6 is a Asciidoc::Section
Name is Editor Support
========================================
Block #7 is a Asciidoc::Section
Name is Try AsciiDoc on the Web
========================================
Block #8 is a Asciidoc::Section
Name is External Resources and Applications
========================================
Block #9 is a Asciidoc::Section
Name is Documents written using AsciiDoc
========================================
Block #10 is a Asciidoc::Section
Name is DocBook 5.0 Backend
========================================
Block #11 is a Asciidoc::Section
Name is LaTeX Backend
========================================
Block #12 is a Asciidoc::Section
Name is Patches and bug reports
========================================
Here are the template classes we know about: [DocumentTemplate, SectionTemplate, SectionAnchorTemplate, SectionLiteralTemplate, SectionParagraphTemplate, SectionDlistTemplate, SectionUlistTemplate]
Document#renderer is #<Asciidoc::Renderer:0x100ba4130>
View for document is #<DocumentTemplate:0x100ba2768>, object is #<Asciidoc::Section:0x100c09bc0>
Rendering block #<Asciidoc::Block:0x100bfb688>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100bfb688>
Parent is #<Asciidoc::Section:0x100c09bc0>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100bfb688>
Rendering block #<Asciidoc::Block:0x100bfb340>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100bfb340>
Parent is #<Asciidoc::Section:0x100c09bc0>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100bfb340>
Rendering block #<Asciidoc::Section:0x100bfaff8>
Now rendering section for #<Asciidoc::Section:0x100bfaff8>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section is #<SectionTemplate:0x100ba2448>, object is #<Asciidoc::Section:0x100bfaff8>
Rendering block #<Asciidoc::Block:0x100bf9d60>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100bf9d60>
Parent is #<Asciidoc::Section:0x100bfaff8>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100bf9d60>
Rendering block #<Asciidoc::Block:0x100bf9928>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100bf9928>
Parent is #<Asciidoc::Section:0x100bfaff8>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100bf9928>
Rendering block #<Asciidoc::Block:0x100bf9518>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100bf9518>
Parent is #<Asciidoc::Section:0x100bfaff8>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100bf9518>
Rendering block #<Asciidoc::Block:0x100bf90e0>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100bf90e0>
Parent is #<Asciidoc::Section:0x100bfaff8>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100bf90e0>
Rendering block #<Asciidoc::Block:0x100bf9d60>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100bf9d60>
Parent is #<Asciidoc::Section:0x100bfaff8>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100bf9d60>
Rendering block #<Asciidoc::Block:0x100bf9928>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100bf9928>
Parent is #<Asciidoc::Section:0x100bfaff8>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100bf9928>
Rendering block #<Asciidoc::Block:0x100bf9518>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100bf9518>
Parent is #<Asciidoc::Section:0x100bfaff8>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100bf9518>
Rendering block #<Asciidoc::Block:0x100bf90e0>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100bf90e0>
Parent is #<Asciidoc::Section:0x100bfaff8>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100bf90e0>
Rendering block #<Asciidoc::Section:0x100bf8ca8>
Now rendering section for #<Asciidoc::Section:0x100bf8ca8>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section is #<SectionTemplate:0x100ba2448>, object is #<Asciidoc::Section:0x100bf8ca8>
Rendering block #<Asciidoc::Block:0x100bf49c8>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100bf49c8>
Parent is #<Asciidoc::Section:0x100bf8ca8>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100bf49c8>
Rendering block #<Asciidoc::Block:0x100bf4568>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100bf4568>
Parent is #<Asciidoc::Section:0x100bf8ca8>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100bf4568>
Rendering block #<Asciidoc::Section:0x100bf4220>
Now rendering section for #<Asciidoc::Section:0x100bf4220>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section is #<SectionTemplate:0x100ba2448>, object is #<Asciidoc::Section:0x100bf4220>
Rendering block #<Asciidoc::Block:0x100bf2e98>
Now attempting to render for ulist my own bad #<Asciidoc::Block:0x100bf2e98>
Parent is #<Asciidoc::Section:0x100bf4220>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_ulist is #<SectionUlistTemplate:0x100ba13e0>, object is #<Asciidoc::Block:0x100bf2e98>
Now attempting to render for literal my own bad #<Asciidoc::Block:0x100bf0698>
Parent is #<Asciidoc::Block:0x100bf2e98>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_literal is #<SectionLiteralTemplate:0x100ba1db8>, object is #<Asciidoc::Block:0x100bf0698>
Now attempting to render for literal my own bad #<Asciidoc::Block:0x100bef928>
Parent is #<Asciidoc::Block:0x100bf2e98>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_literal is #<SectionLiteralTemplate:0x100ba1db8>, object is #<Asciidoc::Block:0x100bef928>
Rendering block #<Asciidoc::Block:0x100bf2e98>
Now attempting to render for ulist my own bad #<Asciidoc::Block:0x100bf2e98>
Parent is #<Asciidoc::Section:0x100bf4220>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_ulist is #<SectionUlistTemplate:0x100ba13e0>, object is #<Asciidoc::Block:0x100bf2e98>
Now attempting to render for literal my own bad #<Asciidoc::Block:0x100bf0698>
Parent is #<Asciidoc::Block:0x100bf2e98>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_literal is #<SectionLiteralTemplate:0x100ba1db8>, object is #<Asciidoc::Block:0x100bf0698>
Now attempting to render for literal my own bad #<Asciidoc::Block:0x100bef928>
Parent is #<Asciidoc::Block:0x100bf2e98>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_literal is #<SectionLiteralTemplate:0x100ba1db8>, object is #<Asciidoc::Block:0x100bef928>
Rendering block #<Asciidoc::Section:0x100beeaa0>
Now rendering section for #<Asciidoc::Section:0x100beeaa0>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section is #<SectionTemplate:0x100ba2448>, object is #<Asciidoc::Section:0x100beeaa0>
Rendering block #<Asciidoc::Block:0x100bed600>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100bed600>
Parent is #<Asciidoc::Section:0x100beeaa0>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100bed600>
Rendering block #<Asciidoc::Block:0x100bed380>
Now attempting to render for ulist my own bad #<Asciidoc::Block:0x100bed380>
Parent is #<Asciidoc::Section:0x100beeaa0>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_ulist is #<SectionUlistTemplate:0x100ba13e0>, object is #<Asciidoc::Block:0x100bed380>
Rendering block #<Asciidoc::Block:0x100bed600>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100bed600>
Parent is #<Asciidoc::Section:0x100beeaa0>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100bed600>
Rendering block #<Asciidoc::Block:0x100bed380>
Now attempting to render for ulist my own bad #<Asciidoc::Block:0x100bed380>
Parent is #<Asciidoc::Section:0x100beeaa0>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_ulist is #<SectionUlistTemplate:0x100ba13e0>, object is #<Asciidoc::Block:0x100bed380>
Rendering block #<Asciidoc::Section:0x100bea6d0>
Now rendering section for #<Asciidoc::Section:0x100bea6d0>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section is #<SectionTemplate:0x100ba2448>, object is #<Asciidoc::Section:0x100bea6d0>
Rendering block #<Asciidoc::Block:0x100be91b8>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100be91b8>
Parent is #<Asciidoc::Section:0x100bea6d0>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100be91b8>
Rendering block #<Asciidoc::Block:0x100be8d80>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100be8d80>
Parent is #<Asciidoc::Section:0x100bea6d0>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100be8d80>
Rendering block #<Asciidoc::Block:0x100be91b8>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100be91b8>
Parent is #<Asciidoc::Section:0x100bea6d0>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100be91b8>
Rendering block #<Asciidoc::Block:0x100be8d80>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100be8d80>
Parent is #<Asciidoc::Section:0x100bea6d0>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100be8d80>
Rendering block #<Asciidoc::Section:0x100be88f8>
Now rendering section for #<Asciidoc::Section:0x100be88f8>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section is #<SectionTemplate:0x100ba2448>, object is #<Asciidoc::Section:0x100be88f8>
Rendering block #<Asciidoc::Block:0x100be7548>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100be7548>
Parent is #<Asciidoc::Section:0x100be88f8>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100be7548>
Rendering block #<Asciidoc::Block:0x100be72c8>
Now attempting to render for ulist my own bad #<Asciidoc::Block:0x100be72c8>
Parent is #<Asciidoc::Section:0x100be88f8>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_ulist is #<SectionUlistTemplate:0x100ba13e0>, object is #<Asciidoc::Block:0x100be72c8>
Rendering block #<Asciidoc::Block:0x100be7548>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100be7548>
Parent is #<Asciidoc::Section:0x100be88f8>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100be7548>
Rendering block #<Asciidoc::Block:0x100be72c8>
Now attempting to render for ulist my own bad #<Asciidoc::Block:0x100be72c8>
Parent is #<Asciidoc::Section:0x100be88f8>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_ulist is #<SectionUlistTemplate:0x100ba13e0>, object is #<Asciidoc::Block:0x100be72c8>
Rendering block #<Asciidoc::Section:0x100be5f40>
Now rendering section for #<Asciidoc::Section:0x100be5f40>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section is #<SectionTemplate:0x100ba2448>, object is #<Asciidoc::Section:0x100be5f40>
Rendering block #<Asciidoc::Block:0x100be4e10>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100be4e10>
Parent is #<Asciidoc::Section:0x100be5f40>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100be4e10>
Rendering block #<Asciidoc::Block:0x100be4e10>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100be4e10>
Parent is #<Asciidoc::Section:0x100be5f40>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100be4e10>
Rendering block #<Asciidoc::Section:0x100be4ac8>
Now rendering section for #<Asciidoc::Section:0x100be4ac8>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section is #<SectionTemplate:0x100ba2448>, object is #<Asciidoc::Section:0x100be4ac8>
Rendering block #<Asciidoc::Block:0x100be4118>
Now attempting to render for ulist my own bad #<Asciidoc::Block:0x100be4118>
Parent is #<Asciidoc::Section:0x100be4ac8>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_ulist is #<SectionUlistTemplate:0x100ba13e0>, object is #<Asciidoc::Block:0x100be4118>
Rendering block #<Asciidoc::Block:0x100be4118>
Now attempting to render for ulist my own bad #<Asciidoc::Block:0x100be4118>
Parent is #<Asciidoc::Section:0x100be4ac8>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_ulist is #<SectionUlistTemplate:0x100ba13e0>, object is #<Asciidoc::Block:0x100be4118>
Rendering block #<Asciidoc::Block:0x100bf49c8>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100bf49c8>
Parent is #<Asciidoc::Section:0x100bf8ca8>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100bf49c8>
Rendering block #<Asciidoc::Block:0x100bf4568>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100bf4568>
Parent is #<Asciidoc::Section:0x100bf8ca8>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100bf4568>
Rendering block #<Asciidoc::Section:0x100bf4220>
Now rendering section for #<Asciidoc::Section:0x100bf4220>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section is #<SectionTemplate:0x100ba2448>, object is #<Asciidoc::Section:0x100bf4220>
Rendering block #<Asciidoc::Block:0x100bf2e98>
Now attempting to render for ulist my own bad #<Asciidoc::Block:0x100bf2e98>
Parent is #<Asciidoc::Section:0x100bf4220>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_ulist is #<SectionUlistTemplate:0x100ba13e0>, object is #<Asciidoc::Block:0x100bf2e98>
Now attempting to render for literal my own bad #<Asciidoc::Block:0x100bf0698>
Parent is #<Asciidoc::Block:0x100bf2e98>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_literal is #<SectionLiteralTemplate:0x100ba1db8>, object is #<Asciidoc::Block:0x100bf0698>
Now attempting to render for literal my own bad #<Asciidoc::Block:0x100bef928>
Parent is #<Asciidoc::Block:0x100bf2e98>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_literal is #<SectionLiteralTemplate:0x100ba1db8>, object is #<Asciidoc::Block:0x100bef928>
Rendering block #<Asciidoc::Block:0x100bf2e98>
Now attempting to render for ulist my own bad #<Asciidoc::Block:0x100bf2e98>
Parent is #<Asciidoc::Section:0x100bf4220>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_ulist is #<SectionUlistTemplate:0x100ba13e0>, object is #<Asciidoc::Block:0x100bf2e98>
Now attempting to render for literal my own bad #<Asciidoc::Block:0x100bf0698>
Parent is #<Asciidoc::Block:0x100bf2e98>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_literal is #<SectionLiteralTemplate:0x100ba1db8>, object is #<Asciidoc::Block:0x100bf0698>
Now attempting to render for literal my own bad #<Asciidoc::Block:0x100bef928>
Parent is #<Asciidoc::Block:0x100bf2e98>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_literal is #<SectionLiteralTemplate:0x100ba1db8>, object is #<Asciidoc::Block:0x100bef928>
Rendering block #<Asciidoc::Section:0x100beeaa0>
Now rendering section for #<Asciidoc::Section:0x100beeaa0>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section is #<SectionTemplate:0x100ba2448>, object is #<Asciidoc::Section:0x100beeaa0>
Rendering block #<Asciidoc::Block:0x100bed600>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100bed600>
Parent is #<Asciidoc::Section:0x100beeaa0>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100bed600>
Rendering block #<Asciidoc::Block:0x100bed380>
Now attempting to render for ulist my own bad #<Asciidoc::Block:0x100bed380>
Parent is #<Asciidoc::Section:0x100beeaa0>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_ulist is #<SectionUlistTemplate:0x100ba13e0>, object is #<Asciidoc::Block:0x100bed380>
Rendering block #<Asciidoc::Block:0x100bed600>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100bed600>
Parent is #<Asciidoc::Section:0x100beeaa0>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100bed600>
Rendering block #<Asciidoc::Block:0x100bed380>
Now attempting to render for ulist my own bad #<Asciidoc::Block:0x100bed380>
Parent is #<Asciidoc::Section:0x100beeaa0>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_ulist is #<SectionUlistTemplate:0x100ba13e0>, object is #<Asciidoc::Block:0x100bed380>
Rendering block #<Asciidoc::Section:0x100bea6d0>
Now rendering section for #<Asciidoc::Section:0x100bea6d0>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section is #<SectionTemplate:0x100ba2448>, object is #<Asciidoc::Section:0x100bea6d0>
Rendering block #<Asciidoc::Block:0x100be91b8>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100be91b8>
Parent is #<Asciidoc::Section:0x100bea6d0>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100be91b8>
Rendering block #<Asciidoc::Block:0x100be8d80>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100be8d80>
Parent is #<Asciidoc::Section:0x100bea6d0>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100be8d80>
Rendering block #<Asciidoc::Block:0x100be91b8>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100be91b8>
Parent is #<Asciidoc::Section:0x100bea6d0>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100be91b8>
Rendering block #<Asciidoc::Block:0x100be8d80>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100be8d80>
Parent is #<Asciidoc::Section:0x100bea6d0>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100be8d80>
Rendering block #<Asciidoc::Section:0x100be88f8>
Now rendering section for #<Asciidoc::Section:0x100be88f8>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section is #<SectionTemplate:0x100ba2448>, object is #<Asciidoc::Section:0x100be88f8>
Rendering block #<Asciidoc::Block:0x100be7548>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100be7548>
Parent is #<Asciidoc::Section:0x100be88f8>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100be7548>
Rendering block #<Asciidoc::Block:0x100be72c8>
Now attempting to render for ulist my own bad #<Asciidoc::Block:0x100be72c8>
Parent is #<Asciidoc::Section:0x100be88f8>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_ulist is #<SectionUlistTemplate:0x100ba13e0>, object is #<Asciidoc::Block:0x100be72c8>
Rendering block #<Asciidoc::Block:0x100be7548>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100be7548>
Parent is #<Asciidoc::Section:0x100be88f8>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100be7548>
Rendering block #<Asciidoc::Block:0x100be72c8>
Now attempting to render for ulist my own bad #<Asciidoc::Block:0x100be72c8>
Parent is #<Asciidoc::Section:0x100be88f8>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_ulist is #<SectionUlistTemplate:0x100ba13e0>, object is #<Asciidoc::Block:0x100be72c8>
Rendering block #<Asciidoc::Section:0x100be5f40>
Now rendering section for #<Asciidoc::Section:0x100be5f40>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section is #<SectionTemplate:0x100ba2448>, object is #<Asciidoc::Section:0x100be5f40>
Rendering block #<Asciidoc::Block:0x100be4e10>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100be4e10>
Parent is #<Asciidoc::Section:0x100be5f40>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100be4e10>
Rendering block #<Asciidoc::Block:0x100be4e10>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100be4e10>
Parent is #<Asciidoc::Section:0x100be5f40>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100be4e10>
Rendering block #<Asciidoc::Section:0x100be4ac8>
Now rendering section for #<Asciidoc::Section:0x100be4ac8>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section is #<SectionTemplate:0x100ba2448>, object is #<Asciidoc::Section:0x100be4ac8>
Rendering block #<Asciidoc::Block:0x100be4118>
Now attempting to render for ulist my own bad #<Asciidoc::Block:0x100be4118>
Parent is #<Asciidoc::Section:0x100be4ac8>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_ulist is #<SectionUlistTemplate:0x100ba13e0>, object is #<Asciidoc::Block:0x100be4118>
Rendering block #<Asciidoc::Block:0x100be4118>
Now attempting to render for ulist my own bad #<Asciidoc::Block:0x100be4118>
Parent is #<Asciidoc::Section:0x100be4ac8>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_ulist is #<SectionUlistTemplate:0x100ba13e0>, object is #<Asciidoc::Block:0x100be4118>
Rendering block #<Asciidoc::Section:0x100be2d90>
Now rendering section for #<Asciidoc::Section:0x100be2d90>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section is #<SectionTemplate:0x100ba2448>, object is #<Asciidoc::Section:0x100be2d90>
Rendering block #<Asciidoc::Block:0x100be19b8>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100be19b8>
Parent is #<Asciidoc::Section:0x100be2d90>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100be19b8>
Rendering block #<Asciidoc::Block:0x100be19b8>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100be19b8>
Parent is #<Asciidoc::Section:0x100be2d90>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100be19b8>
Rendering block #<Asciidoc::Section:0x100be1580>
Now rendering section for #<Asciidoc::Section:0x100be1580>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section is #<SectionTemplate:0x100ba2448>, object is #<Asciidoc::Section:0x100be1580>
Rendering block #<Asciidoc::Block:0x100be01a8>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100be01a8>
Parent is #<Asciidoc::Section:0x100be1580>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100be01a8>
Rendering block #<Asciidoc::Block:0x100be01a8>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100be01a8>
Parent is #<Asciidoc::Section:0x100be1580>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100be01a8>
Rendering block #<Asciidoc::Section:0x100bdfd70>
Now rendering section for #<Asciidoc::Section:0x100bdfd70>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section is #<SectionTemplate:0x100ba2448>, object is #<Asciidoc::Section:0x100bdfd70>
Rendering block #<Asciidoc::Block:0x100bde8d0>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100bde8d0>
Parent is #<Asciidoc::Section:0x100bdfd70>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100bde8d0>
Rendering block #<Asciidoc::Block:0x100bde8d0>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100bde8d0>
Parent is #<Asciidoc::Section:0x100bdfd70>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100bde8d0>
Rendering block #<Asciidoc::Section:0x100bde380>
Now rendering section for #<Asciidoc::Section:0x100bde380>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section is #<SectionTemplate:0x100ba2448>, object is #<Asciidoc::Section:0x100bde380>
Rendering block #<Asciidoc::Block:0x100bdcf30>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100bdcf30>
Parent is #<Asciidoc::Section:0x100bde380>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100bdcf30>
Rendering block #<Asciidoc::Block:0x100bdcaf8>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100bdcaf8>
Parent is #<Asciidoc::Section:0x100bde380>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100bdcaf8>
Rendering block #<Asciidoc::Block:0x100bdc6c0>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100bdc6c0>
Parent is #<Asciidoc::Section:0x100bde380>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100bdc6c0>
Rendering block #<Asciidoc::Block:0x100bdcf30>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100bdcf30>
Parent is #<Asciidoc::Section:0x100bde380>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100bdcf30>
Rendering block #<Asciidoc::Block:0x100bdcaf8>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100bdcaf8>
Parent is #<Asciidoc::Section:0x100bde380>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100bdcaf8>
Rendering block #<Asciidoc::Block:0x100bdc6c0>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100bdc6c0>
Parent is #<Asciidoc::Section:0x100bde380>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100bdc6c0>
Rendering block #<Asciidoc::Section:0x100bdc288>
Now rendering section for #<Asciidoc::Section:0x100bdc288>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section is #<SectionTemplate:0x100ba2448>, object is #<Asciidoc::Section:0x100bdc288>
Rendering block #<Asciidoc::Block:0x100bdae88>
Now attempting to render for ulist my own bad #<Asciidoc::Block:0x100bdae88>
Parent is #<Asciidoc::Section:0x100bdc288>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_ulist is #<SectionUlistTemplate:0x100ba13e0>, object is #<Asciidoc::Block:0x100bdae88>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100bda118>
Parent is #<Asciidoc::Block:0x100bdae88>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100bda118>
Rendering block #<Asciidoc::Block:0x100bdae88>
Now attempting to render for ulist my own bad #<Asciidoc::Block:0x100bdae88>
Parent is #<Asciidoc::Section:0x100bdc288>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_ulist is #<SectionUlistTemplate:0x100ba13e0>, object is #<Asciidoc::Block:0x100bdae88>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100bda118>
Parent is #<Asciidoc::Block:0x100bdae88>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100bda118>
Rendering block #<Asciidoc::Section:0x100bd65b8>
Now rendering section for #<Asciidoc::Section:0x100bd65b8>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section is #<SectionTemplate:0x100ba2448>, object is #<Asciidoc::Section:0x100bd65b8>
Rendering block #<Asciidoc::Block:0x100bd4fd8>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100bd4fd8>
Parent is #<Asciidoc::Section:0x100bd65b8>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100bd4fd8>
Rendering block #<Asciidoc::Block:0x100bd4fd8>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100bd4fd8>
Parent is #<Asciidoc::Section:0x100bd65b8>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100bd4fd8>
Rendering block #<Asciidoc::Section:0x100bd4a88>
Now rendering section for #<Asciidoc::Section:0x100bd4a88>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section is #<SectionTemplate:0x100ba2448>, object is #<Asciidoc::Section:0x100bd4a88>
Rendering block #<Asciidoc::Block:0x100bd2328>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100bd2328>
Parent is #<Asciidoc::Section:0x100bd4a88>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100bd2328>
Rendering block #<Asciidoc::Block:0x100bd20a8>
Now attempting to render for ulist my own bad #<Asciidoc::Block:0x100bd20a8>
Parent is #<Asciidoc::Section:0x100bd4a88>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_ulist is #<SectionUlistTemplate:0x100ba13e0>, object is #<Asciidoc::Block:0x100bd20a8>
Rendering block #<Asciidoc::Block:0x100bc2568>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100bc2568>
Parent is #<Asciidoc::Section:0x100bd4a88>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100bc2568>
Rendering block #<Asciidoc::Block:0x100bd2328>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100bd2328>
Parent is #<Asciidoc::Section:0x100bd4a88>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100bd2328>
Rendering block #<Asciidoc::Block:0x100bd20a8>
Now attempting to render for ulist my own bad #<Asciidoc::Block:0x100bd20a8>
Parent is #<Asciidoc::Section:0x100bd4a88>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_ulist is #<SectionUlistTemplate:0x100ba13e0>, object is #<Asciidoc::Block:0x100bd20a8>
Rendering block #<Asciidoc::Block:0x100bc2568>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100bc2568>
Parent is #<Asciidoc::Section:0x100bd4a88>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100bc2568>
Rendering block #<Asciidoc::Section:0x100bc2018>
Now rendering section for #<Asciidoc::Section:0x100bc2018>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section is #<SectionTemplate:0x100ba2448>, object is #<Asciidoc::Section:0x100bc2018>
Rendering block #<Asciidoc::Block:0x100bbfa20>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100bbfa20>
Parent is #<Asciidoc::Section:0x100bc2018>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100bbfa20>
Rendering block #<Asciidoc::Block:0x100bbf7a0>
Now attempting to render for ulist my own bad #<Asciidoc::Block:0x100bbf7a0>
Parent is #<Asciidoc::Section:0x100bc2018>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_ulist is #<SectionUlistTemplate:0x100ba13e0>, object is #<Asciidoc::Block:0x100bbf7a0>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100bb9f30>
Parent is #<Asciidoc::Block:0x100bbf7a0>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100bb9f30>
Rendering block #<Asciidoc::Block:0x100bab340>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100bab340>
Parent is #<Asciidoc::Section:0x100bc2018>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100bab340>
Rendering block #<Asciidoc::Block:0x100bbfa20>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100bbfa20>
Parent is #<Asciidoc::Section:0x100bc2018>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100bbfa20>
Rendering block #<Asciidoc::Block:0x100bbf7a0>
Now attempting to render for ulist my own bad #<Asciidoc::Block:0x100bbf7a0>
Parent is #<Asciidoc::Section:0x100bc2018>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_ulist is #<SectionUlistTemplate:0x100ba13e0>, object is #<Asciidoc::Block:0x100bbf7a0>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100bb9f30>
Parent is #<Asciidoc::Block:0x100bbf7a0>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100bb9f30>
Rendering block #<Asciidoc::Block:0x100bab340>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100bab340>
Parent is #<Asciidoc::Section:0x100bc2018>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100bab340>
Rendering block #<Asciidoc::Section:0x100baaf08>
Now rendering section for #<Asciidoc::Section:0x100baaf08>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section is #<SectionTemplate:0x100ba2448>, object is #<Asciidoc::Section:0x100baaf08>
Rendering block #<Asciidoc::Block:0x100ba9cc0>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100ba9cc0>
Parent is #<Asciidoc::Section:0x100baaf08>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100ba9cc0>
Rendering block #<Asciidoc::Block:0x100ba9cc0>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100ba9cc0>
Parent is #<Asciidoc::Section:0x100baaf08>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100ba9cc0>
Rendering block #<Asciidoc::Section:0x100ba9770>
Now rendering section for #<Asciidoc::Section:0x100ba9770>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section is #<SectionTemplate:0x100ba2448>, object is #<Asciidoc::Section:0x100ba9770>
Rendering block #<Asciidoc::Block:0x100ba80c8>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100ba80c8>
Parent is #<Asciidoc::Section:0x100ba9770>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100ba80c8>
Rendering block #<Asciidoc::Block:0x100ba7c40>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100ba7c40>
Parent is #<Asciidoc::Section:0x100ba9770>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100ba7c40>
Rendering block #<Asciidoc::Block:0x100ba7830>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100ba7830>
Parent is #<Asciidoc::Section:0x100ba9770>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100ba7830>
Rendering block #<Asciidoc::Block:0x100ba80c8>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100ba80c8>
Parent is #<Asciidoc::Section:0x100ba9770>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100ba80c8>
Rendering block #<Asciidoc::Block:0x100ba7c40>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100ba7c40>
Parent is #<Asciidoc::Section:0x100ba9770>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100ba7c40>
Rendering block #<Asciidoc::Block:0x100ba7830>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100ba7830>
Parent is #<Asciidoc::Section:0x100ba9770>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100ba7830>
Rendering block #<Asciidoc::Section:0x100ba73f8>
Now rendering section for #<Asciidoc::Section:0x100ba73f8>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section is #<SectionTemplate:0x100ba2448>, object is #<Asciidoc::Section:0x100ba73f8>
Rendering block #<Asciidoc::Block:0x100ba6200>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100ba6200>
Parent is #<Asciidoc::Section:0x100ba73f8>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100ba6200>
Rendering block #<Asciidoc::Block:0x100ba5f80>
Now attempting to render for ulist my own bad #<Asciidoc::Block:0x100ba5f80>
Parent is #<Asciidoc::Section:0x100ba73f8>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_ulist is #<SectionUlistTemplate:0x100ba13e0>, object is #<Asciidoc::Block:0x100ba5f80>
Rendering block #<Asciidoc::Block:0x100ba47c0>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100ba47c0>
Parent is #<Asciidoc::Section:0x100ba73f8>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100ba47c0>
Rendering block #<Asciidoc::Block:0x100ba4310>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100ba4310>
Parent is #<Asciidoc::Section:0x100ba73f8>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100ba4310>
Rendering block #<Asciidoc::Block:0x100ba6200>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100ba6200>
Parent is #<Asciidoc::Section:0x100ba73f8>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100ba6200>
Rendering block #<Asciidoc::Block:0x100ba5f80>
Now attempting to render for ulist my own bad #<Asciidoc::Block:0x100ba5f80>
Parent is #<Asciidoc::Section:0x100ba73f8>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_ulist is #<SectionUlistTemplate:0x100ba13e0>, object is #<Asciidoc::Block:0x100ba5f80>
Rendering block #<Asciidoc::Block:0x100ba47c0>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100ba47c0>
Parent is #<Asciidoc::Section:0x100ba73f8>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100ba47c0>
Rendering block #<Asciidoc::Block:0x100ba4310>
Now attempting to render for paragraph my own bad #<Asciidoc::Block:0x100ba4310>
Parent is #<Asciidoc::Section:0x100ba73f8>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
Renderer is #<Asciidoc::Renderer:0x100ba4130>
Section#renderer:  Looking for my renderer up in #<Asciidoc::Document:0x100c0a138>
View for section_paragraph is #<SectionParagraphTemplate:0x100ba1a70>, object is #<Asciidoc::Block:0x100ba4310>
#<Asciidoc::Document:0x100c0a138
    @defines = {
        "description" => "AsciiDoc is a text document format for writing notes, documentation, articles, books, ebooks, slideshows,   web pages, man pages and blogs.  AsciiDoc files can betranslated to many formats including HTML, PDF, EPUB, man page.",
           "keywords" => "AsciiDoc, DocBook, EPUB, PDF, ebooks, slideshow, slidy, man page"
    },
    @lines = [],
    attr_reader :preamble = #<Asciidoc::Section:0x100c09c60
        @parent = ...Asciidoc::Document...,
        attr_reader :blocks = [
            [0] #<Asciidoc::Block:0x100bfb688
                @parent = #<Asciidoc::Section:0x100c09bc0
                    @parent = ...Asciidoc::Document...,
                    attr_accessor :level = 0,
                    attr_accessor :name = "AsciiDoc Home Page",
                    attr_reader :blocks = [
                        [ 0] #<Asciidoc::Section:0x100bfaff8
                            @parent = ...Asciidoc::Document...,
                            attr_accessor :anchor = nil,
                            attr_accessor :caption = nil,
                            attr_accessor :level = 1,
                            attr_accessor :name = "Introduction",
                            attr_accessor :title = nil,
                            attr_reader :blocks = [
                                [0] #<Asciidoc::Block:0x100bf9d60
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "{description}\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >,
                                [1] #<Asciidoc::Block:0x100bf9928
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "AsciiDoc is highly configurable: both the AsciiDoc source file syntax\n",
                                        [1] "and the backend output markups (which can be almost any type of\n",
                                        [2] "SGML/XML markup) can be customized and extended by the user.\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >,
                                [2] #<Asciidoc::Block:0x100bf9518
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "AsciiDoc is free software and is licenced under the terms of the 'GNU\n",
                                        [1] "General Public License version 2' (GPLv2).\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >,
                                [3] #<Asciidoc::Block:0x100bf90e0
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "TIP: The pages you are reading were written using AsciiDoc, to view\n",
                                        [1] "the corresponding AsciiDoc source click on the *Page Source* menu item\n",
                                        [2] "in the left hand margin.\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >
                            ]
                        >,
                        [ 1] #<Asciidoc::Section:0x100bf8ca8
                            @parent = ...Asciidoc::Document...,
                            attr_accessor :anchor = nil,
                            attr_accessor :caption = nil,
                            attr_accessor :level = 1,
                            attr_accessor :name = "Overview and Examples",
                            attr_accessor :title = nil,
                            attr_reader :blocks = [
                                [0] #<Asciidoc::Block:0x100bf49c8
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "You write an AsciiDoc document the same way you would write a\n",
                                        [1] "normal text document, there are no markup tags or weird format\n",
                                        [2] "notations. AsciiDoc files are designed to be viewed, edited and\n",
                                        [3] "printed directly or translated to other presentation formats using\n",
                                        [4] "the asciidoc(1) command.\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >,
                                [1] #<Asciidoc::Block:0x100bf4568
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "The asciidoc(1) command translates AsciiDoc files to HTML, XHTML and\n",
                                        [1] "DocBook markups.  DocBook can be post-processed to presentation\n",
                                        [2] "formats such as HTML, PDF, EPUB, DVI, LaTeX, roff, and Postscript\n",
                                        [3] "using readily available Open Source tools.\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >,
                                [2] #<Asciidoc::Section:0x100bf4220
                                    @parent = ...Asciidoc::Document...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :caption = nil,
                                    attr_accessor :level = 2,
                                    attr_accessor :name = "Example Articles",
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [
                                        [0] #<Asciidoc::Block:0x100bf2e98
                                            @parent = ...Asciidoc::Section...,
                                            attr_accessor :anchor = nil,
                                            attr_accessor :buffer = [
                                                [0] #<Asciidoc::ListItem:0x100bf2dd0
                                                    attr_accessor :content = "This XHTML version of the\nlink:asciidoc.css-embedded.html[AsciiDoc User Guide]\nwas generated by AsciiDoc from\nlink:asciidoc.txt[this AsciiDoc file].",
                                                    attr_reader :blocks = []
                                                >,
                                                [1] #<Asciidoc::ListItem:0x100bf23f8
                                                    attr_accessor :content = "Here's the link:asciidoc.html[same document] created by first\ngenerating DocBook markup using AsciiDoc and then converting the\nDocBook markup to HTML using 'DocBook XSL Stylesheets'.",
                                                    attr_reader :blocks = []
                                                >,
                                                [2] #<Asciidoc::ListItem:0x100bf1ac0
                                                    attr_accessor :content = "The User Guide again, this time a\nlink:chunked/index.html[chunked version].",
                                                    attr_reader :blocks = []
                                                >,
                                                [3] #<Asciidoc::ListItem:0x100bf1228
                                                    attr_accessor :content = "AsciiDoc generated this link:article-standalone.html[stand-alone\nHTML file] containing embedded CSS, JavaScript and images from this\nlink:article.txt[AsciiDoc article template] with this command:",
                                                    attr_reader :blocks = [
                                                        [0] #<Asciidoc::Block:0x100bf0698
                                                            @parent = ...Asciidoc::Block...,
                                                            attr_accessor :anchor = nil,
                                                            attr_accessor :buffer = [
                                                                [0] "  asciidoc -a data-uri -a icons -a toc -a max-width=55em article.txt\n"
                                                            ],
                                                            attr_accessor :caption = nil,
                                                            attr_accessor :title = nil,
                                                            attr_reader :blocks = [],
                                                            attr_reader :context = :literal
                                                        >
                                                    ]
                                                >,
                                                [4] #<Asciidoc::ListItem:0x100bf0490
                                                    attr_accessor :content = "The same link:article.txt[AsciiDoc article template] generated\nlink:article-html5-toc2.html[this HTML 5] (the 'toc2' attribute puts\na table of contents in the left margin) from this command:",
                                                    attr_reader :blocks = [
                                                        [0] #<Asciidoc::Block:0x100bef928
                                                            @parent = ...Asciidoc::Block...,
                                                            attr_accessor :anchor = nil,
                                                            attr_accessor :buffer = [
                                                                [0] "  asciidoc -b html5 -a icons -a toc2 -a theme=flask article.txt\n"
                                                            ],
                                                            attr_accessor :caption = nil,
                                                            attr_accessor :title = nil,
                                                            attr_reader :blocks = [],
                                                            attr_reader :context = :literal
                                                        >
                                                    ]
                                                >,
                                                [5] #<Asciidoc::ListItem:0x100bef720
                                                    attr_accessor :content = "The same link:article.txt[AsciiDoc article template] produced\nthis link:article.html[HTML file] and this\nlink:article.pdf[PDF file] via DocBook markup generated by AsciiDoc.",
                                                    attr_reader :blocks = []
                                                >
                                            ],
                                            attr_accessor :caption = nil,
                                            attr_accessor :title = nil,
                                            attr_reader :blocks = [],
                                            attr_reader :context = :ulist
                                        >
                                    ]
                                >,
                                [3] #<Asciidoc::Section:0x100beeaa0
                                    @parent = ...Asciidoc::Document...,
                                    attr_accessor :anchor = "X7",
                                    attr_accessor :caption = nil,
                                    attr_accessor :level = 2,
                                    attr_accessor :name = "Example Books",
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [
                                        [0] #<Asciidoc::Block:0x100bed600
                                            @parent = ...Asciidoc::Section...,
                                            attr_accessor :anchor = nil,
                                            attr_accessor :buffer = [
                                                [0] "AsciiDoc markup supports all the standard DocBook frontmatter and\n",
                                                [1] "backmatter sections (dedication, preface, bibliography, glossary,\n",
                                                [2] "index, colophon) plus footnotes and index entries.\n"
                                            ],
                                            attr_accessor :caption = nil,
                                            attr_accessor :title = nil,
                                            attr_reader :blocks = [],
                                            attr_reader :context = :paragraph
                                        >,
                                        [1] #<Asciidoc::Block:0x100bed380
                                            @parent = ...Asciidoc::Section...,
                                            attr_accessor :anchor = nil,
                                            attr_accessor :buffer = [
                                                [0] #<Asciidoc::ListItem:0x100bed2b8
                                                    attr_accessor :content = "This link:book.txt[AsciiDoc book] produced link:book.html[this HTML\nfile] using the 'DocBook XSL Stylesheets'.",
                                                    attr_reader :blocks = []
                                                >,
                                                [1] #<Asciidoc::ListItem:0x100beca98
                                                    attr_accessor :content = "The link:asciidoc.pdf[PDF formatted AsciiDoc User Guide] was\ngenerated from asciidoc(1) DocBook output.",
                                                    attr_reader :blocks = []
                                                >,
                                                [2] #<Asciidoc::ListItem:0x100bec278
                                                    attr_accessor :content = "The link:asciidoc.epub[EPUB formatted AsciiDoc User Guide] was\ngenerated using link:a2x.1.html[a2x].",
                                                    attr_reader :blocks = []
                                                >,
                                                [3] #<Asciidoc::ListItem:0x100beba58
                                                    attr_accessor :content = "This link:book.epub[EPUB formatted book skeleton] was generated\nusing link:a2x.1.html[a2x].",
                                                    attr_reader :blocks = []
                                                >,
                                                [4] #<Asciidoc::ListItem:0x100beb238
                                                    attr_accessor :content = "This link:book-multi.txt[multi-part AsciiDoc book] produced\nlink:book-multi.html[this HTML file] using the 'DocBook XSL\nStylesheets'.",
                                                    attr_reader :blocks = []
                                                >
                                            ],
                                            attr_accessor :caption = nil,
                                            attr_accessor :title = nil,
                                            attr_reader :blocks = [],
                                            attr_reader :context = :ulist
                                        >
                                    ]
                                >,
                                [4] #<Asciidoc::Section:0x100bea6d0
                                    @parent = ...Asciidoc::Document...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :caption = nil,
                                    attr_accessor :level = 2,
                                    attr_accessor :name = "Example UNIX Man Pages",
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [
                                        [0] #<Asciidoc::Block:0x100be91b8
                                            @parent = ...Asciidoc::Section...,
                                            attr_accessor :anchor = nil,
                                            attr_accessor :buffer = [
                                                [0] "HTML formatted AsciiDoc man pages\n",
                                                [1] "link:asciidoc.1.css-embedded.html[with stylesheets] and\n",
                                                [2] "link:asciidoc.1.html[without stylesheets] were generated by AsciiDoc\n",
                                                [3] "from link:asciidoc.1.txt[this file].\n"
                                            ],
                                            attr_accessor :caption = nil,
                                            attr_accessor :title = nil,
                                            attr_reader :blocks = [],
                                            attr_reader :context = :paragraph
                                        >,
                                        [1] #<Asciidoc::Block:0x100be8d80
                                            @parent = ...Asciidoc::Section...,
                                            attr_accessor :anchor = nil,
                                            attr_accessor :buffer = [
                                                [0] "This link:asciidoc.1[roff formatted  man page] was generated from\n",
                                                [1] "asciidoc(1) DocBook output using `xsltproc(1)` and DocBook XSL\n",
                                                [2] "Stylesheets.\n"
                                            ],
                                            attr_accessor :caption = nil,
                                            attr_accessor :title = nil,
                                            attr_reader :blocks = [],
                                            attr_reader :context = :paragraph
                                        >
                                    ]
                                >,
                                [5] #<Asciidoc::Section:0x100be88f8
                                    @parent = ...Asciidoc::Document...,
                                    attr_accessor :anchor = "X8",
                                    attr_accessor :caption = nil,
                                    attr_accessor :level = 2,
                                    attr_accessor :name = "Example Slideshows",
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [
                                        [0] #<Asciidoc::Block:0x100be7548
                                            @parent = ...Asciidoc::Section...,
                                            attr_accessor :anchor = nil,
                                            attr_accessor :buffer = [
                                                [0] "The http://www.w3.org/Talks/Tools/Slidy2/[Slidy] backend generates\n",
                                                [1] "HTML slideshows that can be viewed in any web browser.  What's nice is\n",
                                                [2] "that you can create completely self contained slideshows including\n",
                                                [3] "embedded images.\n"
                                            ],
                                            attr_accessor :caption = nil,
                                            attr_accessor :title = nil,
                                            attr_reader :blocks = [],
                                            attr_reader :context = :paragraph
                                        >,
                                        [1] #<Asciidoc::Block:0x100be72c8
                                            @parent = ...Asciidoc::Section...,
                                            attr_accessor :anchor = nil,
                                            attr_accessor :buffer = [
                                                [0] #<Asciidoc::ListItem:0x100be7200
                                                    attr_accessor :content = "Here is the link:slidy.html[slidy backend documentation] slideshow\nand here is it's link:slidy.txt[AsciiDoc source].",
                                                    attr_reader :blocks = []
                                                >,
                                                [1] #<Asciidoc::ListItem:0x100be69e0
                                                    attr_accessor :content = "An link:slidy-example.html[example slidy slideshow] and the\nlink:slidy-example.txt[AsciiDoc source].",
                                                    attr_reader :blocks = []
                                                >
                                            ],
                                            attr_accessor :caption = nil,
                                            attr_accessor :title = nil,
                                            attr_reader :blocks = [],
                                            attr_reader :context = :ulist
                                        >
                                    ]
                                >,
                                [6] #<Asciidoc::Section:0x100be5f40
                                    @parent = ...Asciidoc::Document...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :caption = nil,
                                    attr_accessor :level = 2,
                                    attr_accessor :name = "Example Web Site",
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [
                                        [0] #<Asciidoc::Block:0x100be4e10
                                            @parent = ...Asciidoc::Section...,
                                            attr_accessor :anchor = nil,
                                            attr_accessor :buffer = [
                                                [0] "The link:README-website.html[AsciiDoc website] is included in the\n",
                                                [1] "AsciiDoc distribution (in `./examples/website/`) as an example website\n",
                                                [2] "built using AsciiDoc.  See `./examples/website/README-website.txt`.\n"
                                            ],
                                            attr_accessor :caption = nil,
                                            attr_accessor :title = nil,
                                            attr_reader :blocks = [],
                                            attr_reader :context = :paragraph
                                        >
                                    ]
                                >,
                                [7] #<Asciidoc::Section:0x100be4ac8
                                    @parent = ...Asciidoc::Document...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :caption = nil,
                                    attr_accessor :level = 2,
                                    attr_accessor :name = "More examples",
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [
                                        [0] #<Asciidoc::Block:0x100be4118
                                            @parent = ...Asciidoc::Section...,
                                            attr_accessor :anchor = nil,
                                            attr_accessor :buffer = [
                                                [0] #<Asciidoc::ListItem:0x100be4050
                                                    attr_accessor :content = "See below: <<X6,'Documents written using AsciiDoc'>>.",
                                                    attr_reader :blocks = []
                                                >,
                                                [1] #<Asciidoc::ListItem:0x100be3880
                                                    attr_accessor :content = "Example link:newtables.html[Tables].",
                                                    attr_reader :blocks = []
                                                >
                                            ],
                                            attr_accessor :caption = nil,
                                            attr_accessor :title = nil,
                                            attr_reader :blocks = [],
                                            attr_reader :context = :ulist
                                        >
                                    ]
                                >
                            ]
                        >,
                        [ 2] #<Asciidoc::Section:0x100be2d90
                            @parent = ...Asciidoc::Document...,
                            attr_accessor :anchor = nil,
                            attr_accessor :caption = nil,
                            attr_accessor :level = 1,
                            attr_accessor :name = "eBook Publication",
                            attr_accessor :title = nil,
                            attr_reader :blocks = [
                                [0] #<Asciidoc::Block:0x100be19b8
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "The two most popular open eBook formats are\n",
                                        [1] "http://en.wikipedia.org/wiki/EPUB[EPUB] and PDF.\n",
                                        [2] "The AsciiDoc link:a2x.1.html[a2x] toolchain wrapper makes it easy to\n",
                                        [3] "link:publishing-ebooks-with-asciidoc.html[publish EPUB and PDF eBooks\n",
                                        [4] "with AsciiDoc]. See also <<X7,example books>> and\n",
                                        [5] "link:epub-notes.html[AsciiDoc EPUB Notes]).\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >
                            ]
                        >,
                        [ 3] #<Asciidoc::Section:0x100be1580
                            @parent = ...Asciidoc::Document...,
                            attr_accessor :anchor = nil,
                            attr_accessor :caption = nil,
                            attr_accessor :level = 1,
                            attr_accessor :name = "Blogpost weblog client",
                            attr_accessor :title = nil,
                            attr_reader :blocks = [
                                [0] #<Asciidoc::Block:0x100be01a8
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "http://srackham.wordpress.com/blogpost-readme/[blogpost] is a\n",
                                        [1] "command-line weblog client for publishing AsciiDoc documents to\n",
                                        [2] "http://wordpress.org/[WordPress] blog hosts. It creates and updates\n",
                                        [3] "weblog posts and pages directly from AsciiDoc source documents.\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >
                            ]
                        >,
                        [ 4] #<Asciidoc::Section:0x100bdfd70
                            @parent = ...Asciidoc::Document...,
                            attr_accessor :anchor = nil,
                            attr_accessor :caption = nil,
                            attr_accessor :level = 1,
                            attr_accessor :name = "Source code highlighter",
                            attr_accessor :title = nil,
                            attr_reader :blocks = [
                                [0] #<Asciidoc::Block:0x100bde8d0
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "AsciiDoc includes a link:source-highlight-filter.html[source code\n",
                                        [1] "highlighter filter] that uses\n",
                                        [2] "http://www.gnu.org/software/src-highlite/[GNU source-highlight] to\n",
                                        [3] "highlight HTML outputs. You also have the option of using the\n",
                                        [4] "http://pygments.org/[Pygments] highlighter.\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >
                            ]
                        >,
                        [ 5] #<Asciidoc::Section:0x100bde380
                            @parent = ...Asciidoc::Document...,
                            attr_accessor :anchor = "X3",
                            attr_accessor :caption = nil,
                            attr_accessor :level = 1,
                            attr_accessor :name = "Mathematical Formulae",
                            attr_accessor :title = nil,
                            attr_reader :blocks = [
                                [0] #<Asciidoc::Block:0x100bdcf30
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "You can include mathematical formulae in AsciiDoc XHTML documents using\n",
                                        [1] "link:asciimathml.html[ASCIIMathML] or link:latexmathml.html[LaTeXMathML]\n",
                                        [2] "notation.\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >,
                                [1] #<Asciidoc::Block:0x100bdcaf8
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "The link:latex-filter.html[AsciiDoc LaTeX filter] translates LaTeX\n",
                                        [1] "source to a PNG image that is automatically inserted into the AsciiDoc\n",
                                        [2] "output documents.\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >,
                                [2] #<Asciidoc::Block:0x100bdc6c0
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "AsciiDoc also has 'latexmath' macros for DocBook outputs -- they are\n",
                                        [1] "documented in link:latexmath.pdf[this PDF file] and can be used in\n",
                                        [2] "AsciiDoc documents processed by `dblatex(1)`.\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >
                            ]
                        >,
                        [ 6] #<Asciidoc::Section:0x100bdc288
                            @parent = ...Asciidoc::Document...,
                            attr_accessor :anchor = nil,
                            attr_accessor :caption = nil,
                            attr_accessor :level = 1,
                            attr_accessor :name = "Editor Support",
                            attr_accessor :title = nil,
                            attr_reader :blocks = [
                                [0] #<Asciidoc::Block:0x100bdae88
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] #<Asciidoc::ListItem:0x100bdadc0
                                            attr_accessor :content = "An AsciiDoc syntax highlighter for the Vim text editor is included in the\nAsciiDoc distribution (see 'Appendix F' of the 'AsciiDoc User Guide' for\ndetails).",
                                            attr_reader :blocks = [
                                                [0] #<Asciidoc::Block:0x100bda118
                                                    @parent = ...Asciidoc::Block...,
                                                    attr_accessor :anchor = nil,
                                                    attr_accessor :buffer = [
                                                        [0] "image::images/highlighter.png[height=400,caption=\"\",link=\"images/highlighter.png\"]\n"
                                                    ],
                                                    attr_accessor :caption = nil,
                                                    attr_accessor :title = "Syntax highlighter screenshot",
                                                    attr_reader :blocks = [],
                                                    attr_reader :context = :paragraph
                                                >
                                            ]
                                        >,
                                        [1] #<Asciidoc::ListItem:0x100bd9f10
                                            attr_accessor :content = "Dag Wieers has implemented an alternative Vim syntax file for\nAsciiDoc which can be found here\nhttp://svn.rpmforge.net/svn/trunk/tools/asciidoc-vim/.",
                                            attr_reader :blocks = []
                                        >,
                                        [2] #<Asciidoc::ListItem:0x100bd9600
                                            attr_accessor :content = "David Avsajanishvili has written a source highlighter for AsciiDoc\nfiles for http://projects.gnome.org/gtksourceview/[GtkSourceView]\n(used by http://projects.gnome.org/gedit/[gedit] and a number of\nother applications). The project is hosted here:\nhttps://launchpad.net/asciidoc-gtk-highlight",
                                            attr_reader :blocks = []
                                        >,
                                        [3] #<Asciidoc::ListItem:0x100bd8bd8
                                            attr_accessor :content = "Florian Kaufman has written 'adoc-mode.el' -- a major-mode for\nediting AsciiDoc files in Emacs, you can find it\nhttp://code.google.com/p/sensorflo-emacs/[here].",
                                            attr_reader :blocks = []
                                        >,
                                        [4] #<Asciidoc::ListItem:0x100bd8318
                                            attr_accessor :content = "The http://xpt.sourceforge.net/[*Nix Power Tools project] has\nreleased an http://xpt.sourceforge.net/tools/doc-mode/[AsciiDoc\nsyntax highlighter for Emacs].",
                                            attr_reader :blocks = []
                                        >,
                                        [5] #<Asciidoc::ListItem:0x100bd7a58
                                            attr_accessor :content = "Terrence Brannon has written\nhttp://github.com/metaperl/asciidoc-el[AsciiDoc functions for\nEmacs].",
                                            attr_reader :blocks = []
                                        >,
                                        [6] #<Asciidoc::ListItem:0x100bd7198
                                            attr_accessor :content = "Christian Zuckschwerdt has written a\nhttps://github.com/zuckschwerdt/asciidoc.tmbundle[TextMate bundle]\nfor AsciiDoc.",
                                            attr_reader :blocks = []
                                        >
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :ulist
                                >
                            ]
                        >,
                        [ 7] #<Asciidoc::Section:0x100bd65b8
                            @parent = ...Asciidoc::Document...,
                            attr_accessor :anchor = nil,
                            attr_accessor :caption = nil,
                            attr_accessor :level = 1,
                            attr_accessor :name = "Try AsciiDoc on the Web",
                            attr_accessor :title = nil,
                            attr_reader :blocks = [
                                [0] #<Asciidoc::Block:0x100bd4fd8
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "Andrew Koster has written a Web based application to interactively\n",
                                        [1] "convert and display AsciiDoc source:\n",
                                        [2] "http://andrewk.webfactional.com/asciidoc.php\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >
                            ]
                        >,
                        [ 8] #<Asciidoc::Section:0x100bd4a88
                            @parent = ...Asciidoc::Document...,
                            attr_accessor :anchor = "X2",
                            attr_accessor :caption = nil,
                            attr_accessor :level = 1,
                            attr_accessor :name = "External Resources and Applications",
                            attr_accessor :title = nil,
                            attr_reader :blocks = [
                                [0] #<Asciidoc::Block:0x100bd2328
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "Here are resources that I know of, if you know of more drop me a line\n",
                                        [1] "and I'll add them to the list.\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >,
                                [1] #<Asciidoc::Block:0x100bd20a8
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [ 0] #<Asciidoc::ListItem:0x100bd1fe0
                                            attr_accessor :content = "Check the link:INSTALL.html#X2[installation page] for packaged versions\nof AsciiDoc.",
                                            attr_reader :blocks = []
                                        >,
                                        [ 1] #<Asciidoc::ListItem:0x100bd1770
                                            attr_accessor :content = "Alex Efros has written an HTML formatted\nhttp://powerman.name/doc/asciidoc[AsciiDoc Cheatsheet] using\nAsciidoc.",
                                            attr_reader :blocks = []
                                        >,
                                        [ 2] #<Asciidoc::ListItem:0x100bd0e60
                                            attr_accessor :content = "Thomas Berker has written an\nhttp://liksom.info/blog/?q=node/114[AsciiDoc Cheatsheet] in Open\nDocument and PDF formats.",
                                            attr_reader :blocks = []
                                        >,
                                        [ 3] #<Asciidoc::ListItem:0x100bd0550
                                            attr_accessor :content = "The http://www.wikimatrix.org/[WikiMatrix] website has an excellent\nhttp://www.wikimatrix.org/syntax.php[web page] that compares the\nvarious Wiki markup syntaxes. An interesting attempt at Wiki markup\nstandardization is http://www.wikicreole.org/[CREOLE].",
                                            attr_reader :blocks = []
                                        >,
                                        [ 4] #<Asciidoc::ListItem:0x100bcfba0
                                            attr_accessor :content = "Franck Pommereau has written\nhttp://www.univ-paris12.fr/lacl/pommereau/soft/asciidoctest.html[Asciidoctest],\na program that doctests snippets of Python code within your Asciidoc\ndocuments.",
                                            attr_reader :blocks = []
                                        >,
                                        [ 5] #<Asciidoc::ListItem:0x100bcf1f0
                                            attr_accessor :content = "The http://remips.sourceforge.net/[ReMIPS] project website has been\nbuilt using AsciiDoc.",
                                            attr_reader :blocks = []
                                        >,
                                        [ 6] #<Asciidoc::ListItem:0x100bce980
                                            attr_accessor :content = "Here are some link:asciidoc-docbook-xsl.html[DocBook XSL Stylesheets\nNotes].",
                                            attr_reader :blocks = []
                                        >,
                                        [ 7] #<Asciidoc::ListItem:0x100bce110
                                            attr_accessor :content = "Karl Mowatt-Wilson has developed an http://ikiwiki.info/[ikiwiki]\nplugin for AsciiDoc which he uses to render\nhttp://mowson.org/karl[his website].  The plugin is available\nhttp://www.mowson.org/karl/colophon/[here] and there is some\ndiscussion of the ikiwiki integration\nhttp://ikiwiki.info/users/KarlMW/discussion/[here].",
                                            attr_reader :blocks = []
                                        >,
                                        [ 8] #<Asciidoc::ListItem:0x100bcd620
                                            attr_accessor :content = "Glenn Eychaner has\nhttp://groups.google.com/group/asciidoc/browse_thread/thread/bf04b55628efe214[reworked\nthe Asciidoc plugin for ikiwiki] that was created by Karl Mowson,\nthe source can be downloaded from\nhttp://dl.dropbox.com/u/11256359/asciidoc.pm",
                                            attr_reader :blocks = []
                                        >,
                                        [ 9] #<Asciidoc::ListItem:0x100bccbd0
                                            attr_accessor :content = "David Hajage has written an AsciiDoc package for the\nhttp://www.r-project.org/[R Project] (R is a free software\nenvironment for statistical computing).  'ascii' is available on\n'CRAN' (just run `install.package(\"ascii\")` from R).  Briefly,\n'ascii' replaces R results in AsciiDoc document with AsciiDoc\nmarkup.  More information and examples here:\nhttp://eusebe.github.com/ascii/.",
                                            attr_reader :blocks = []
                                        >,
                                        [10] #<Asciidoc::ListItem:0x100bcc040
                                            attr_accessor :content = "Pascal Rapaz has written a Python script to automate AsciiDoc\nwebsite generation. You can find it at\nhttp://www.rapazp.ch/opensource/tools/asciidoc.html.",
                                            attr_reader :blocks = []
                                        >,
                                        [11] #<Asciidoc::ListItem:0x100bcb730
                                            attr_accessor :content = "Jared Henley has written\nhttp://jared.henley.id.au/software/awb/documentation.html[AsciiDoc\nWebsite Builder]. 'AsciiDoc Website Builder' (awb) is a python\nprogram that automates the building of of a website written in\nAsciiDoc. All you need to write is the AsciiDoc source plus a few\nsimple configuration files.",
                                            attr_reader :blocks = []
                                        >,
                                        [12] #<Asciidoc::ListItem:0x100bcac40
                                            attr_accessor :content = "Brad Adkins has written\nhttp://dbixjcl.org/jcl/asciidocgen/asciidocgen.html[AsciiDocGen], a\nweb site generation and deployment tool that allows you write your\nweb site content in AsciiDoc. The\nhttp://dbixjcl.org/jcl/asciidocgen/asciidocgen.html[AsciiDocGen web\nsite] is managed using 'AsciiDocGen'.",
                                            attr_reader :blocks = []
                                        >,
                                        [13] #<Asciidoc::ListItem:0x100bca150
                                            attr_accessor :content = "Filippo Negroni has developed a set of tools to facilitate 'literate\nprogramming' using AsciiDoc.  The set of tools is called\nhttp://eweb.sourceforge.net/[eWEB].",
                                            attr_reader :blocks = []
                                        >,
                                        [14] #<Asciidoc::ListItem:0x100bc9840
                                            attr_accessor :content = "http://vanderwijk.info/2009/4/23/full-text-based-document-generation-using-asciidoc-and-ditaa[Ivo's\nblog] describes a http://ditaa.sourceforge.net/[ditaa] filter for\nAsciiDoc which converts http://en.wikipedia.org/wiki/ASCII_art[ASCII\nart] into graphics.",
                                            attr_reader :blocks = []
                                        >,
                                        [15] #<Asciidoc::ListItem:0x100bc8e90
                                            attr_accessor :content = "http://github.com/github/gollum[Gollum] is a git-powered wiki, it\nsupports various formats, including AsciiDoc.",
                                            attr_reader :blocks = []
                                        >,
                                        [16] #<Asciidoc::ListItem:0x100bc8620
                                            attr_accessor :content = "Gregory Rom\303\251 has written an\nhttp://github.com/gpr/redmine_asciidoc_formatter[AsciiDoc plugin]\nfor the http://www.redmine.org/[Redmine] project management\napplication.",
                                            attr_reader :blocks = []
                                        >,
                                        [17] #<Asciidoc::ListItem:0x100bc7c70
                                            attr_accessor :content = "Paul Hsu has started a\nhttp://github.com/paulhsu/AsciiDoc.CHT.userguide[Chinese translation\nof the AsciiDoc User Guide].",
                                            attr_reader :blocks = []
                                        >,
                                        [18] #<Asciidoc::ListItem:0x100bc7360
                                            attr_accessor :content = "Dag Wieers has written\nhttp://dag.wieers.com/home-made/unoconv/[UNOCONV]. 'UNOCONV' can\nexport AsciiDoc outputs to OpenOffice export formats.",
                                            attr_reader :blocks = []
                                        >,
                                        [19] #<Asciidoc::ListItem:0x100bc6a50
                                            attr_accessor :content = "Ed Keith has written http://codeextactor.berlios.de/[Code\nExtractor], it extracts code snippets from source code files and\ninserts them into AsciiDoc documents.",
                                            attr_reader :blocks = []
                                        >,
                                        [20] #<Asciidoc::ListItem:0x100bc6140
                                            attr_accessor :content = "The http://csrp.iut-blagnac.fr/jmiwebsite/home/[JMI website] hosts\na number of extras for AsciiDoc and Slidy written by Jean-Michel\nInglebert.",
                                            attr_reader :blocks = []
                                        >,
                                        [21] #<Asciidoc::ListItem:0x100bc5830
                                            attr_accessor :content = "Ryan Tomayko has written an number of\nhttp://tomayko.com/src/adoc-themes/[themes for AsciiDoc] along with\na http://tomayko.com/src/adoc-themes/hacking.html[script for\ncombining the CSS files] into single CSS theme files for AsciiDoc\nembedded CSS documents.",
                                            attr_reader :blocks = []
                                        >,
                                        [22] #<Asciidoc::ListItem:0x100bc4de0
                                            attr_accessor :content = "Ilya Portnov has written a\nhttps://gitorious.org/doc-building-system[document building system\nfor AsciiDoc], here is\nhttp://iportnov.blogspot.com/2011/03/asciidoc-beamer.html[short\narticle in Russian] describing it.",
                                            attr_reader :blocks = []
                                        >,
                                        [23] #<Asciidoc::ListItem:0x100bc43b8
                                            attr_accessor :content = "Lex Trotman has written\nhttps://github.com/elextr/codiicsa[codiicsa], a program that\nconverts DocBook to AsciiDoc.",
                                            attr_reader :blocks = []
                                        >,
                                        [24] #<Asciidoc::ListItem:0x100bc3af8
                                            attr_accessor :content = "Qingping Hou has written http://houqp.github.com/asciidoc-deckjs/[an\nAsciiDoc backend for deck.js].\nhttp://imakewebthings.github.com/deck.js/[deck.js] is a JavaScript\nlibrary for building modern HTML presentations (slideshows).",
                                            attr_reader :blocks = []
                                        >,
                                        [25] #<Asciidoc::ListItem:0x100bc3198
                                            attr_accessor :content = "The guys from O'Reilly Media have posted an\nhttps://github.com/oreillymedia/docbook2asciidoc[XSL Stylesheet to\ngithub] that converts DocBook to AsciiDoc.",
                                            attr_reader :blocks = []
                                        >
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :ulist
                                >,
                                [2] #<Asciidoc::Block:0x100bc2568
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "Please let me know if any of these links need updating.\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >
                            ]
                        >,
                        [ 9] #<Asciidoc::Section:0x100bc2018
                            @parent = ...Asciidoc::Document...,
                            attr_accessor :anchor = "X6",
                            attr_accessor :caption = nil,
                            attr_accessor :level = 1,
                            attr_accessor :name = "Documents written using AsciiDoc",
                            attr_accessor :title = nil,
                            attr_reader :blocks = [
                                [0] #<Asciidoc::Block:0x100bbfa20
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "Here are some documents I know of, if you know of more drop me a line\n",
                                        [1] "and I'll add them to the list.\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >,
                                [1] #<Asciidoc::Block:0x100bbf7a0
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [ 0] #<Asciidoc::ListItem:0x100bbf6d8
                                            attr_accessor :content = "The book http://practicalunittesting.com/[Practical Unit Testing] by\nTomek Kaczanowski was\nhttps://groups.google.com/group/asciidoc/browse_frm/thread/4ba13926262efa23[written\nusing Asciidoc].",
                                            attr_reader :blocks = []
                                        >,
                                        [ 1] #<Asciidoc::ListItem:0x100bbed00
                                            attr_accessor :content = "The book http://oreilly.com/catalog/9781449397296[Programming iOS 4]\nby Matt Neuburg was written using AsciiDoc. Matt has\nhttp://www.apeth.net/matt/iosbooktoolchain.html[written an article]\ndescribing how he used AsciiDoc and other tools to write the book.",
                                            attr_reader :blocks = []
                                        >,
                                        [ 2] #<Asciidoc::ListItem:0x100bbe328
                                            attr_accessor :content = "The book\nhttp://oreilly.com/catalog/9780596155957/index.html[Programming\nScala] by Dean Wampler and Alex Payne (O'Reilly) was\nhttp://groups.google.com/group/asciidoc/browse_frm/thread/449f1199343f0e27[written\nusing Asciidoc].",
                                            attr_reader :blocks = []
                                        >,
                                        [ 3] #<Asciidoc::ListItem:0x100bbd8b0
                                            attr_accessor :content = "The http://www.ncfaculty.net/dogle/fishR/index.html[fishR] website\nhas a number of\nhttp://www.ncfaculty.net/dogle/fishR/bookex/AIFFD/AIFFD.html[book\nexamples] written using AsciiDoc.",
                                            attr_reader :blocks = []
                                        >,
                                        [ 4] #<Asciidoc::ListItem:0x100bbced8
                                            attr_accessor :content = "The Neo4j graph database project uses Asciidoc, and the output is\npublished here: http://docs.neo4j.org/. The build process includes\nlive tested source code snippets and is described\nhttp://groups.google.com/group/asciidoc/browse_thread/thread/49d570062fd3ff52[here].",
                                            attr_reader :blocks = []
                                        >,
                                        [ 5] #<Asciidoc::ListItem:0x100bbc500
                                            attr_accessor :content = "http://frugalware.org/[Frugalware Linux] uses AsciiDoc for\nhttp://frugalware.org/docs[documentation].",
                                            attr_reader :blocks = []
                                        >,
                                        [ 6] #<Asciidoc::ListItem:0x100bbbc90
                                            attr_accessor :content = "http://www.cherokee-project.com/doc/[Cherokee documentation].",
                                            attr_reader :blocks = []
                                        >,
                                        [ 7] #<Asciidoc::ListItem:0x100bbb448
                                            attr_accessor :content = "Henrik Maier produced this professional User manual using AsciiDoc:\nhttp://www.proconx.com/assets/files/products/modg100/UMMBRG300-1101.pdf",
                                            attr_reader :blocks = []
                                        >,
                                        [ 8] #<Asciidoc::ListItem:0x100bbabb0
                                            attr_accessor :content = "Henrik also produced this folded single page brochure format\nexample:\nhttp://www.proconx.com/assets/files/products/modg100/IGMBRG300-1101-up.pdf",
                                            attr_reader :blocks = [
                                                [0] #<Asciidoc::Block:0x100bb9f30
                                                    @parent = ...Asciidoc::Block...,
                                                    attr_accessor :anchor = nil,
                                                    attr_accessor :buffer = [
                                                        [0] "See this\n",
                                                        [1] "http://groups.google.com/group/asciidoc/browse_thread/thread/16ab5a06864b934f[AsciiDoc\n",
                                                        [2] "discussion group thread] for details.\n"
                                                    ],
                                                    attr_accessor :caption = nil,
                                                    attr_accessor :title = nil,
                                                    attr_reader :blocks = [],
                                                    attr_reader :context = :paragraph
                                                >
                                            ]
                                        >,
                                        [ 9] #<Asciidoc::ListItem:0x100bb9d28
                                            attr_accessor :content = "The\nhttp://www.kernel.org/pub/software/scm/git/docs/user-manual.html[Git\nUser's Manual].",
                                            attr_reader :blocks = []
                                        >,
                                        [10] #<Asciidoc::ListItem:0x100bb9418
                                            attr_accessor :content = "'Git Magic' +\nhttp://www-cs-students.stanford.edu/~blynn/gitmagic/ +\nhttp://github.com/blynn/gitmagic/tree/1e5780f658962f8f9b01638059b27275cfda095c",
                                            attr_reader :blocks = []
                                        >,
                                        [11] #<Asciidoc::ListItem:0x100bb8bf8
                                            attr_accessor :content = "'CouchDB: The Definitive Guide' +\nhttp://books.couchdb.org/relax/ +\nhttp://groups.google.com/group/asciidoc/browse_thread/thread/a60f67cbbaf862aa/d214bf7fa2d538c4?lnk=gst&q=book#d214bf7fa2d538c4",
                                            attr_reader :blocks = []
                                        >,
                                        [12] #<Asciidoc::ListItem:0x100bb83d8
                                            attr_accessor :content = "'Ramaze Manual' +\nhttp://book.ramaze.net/ +\nhttp://github.com/manveru/ramaze-book/tree/master",
                                            attr_reader :blocks = []
                                        >,
                                        [13] #<Asciidoc::ListItem:0x100bb7bb8
                                            attr_accessor :content = "Some documentation about git by Nico Schottelius (in German)\nhttp://nico.schotteli.us/papers/linux/git-firmen/.",
                                            attr_reader :blocks = []
                                        >,
                                        [14] #<Asciidoc::ListItem:0x100bb7348
                                            attr_accessor :content = "The http://www.netpromi.com/kirbybase_ruby.html[KirbyBase for Ruby]\ndatabase management system manual.",
                                            attr_reader :blocks = []
                                        >,
                                        [15] #<Asciidoc::ListItem:0x100bb6ad8
                                            attr_accessor :content = "The http://xpt.sourceforge.net/[*Nix Power Tools project] uses\nAsciiDoc for documentation.",
                                            attr_reader :blocks = []
                                        >,
                                        [16] #<Asciidoc::ListItem:0x100bb6268
                                            attr_accessor :content = "The http://www.wesnoth.org/[Battle for Wesnoth] project uses\nAsciiDoc for its http://www.wesnoth.org/wiki/WesnothManual[Manual]\nin a number of different languages.",
                                            attr_reader :blocks = []
                                        >,
                                        [17] #<Asciidoc::ListItem:0x100bb5958
                                            attr_accessor :content = "Troy Hanson uses AsciiDoc to generate user guides for the\nhttp://tpl.sourceforge.net/[tpl] and\nhttp://uthash.sourceforge.net/[uthash] projects (the HTML versions\nhave a customised contents sidebar).",
                                            attr_reader :blocks = []
                                        >,
                                        [18] #<Asciidoc::ListItem:0x100bb4fa8
                                            attr_accessor :content = "http://volnitsky.com/[Leonid Volnitsky's site] is generated using\nAsciiDoc and includes Leonid's matplotlib filter.",
                                            attr_reader :blocks = []
                                        >,
                                        [19] #<Asciidoc::ListItem:0x100bb4738
                                            attr_accessor :content = "http://www.weechat.org/[WeeChat] uses AsciiDoc for\nhttp://www.weechat.org/doc[project documentation].",
                                            attr_reader :blocks = []
                                        >,
                                        [20] #<Asciidoc::ListItem:0x100bb3ec8
                                            attr_accessor :content = "http://www.clansuite.com/[Clansuite] uses AsciiDoc for\nhttp://www.clansuite.com/documentation/[project documentation].",
                                            attr_reader :blocks = []
                                        >,
                                        [21] #<Asciidoc::ListItem:0x100bb3658
                                            attr_accessor :content = "The http://fc-solve.berlios.de/[Freecell Solver program] uses\nAsciiDoc for its\nhttp://fc-solve.berlios.de/docs/#distributed-docs[distributed\ndocumentation].",
                                            attr_reader :blocks = []
                                        >,
                                        [22] #<Asciidoc::ListItem:0x100bb2ca8
                                            attr_accessor :content = "Eric Raymond's http://gpsd.berlios.de/AIVDM.html[AIVDM/AIVDO\nprotocol decoding] documentation is written using AsciiDoc.",
                                            attr_reader :blocks = []
                                        >,
                                        [23] #<Asciidoc::ListItem:0x100bb2438
                                            attr_accessor :content = "Dwight Schauer has written an http://lxc.teegra.net/[LXC HOWTO] in\nAsciiDoc.",
                                            attr_reader :blocks = []
                                        >,
                                        [24] #<Asciidoc::ListItem:0x100bb1bc8
                                            attr_accessor :content = "The http://www.rowetel.com/ucasterisk/[Free Telephony Project]\nwebsite is generated using AsciiDoc.",
                                            attr_reader :blocks = []
                                        >,
                                        [25] #<Asciidoc::ListItem:0x100bb1358
                                            attr_accessor :content = "Warren Block has http://www.wonkity.com/~wblock/docs/[posted a\nnumber of articles written using AsciiDoc].",
                                            attr_reader :blocks = []
                                        >,
                                        [26] #<Asciidoc::ListItem:0x100bb0ae8
                                            attr_accessor :content = "The http://code.google.com/p/waf/[Waf project's] 'Waf Book' is\nwritten using AsciiDoc, there is an\nhttp://waf.googlecode.com/svn/docs/wafbook/single.html[HTML] and a\nhttp://waf.googlecode.com/svn/docs/wafbook/waf.pdf[PDF] version.",
                                            attr_reader :blocks = []
                                        >,
                                        [27] #<Asciidoc::ListItem:0x100bb0138
                                            attr_accessor :content = "The http://www.diffkit.org/[DiffKit] project's documentation and\nwebsite have been written using Asciidoc.",
                                            attr_reader :blocks = []
                                        >,
                                        [28] #<Asciidoc::ListItem:0x100baf8c8
                                            attr_accessor :content = "The http://www.networkupstools.org[Network UPS Tools] project\nhttp://www.networkupstools.org/documentation.html[documentation] is\nan example of a large documentation project written using AsciiDoc.",
                                            attr_reader :blocks = []
                                        >,
                                        [29] #<Asciidoc::ListItem:0x100baefb8
                                            attr_accessor :content = "http://www.archlinux.org/pacman/[Pacman], the\nhttp://www.archlinux.org/[Arch Linux] package manager, has been\ndocumented using AsciiDoc.",
                                            attr_reader :blocks = []
                                        >,
                                        [30] #<Asciidoc::ListItem:0x100bae6d0
                                            attr_accessor :content = "Suraj Kurapati has written a number of customized manuals for his\nOpen Source projects using AsciiDoc:",
                                            attr_reader :blocks = []
                                        >,
                                        [31] #<Asciidoc::ListItem:0x100bade60
                                            attr_accessor :content = "http://snk.tuxfamily.org/lib/detest/",
                                            attr_reader :blocks = []
                                        >,
                                        [32] #<Asciidoc::ListItem:0x100bad690
                                            attr_accessor :content = "http://snk.tuxfamily.org/lib/ember/",
                                            attr_reader :blocks = []
                                        >,
                                        [33] #<Asciidoc::ListItem:0x100bacec0
                                            attr_accessor :content = "http://snk.tuxfamily.org/lib/inochi/",
                                            attr_reader :blocks = []
                                        >,
                                        [34] #<Asciidoc::ListItem:0x100bac6f0
                                            attr_accessor :content = "http://snk.tuxfamily.org/lib/rumai/",
                                            attr_reader :blocks = []
                                        >,
                                        [35] #<Asciidoc::ListItem:0x100babed0
                                            attr_accessor :content = "The http://cxxtest.com/[CxxTest] project (unit testing for C++\nlanguage) has written its User Guide using AsciiDoc.",
                                            attr_reader :blocks = []
                                        >
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :ulist
                                >,
                                [2] #<Asciidoc::Block:0x100bab340
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "Please let me know if any of these links need updating.\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >
                            ]
                        >,
                        [10] #<Asciidoc::Section:0x100baaf08
                            @parent = ...Asciidoc::Document...,
                            attr_accessor :anchor = nil,
                            attr_accessor :caption = nil,
                            attr_accessor :level = 1,
                            attr_accessor :name = "DocBook 5.0 Backend",
                            attr_accessor :title = nil,
                            attr_reader :blocks = [
                                [0] #<Asciidoc::Block:0x100ba9cc0
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "Shlomi Fish has begun work on a DocBook 5.0 `docbook50.conf` backend\n",
                                        [1] "configuration file, you can find it\n",
                                        [2] "http://bitbucket.org/shlomif/asciidoc[here]. See also:\n",
                                        [3] "http://groups.google.com/group/asciidoc/browse_thread/thread/4386c7cc053d51a9\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >
                            ]
                        >,
                        [11] #<Asciidoc::Section:0x100ba9770
                            @parent = ...Asciidoc::Document...,
                            attr_accessor :anchor = "X1",
                            attr_accessor :caption = nil,
                            attr_accessor :level = 1,
                            attr_accessor :name = "LaTeX Backend",
                            attr_accessor :title = nil,
                            attr_reader :blocks = [
                                [0] #<Asciidoc::Block:0x100ba80c8
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "An experimental LaTeX backend was written for AsciiDoc in 2006 by\n",
                                        [1] "Benjamin Klum.  Benjamin did a superhuman job (I admit it, I didn't\n",
                                        [2] "think this was doable due to AsciiDoc's SGML/XML bias).  Owning to to\n",
                                        [3] "other commitments, Benjamin was unable to maintain this backend.\n",
                                        [4] "Here's link:latex-backend.html[Benjamin's original documentation].\n",
                                        [5] "Incompatibilities introduced after AsciiDoc 8.2.7 broke the LaTeX\n",
                                        [6] "backend.\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >,
                                [1] #<Asciidoc::Block:0x100ba7c40
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "In 2009 Geoff Eddy stepped up and updated the LaTeX backend, thanks to\n",
                                        [1] "Geoff's efforts it now works with AsciiDoc 8.4.3. Geoff's updated\n",
                                        [2] "`latex.conf` file shipped with AsciiDoc version 8.4.4. The backend\n",
                                        [3] "still has limitations and remains experimental (see\n",
                                        [4] "link:latex-bugs.html[Geoff's notes]).\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >,
                                [2] #<Asciidoc::Block:0x100ba7830
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "It's probably also worth pointing out that LaTeX output can be\n",
                                        [1] "generated by passing AsciiDoc generated DocBook through `dblatex(1)`.\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >
                            ]
                        >,
                        [12] #<Asciidoc::Section:0x100ba73f8
                            @parent = ...Asciidoc::Document...,
                            attr_accessor :anchor = nil,
                            attr_accessor :caption = nil,
                            attr_accessor :level = 1,
                            attr_accessor :name = "Patches and bug reports",
                            attr_accessor :title = nil,
                            attr_reader :blocks = [
                                [0] #<Asciidoc::Block:0x100ba6200
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "Patches and bug reports are are encouraged, but please try to follow\n",
                                        [1] "these guidelines:\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >,
                                [1] #<Asciidoc::Block:0x100ba5f80
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] #<Asciidoc::ListItem:0x100ba5eb8
                                            attr_accessor :content = "Post bug reports and patches to the\nhttp://groups.google.com/group/asciidoc[asciidoc discussion list],\nthis keeps things transparent and gives everyone a chance to\ncomment.",
                                            attr_reader :blocks = []
                                        >,
                                        [1] #<Asciidoc::ListItem:0x100ba5508
                                            attr_accessor :content = "The email subject line should be a specific and concise topic\nsummary. Commonly accepted subject line prefixes such as '[ANN]',\n'[PATCH]' and '[SOLVED]' are good.",
                                            attr_reader :blocks = []
                                        >
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :ulist
                                >,
                                [2] #<Asciidoc::Block:0x100ba47c0
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [ 0] "=== Bug reports\n",
                                        [ 1] "- When reporting problems please illustrate the problem with the\n",
                                        [ 2] "  smallest possible example that replicates the issue (and please test\n",
                                        [ 3] "  your example before posting). This technique will also help to\n",
                                        [ 4] "  eliminate red herrings prior to posting.\n",
                                        [ 5] "- Paste the commands that you executed along with any relevant\n",
                                        [ 6] "  outputs.\n",
                                        [ 7] "- Include the version of AsciiDoc and the platform you're running it\n",
                                        [ 8] "  on.\n",
                                        [ 9] "- If you can program please consider writing a patch to fix the\n",
                                        [10] "  problem.\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >,
                                [3] #<Asciidoc::Block:0x100ba4310
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [ 0] "=== Patches\n",
                                        [ 1] "- Keep patches small and atomic (one issue per patch) -- no patch\n",
                                        [ 2] "  bombs.\n",
                                        [ 3] "- If possible test your patch against the current trunk.\n",
                                        [ 4] "- If your patch adds or modifies functionality include a short example\n",
                                        [ 5] "  that illustrates the changes.\n",
                                        [ 6] "- Send patches in `diff -u` format, inline inside the mail message is\n",
                                        [ 7] "  usually best; if it is a very long patch then send it as an\n",
                                        [ 8] "  attachment.\n",
                                        [ 9] "- Include documentation updates if you're up to it; otherwise insert\n",
                                        [10] "  'TODO' comments at relevant places in the documentation.\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >
                            ]
                        >
                    ]
                >,
                attr_accessor :anchor = nil,
                attr_accessor :buffer = [
                    [0] "************************************************************************\n",
                    [1] "Read the link:CHANGELOG.html[CHANGELOG] for release highlights and a\n",
                    [2] "full list of all additions, changes and bug fixes. Changes are\n",
                    [3] "documented in the updated link:userguide.html[User Guide]. See the\n",
                    [4] "link:INSTALL.html[Installation page] for downloads and and\n",
                    [5] "installation instructions.\n"
                ],
                attr_accessor :caption = nil,
                attr_accessor :title = "{revdate}: AsciiDoc {revnumber} Released",
                attr_reader :blocks = [],
                attr_reader :context = :paragraph
            >,
            [1] #<Asciidoc::Block:0x100bfb340
                @parent = #<Asciidoc::Section:0x100c09bc0
                    @parent = ...Asciidoc::Document...,
                    attr_accessor :level = 0,
                    attr_accessor :name = "AsciiDoc Home Page",
                    attr_reader :blocks = [
                        [ 0] #<Asciidoc::Section:0x100bfaff8
                            @parent = ...Asciidoc::Document...,
                            attr_accessor :anchor = nil,
                            attr_accessor :caption = nil,
                            attr_accessor :level = 1,
                            attr_accessor :name = "Introduction",
                            attr_accessor :title = nil,
                            attr_reader :blocks = [
                                [0] #<Asciidoc::Block:0x100bf9d60
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "{description}\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >,
                                [1] #<Asciidoc::Block:0x100bf9928
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "AsciiDoc is highly configurable: both the AsciiDoc source file syntax\n",
                                        [1] "and the backend output markups (which can be almost any type of\n",
                                        [2] "SGML/XML markup) can be customized and extended by the user.\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >,
                                [2] #<Asciidoc::Block:0x100bf9518
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "AsciiDoc is free software and is licenced under the terms of the 'GNU\n",
                                        [1] "General Public License version 2' (GPLv2).\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >,
                                [3] #<Asciidoc::Block:0x100bf90e0
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "TIP: The pages you are reading were written using AsciiDoc, to view\n",
                                        [1] "the corresponding AsciiDoc source click on the *Page Source* menu item\n",
                                        [2] "in the left hand margin.\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >
                            ]
                        >,
                        [ 1] #<Asciidoc::Section:0x100bf8ca8
                            @parent = ...Asciidoc::Document...,
                            attr_accessor :anchor = nil,
                            attr_accessor :caption = nil,
                            attr_accessor :level = 1,
                            attr_accessor :name = "Overview and Examples",
                            attr_accessor :title = nil,
                            attr_reader :blocks = [
                                [0] #<Asciidoc::Block:0x100bf49c8
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "You write an AsciiDoc document the same way you would write a\n",
                                        [1] "normal text document, there are no markup tags or weird format\n",
                                        [2] "notations. AsciiDoc files are designed to be viewed, edited and\n",
                                        [3] "printed directly or translated to other presentation formats using\n",
                                        [4] "the asciidoc(1) command.\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >,
                                [1] #<Asciidoc::Block:0x100bf4568
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "The asciidoc(1) command translates AsciiDoc files to HTML, XHTML and\n",
                                        [1] "DocBook markups.  DocBook can be post-processed to presentation\n",
                                        [2] "formats such as HTML, PDF, EPUB, DVI, LaTeX, roff, and Postscript\n",
                                        [3] "using readily available Open Source tools.\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >,
                                [2] #<Asciidoc::Section:0x100bf4220
                                    @parent = ...Asciidoc::Document...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :caption = nil,
                                    attr_accessor :level = 2,
                                    attr_accessor :name = "Example Articles",
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [
                                        [0] #<Asciidoc::Block:0x100bf2e98
                                            @parent = ...Asciidoc::Section...,
                                            attr_accessor :anchor = nil,
                                            attr_accessor :buffer = [
                                                [0] #<Asciidoc::ListItem:0x100bf2dd0
                                                    attr_accessor :content = "This XHTML version of the\nlink:asciidoc.css-embedded.html[AsciiDoc User Guide]\nwas generated by AsciiDoc from\nlink:asciidoc.txt[this AsciiDoc file].",
                                                    attr_reader :blocks = []
                                                >,
                                                [1] #<Asciidoc::ListItem:0x100bf23f8
                                                    attr_accessor :content = "Here's the link:asciidoc.html[same document] created by first\ngenerating DocBook markup using AsciiDoc and then converting the\nDocBook markup to HTML using 'DocBook XSL Stylesheets'.",
                                                    attr_reader :blocks = []
                                                >,
                                                [2] #<Asciidoc::ListItem:0x100bf1ac0
                                                    attr_accessor :content = "The User Guide again, this time a\nlink:chunked/index.html[chunked version].",
                                                    attr_reader :blocks = []
                                                >,
                                                [3] #<Asciidoc::ListItem:0x100bf1228
                                                    attr_accessor :content = "AsciiDoc generated this link:article-standalone.html[stand-alone\nHTML file] containing embedded CSS, JavaScript and images from this\nlink:article.txt[AsciiDoc article template] with this command:",
                                                    attr_reader :blocks = [
                                                        [0] #<Asciidoc::Block:0x100bf0698
                                                            @parent = ...Asciidoc::Block...,
                                                            attr_accessor :anchor = nil,
                                                            attr_accessor :buffer = [
                                                                [0] "  asciidoc -a data-uri -a icons -a toc -a max-width=55em article.txt\n"
                                                            ],
                                                            attr_accessor :caption = nil,
                                                            attr_accessor :title = nil,
                                                            attr_reader :blocks = [],
                                                            attr_reader :context = :literal
                                                        >
                                                    ]
                                                >,
                                                [4] #<Asciidoc::ListItem:0x100bf0490
                                                    attr_accessor :content = "The same link:article.txt[AsciiDoc article template] generated\nlink:article-html5-toc2.html[this HTML 5] (the 'toc2' attribute puts\na table of contents in the left margin) from this command:",
                                                    attr_reader :blocks = [
                                                        [0] #<Asciidoc::Block:0x100bef928
                                                            @parent = ...Asciidoc::Block...,
                                                            attr_accessor :anchor = nil,
                                                            attr_accessor :buffer = [
                                                                [0] "  asciidoc -b html5 -a icons -a toc2 -a theme=flask article.txt\n"
                                                            ],
                                                            attr_accessor :caption = nil,
                                                            attr_accessor :title = nil,
                                                            attr_reader :blocks = [],
                                                            attr_reader :context = :literal
                                                        >
                                                    ]
                                                >,
                                                [5] #<Asciidoc::ListItem:0x100bef720
                                                    attr_accessor :content = "The same link:article.txt[AsciiDoc article template] produced\nthis link:article.html[HTML file] and this\nlink:article.pdf[PDF file] via DocBook markup generated by AsciiDoc.",
                                                    attr_reader :blocks = []
                                                >
                                            ],
                                            attr_accessor :caption = nil,
                                            attr_accessor :title = nil,
                                            attr_reader :blocks = [],
                                            attr_reader :context = :ulist
                                        >
                                    ]
                                >,
                                [3] #<Asciidoc::Section:0x100beeaa0
                                    @parent = ...Asciidoc::Document...,
                                    attr_accessor :anchor = "X7",
                                    attr_accessor :caption = nil,
                                    attr_accessor :level = 2,
                                    attr_accessor :name = "Example Books",
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [
                                        [0] #<Asciidoc::Block:0x100bed600
                                            @parent = ...Asciidoc::Section...,
                                            attr_accessor :anchor = nil,
                                            attr_accessor :buffer = [
                                                [0] "AsciiDoc markup supports all the standard DocBook frontmatter and\n",
                                                [1] "backmatter sections (dedication, preface, bibliography, glossary,\n",
                                                [2] "index, colophon) plus footnotes and index entries.\n"
                                            ],
                                            attr_accessor :caption = nil,
                                            attr_accessor :title = nil,
                                            attr_reader :blocks = [],
                                            attr_reader :context = :paragraph
                                        >,
                                        [1] #<Asciidoc::Block:0x100bed380
                                            @parent = ...Asciidoc::Section...,
                                            attr_accessor :anchor = nil,
                                            attr_accessor :buffer = [
                                                [0] #<Asciidoc::ListItem:0x100bed2b8
                                                    attr_accessor :content = "This link:book.txt[AsciiDoc book] produced link:book.html[this HTML\nfile] using the 'DocBook XSL Stylesheets'.",
                                                    attr_reader :blocks = []
                                                >,
                                                [1] #<Asciidoc::ListItem:0x100beca98
                                                    attr_accessor :content = "The link:asciidoc.pdf[PDF formatted AsciiDoc User Guide] was\ngenerated from asciidoc(1) DocBook output.",
                                                    attr_reader :blocks = []
                                                >,
                                                [2] #<Asciidoc::ListItem:0x100bec278
                                                    attr_accessor :content = "The link:asciidoc.epub[EPUB formatted AsciiDoc User Guide] was\ngenerated using link:a2x.1.html[a2x].",
                                                    attr_reader :blocks = []
                                                >,
                                                [3] #<Asciidoc::ListItem:0x100beba58
                                                    attr_accessor :content = "This link:book.epub[EPUB formatted book skeleton] was generated\nusing link:a2x.1.html[a2x].",
                                                    attr_reader :blocks = []
                                                >,
                                                [4] #<Asciidoc::ListItem:0x100beb238
                                                    attr_accessor :content = "This link:book-multi.txt[multi-part AsciiDoc book] produced\nlink:book-multi.html[this HTML file] using the 'DocBook XSL\nStylesheets'.",
                                                    attr_reader :blocks = []
                                                >
                                            ],
                                            attr_accessor :caption = nil,
                                            attr_accessor :title = nil,
                                            attr_reader :blocks = [],
                                            attr_reader :context = :ulist
                                        >
                                    ]
                                >,
                                [4] #<Asciidoc::Section:0x100bea6d0
                                    @parent = ...Asciidoc::Document...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :caption = nil,
                                    attr_accessor :level = 2,
                                    attr_accessor :name = "Example UNIX Man Pages",
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [
                                        [0] #<Asciidoc::Block:0x100be91b8
                                            @parent = ...Asciidoc::Section...,
                                            attr_accessor :anchor = nil,
                                            attr_accessor :buffer = [
                                                [0] "HTML formatted AsciiDoc man pages\n",
                                                [1] "link:asciidoc.1.css-embedded.html[with stylesheets] and\n",
                                                [2] "link:asciidoc.1.html[without stylesheets] were generated by AsciiDoc\n",
                                                [3] "from link:asciidoc.1.txt[this file].\n"
                                            ],
                                            attr_accessor :caption = nil,
                                            attr_accessor :title = nil,
                                            attr_reader :blocks = [],
                                            attr_reader :context = :paragraph
                                        >,
                                        [1] #<Asciidoc::Block:0x100be8d80
                                            @parent = ...Asciidoc::Section...,
                                            attr_accessor :anchor = nil,
                                            attr_accessor :buffer = [
                                                [0] "This link:asciidoc.1[roff formatted  man page] was generated from\n",
                                                [1] "asciidoc(1) DocBook output using `xsltproc(1)` and DocBook XSL\n",
                                                [2] "Stylesheets.\n"
                                            ],
                                            attr_accessor :caption = nil,
                                            attr_accessor :title = nil,
                                            attr_reader :blocks = [],
                                            attr_reader :context = :paragraph
                                        >
                                    ]
                                >,
                                [5] #<Asciidoc::Section:0x100be88f8
                                    @parent = ...Asciidoc::Document...,
                                    attr_accessor :anchor = "X8",
                                    attr_accessor :caption = nil,
                                    attr_accessor :level = 2,
                                    attr_accessor :name = "Example Slideshows",
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [
                                        [0] #<Asciidoc::Block:0x100be7548
                                            @parent = ...Asciidoc::Section...,
                                            attr_accessor :anchor = nil,
                                            attr_accessor :buffer = [
                                                [0] "The http://www.w3.org/Talks/Tools/Slidy2/[Slidy] backend generates\n",
                                                [1] "HTML slideshows that can be viewed in any web browser.  What's nice is\n",
                                                [2] "that you can create completely self contained slideshows including\n",
                                                [3] "embedded images.\n"
                                            ],
                                            attr_accessor :caption = nil,
                                            attr_accessor :title = nil,
                                            attr_reader :blocks = [],
                                            attr_reader :context = :paragraph
                                        >,
                                        [1] #<Asciidoc::Block:0x100be72c8
                                            @parent = ...Asciidoc::Section...,
                                            attr_accessor :anchor = nil,
                                            attr_accessor :buffer = [
                                                [0] #<Asciidoc::ListItem:0x100be7200
                                                    attr_accessor :content = "Here is the link:slidy.html[slidy backend documentation] slideshow\nand here is it's link:slidy.txt[AsciiDoc source].",
                                                    attr_reader :blocks = []
                                                >,
                                                [1] #<Asciidoc::ListItem:0x100be69e0
                                                    attr_accessor :content = "An link:slidy-example.html[example slidy slideshow] and the\nlink:slidy-example.txt[AsciiDoc source].",
                                                    attr_reader :blocks = []
                                                >
                                            ],
                                            attr_accessor :caption = nil,
                                            attr_accessor :title = nil,
                                            attr_reader :blocks = [],
                                            attr_reader :context = :ulist
                                        >
                                    ]
                                >,
                                [6] #<Asciidoc::Section:0x100be5f40
                                    @parent = ...Asciidoc::Document...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :caption = nil,
                                    attr_accessor :level = 2,
                                    attr_accessor :name = "Example Web Site",
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [
                                        [0] #<Asciidoc::Block:0x100be4e10
                                            @parent = ...Asciidoc::Section...,
                                            attr_accessor :anchor = nil,
                                            attr_accessor :buffer = [
                                                [0] "The link:README-website.html[AsciiDoc website] is included in the\n",
                                                [1] "AsciiDoc distribution (in `./examples/website/`) as an example website\n",
                                                [2] "built using AsciiDoc.  See `./examples/website/README-website.txt`.\n"
                                            ],
                                            attr_accessor :caption = nil,
                                            attr_accessor :title = nil,
                                            attr_reader :blocks = [],
                                            attr_reader :context = :paragraph
                                        >
                                    ]
                                >,
                                [7] #<Asciidoc::Section:0x100be4ac8
                                    @parent = ...Asciidoc::Document...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :caption = nil,
                                    attr_accessor :level = 2,
                                    attr_accessor :name = "More examples",
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [
                                        [0] #<Asciidoc::Block:0x100be4118
                                            @parent = ...Asciidoc::Section...,
                                            attr_accessor :anchor = nil,
                                            attr_accessor :buffer = [
                                                [0] #<Asciidoc::ListItem:0x100be4050
                                                    attr_accessor :content = "See below: <<X6,'Documents written using AsciiDoc'>>.",
                                                    attr_reader :blocks = []
                                                >,
                                                [1] #<Asciidoc::ListItem:0x100be3880
                                                    attr_accessor :content = "Example link:newtables.html[Tables].",
                                                    attr_reader :blocks = []
                                                >
                                            ],
                                            attr_accessor :caption = nil,
                                            attr_accessor :title = nil,
                                            attr_reader :blocks = [],
                                            attr_reader :context = :ulist
                                        >
                                    ]
                                >
                            ]
                        >,
                        [ 2] #<Asciidoc::Section:0x100be2d90
                            @parent = ...Asciidoc::Document...,
                            attr_accessor :anchor = nil,
                            attr_accessor :caption = nil,
                            attr_accessor :level = 1,
                            attr_accessor :name = "eBook Publication",
                            attr_accessor :title = nil,
                            attr_reader :blocks = [
                                [0] #<Asciidoc::Block:0x100be19b8
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "The two most popular open eBook formats are\n",
                                        [1] "http://en.wikipedia.org/wiki/EPUB[EPUB] and PDF.\n",
                                        [2] "The AsciiDoc link:a2x.1.html[a2x] toolchain wrapper makes it easy to\n",
                                        [3] "link:publishing-ebooks-with-asciidoc.html[publish EPUB and PDF eBooks\n",
                                        [4] "with AsciiDoc]. See also <<X7,example books>> and\n",
                                        [5] "link:epub-notes.html[AsciiDoc EPUB Notes]).\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >
                            ]
                        >,
                        [ 3] #<Asciidoc::Section:0x100be1580
                            @parent = ...Asciidoc::Document...,
                            attr_accessor :anchor = nil,
                            attr_accessor :caption = nil,
                            attr_accessor :level = 1,
                            attr_accessor :name = "Blogpost weblog client",
                            attr_accessor :title = nil,
                            attr_reader :blocks = [
                                [0] #<Asciidoc::Block:0x100be01a8
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "http://srackham.wordpress.com/blogpost-readme/[blogpost] is a\n",
                                        [1] "command-line weblog client for publishing AsciiDoc documents to\n",
                                        [2] "http://wordpress.org/[WordPress] blog hosts. It creates and updates\n",
                                        [3] "weblog posts and pages directly from AsciiDoc source documents.\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >
                            ]
                        >,
                        [ 4] #<Asciidoc::Section:0x100bdfd70
                            @parent = ...Asciidoc::Document...,
                            attr_accessor :anchor = nil,
                            attr_accessor :caption = nil,
                            attr_accessor :level = 1,
                            attr_accessor :name = "Source code highlighter",
                            attr_accessor :title = nil,
                            attr_reader :blocks = [
                                [0] #<Asciidoc::Block:0x100bde8d0
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "AsciiDoc includes a link:source-highlight-filter.html[source code\n",
                                        [1] "highlighter filter] that uses\n",
                                        [2] "http://www.gnu.org/software/src-highlite/[GNU source-highlight] to\n",
                                        [3] "highlight HTML outputs. You also have the option of using the\n",
                                        [4] "http://pygments.org/[Pygments] highlighter.\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >
                            ]
                        >,
                        [ 5] #<Asciidoc::Section:0x100bde380
                            @parent = ...Asciidoc::Document...,
                            attr_accessor :anchor = "X3",
                            attr_accessor :caption = nil,
                            attr_accessor :level = 1,
                            attr_accessor :name = "Mathematical Formulae",
                            attr_accessor :title = nil,
                            attr_reader :blocks = [
                                [0] #<Asciidoc::Block:0x100bdcf30
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "You can include mathematical formulae in AsciiDoc XHTML documents using\n",
                                        [1] "link:asciimathml.html[ASCIIMathML] or link:latexmathml.html[LaTeXMathML]\n",
                                        [2] "notation.\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >,
                                [1] #<Asciidoc::Block:0x100bdcaf8
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "The link:latex-filter.html[AsciiDoc LaTeX filter] translates LaTeX\n",
                                        [1] "source to a PNG image that is automatically inserted into the AsciiDoc\n",
                                        [2] "output documents.\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >,
                                [2] #<Asciidoc::Block:0x100bdc6c0
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "AsciiDoc also has 'latexmath' macros for DocBook outputs -- they are\n",
                                        [1] "documented in link:latexmath.pdf[this PDF file] and can be used in\n",
                                        [2] "AsciiDoc documents processed by `dblatex(1)`.\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >
                            ]
                        >,
                        [ 6] #<Asciidoc::Section:0x100bdc288
                            @parent = ...Asciidoc::Document...,
                            attr_accessor :anchor = nil,
                            attr_accessor :caption = nil,
                            attr_accessor :level = 1,
                            attr_accessor :name = "Editor Support",
                            attr_accessor :title = nil,
                            attr_reader :blocks = [
                                [0] #<Asciidoc::Block:0x100bdae88
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] #<Asciidoc::ListItem:0x100bdadc0
                                            attr_accessor :content = "An AsciiDoc syntax highlighter for the Vim text editor is included in the\nAsciiDoc distribution (see 'Appendix F' of the 'AsciiDoc User Guide' for\ndetails).",
                                            attr_reader :blocks = [
                                                [0] #<Asciidoc::Block:0x100bda118
                                                    @parent = ...Asciidoc::Block...,
                                                    attr_accessor :anchor = nil,
                                                    attr_accessor :buffer = [
                                                        [0] "image::images/highlighter.png[height=400,caption=\"\",link=\"images/highlighter.png\"]\n"
                                                    ],
                                                    attr_accessor :caption = nil,
                                                    attr_accessor :title = "Syntax highlighter screenshot",
                                                    attr_reader :blocks = [],
                                                    attr_reader :context = :paragraph
                                                >
                                            ]
                                        >,
                                        [1] #<Asciidoc::ListItem:0x100bd9f10
                                            attr_accessor :content = "Dag Wieers has implemented an alternative Vim syntax file for\nAsciiDoc which can be found here\nhttp://svn.rpmforge.net/svn/trunk/tools/asciidoc-vim/.",
                                            attr_reader :blocks = []
                                        >,
                                        [2] #<Asciidoc::ListItem:0x100bd9600
                                            attr_accessor :content = "David Avsajanishvili has written a source highlighter for AsciiDoc\nfiles for http://projects.gnome.org/gtksourceview/[GtkSourceView]\n(used by http://projects.gnome.org/gedit/[gedit] and a number of\nother applications). The project is hosted here:\nhttps://launchpad.net/asciidoc-gtk-highlight",
                                            attr_reader :blocks = []
                                        >,
                                        [3] #<Asciidoc::ListItem:0x100bd8bd8
                                            attr_accessor :content = "Florian Kaufman has written 'adoc-mode.el' -- a major-mode for\nediting AsciiDoc files in Emacs, you can find it\nhttp://code.google.com/p/sensorflo-emacs/[here].",
                                            attr_reader :blocks = []
                                        >,
                                        [4] #<Asciidoc::ListItem:0x100bd8318
                                            attr_accessor :content = "The http://xpt.sourceforge.net/[*Nix Power Tools project] has\nreleased an http://xpt.sourceforge.net/tools/doc-mode/[AsciiDoc\nsyntax highlighter for Emacs].",
                                            attr_reader :blocks = []
                                        >,
                                        [5] #<Asciidoc::ListItem:0x100bd7a58
                                            attr_accessor :content = "Terrence Brannon has written\nhttp://github.com/metaperl/asciidoc-el[AsciiDoc functions for\nEmacs].",
                                            attr_reader :blocks = []
                                        >,
                                        [6] #<Asciidoc::ListItem:0x100bd7198
                                            attr_accessor :content = "Christian Zuckschwerdt has written a\nhttps://github.com/zuckschwerdt/asciidoc.tmbundle[TextMate bundle]\nfor AsciiDoc.",
                                            attr_reader :blocks = []
                                        >
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :ulist
                                >
                            ]
                        >,
                        [ 7] #<Asciidoc::Section:0x100bd65b8
                            @parent = ...Asciidoc::Document...,
                            attr_accessor :anchor = nil,
                            attr_accessor :caption = nil,
                            attr_accessor :level = 1,
                            attr_accessor :name = "Try AsciiDoc on the Web",
                            attr_accessor :title = nil,
                            attr_reader :blocks = [
                                [0] #<Asciidoc::Block:0x100bd4fd8
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "Andrew Koster has written a Web based application to interactively\n",
                                        [1] "convert and display AsciiDoc source:\n",
                                        [2] "http://andrewk.webfactional.com/asciidoc.php\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >
                            ]
                        >,
                        [ 8] #<Asciidoc::Section:0x100bd4a88
                            @parent = ...Asciidoc::Document...,
                            attr_accessor :anchor = "X2",
                            attr_accessor :caption = nil,
                            attr_accessor :level = 1,
                            attr_accessor :name = "External Resources and Applications",
                            attr_accessor :title = nil,
                            attr_reader :blocks = [
                                [0] #<Asciidoc::Block:0x100bd2328
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "Here are resources that I know of, if you know of more drop me a line\n",
                                        [1] "and I'll add them to the list.\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >,
                                [1] #<Asciidoc::Block:0x100bd20a8
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [ 0] #<Asciidoc::ListItem:0x100bd1fe0
                                            attr_accessor :content = "Check the link:INSTALL.html#X2[installation page] for packaged versions\nof AsciiDoc.",
                                            attr_reader :blocks = []
                                        >,
                                        [ 1] #<Asciidoc::ListItem:0x100bd1770
                                            attr_accessor :content = "Alex Efros has written an HTML formatted\nhttp://powerman.name/doc/asciidoc[AsciiDoc Cheatsheet] using\nAsciidoc.",
                                            attr_reader :blocks = []
                                        >,
                                        [ 2] #<Asciidoc::ListItem:0x100bd0e60
                                            attr_accessor :content = "Thomas Berker has written an\nhttp://liksom.info/blog/?q=node/114[AsciiDoc Cheatsheet] in Open\nDocument and PDF formats.",
                                            attr_reader :blocks = []
                                        >,
                                        [ 3] #<Asciidoc::ListItem:0x100bd0550
                                            attr_accessor :content = "The http://www.wikimatrix.org/[WikiMatrix] website has an excellent\nhttp://www.wikimatrix.org/syntax.php[web page] that compares the\nvarious Wiki markup syntaxes. An interesting attempt at Wiki markup\nstandardization is http://www.wikicreole.org/[CREOLE].",
                                            attr_reader :blocks = []
                                        >,
                                        [ 4] #<Asciidoc::ListItem:0x100bcfba0
                                            attr_accessor :content = "Franck Pommereau has written\nhttp://www.univ-paris12.fr/lacl/pommereau/soft/asciidoctest.html[Asciidoctest],\na program that doctests snippets of Python code within your Asciidoc\ndocuments.",
                                            attr_reader :blocks = []
                                        >,
                                        [ 5] #<Asciidoc::ListItem:0x100bcf1f0
                                            attr_accessor :content = "The http://remips.sourceforge.net/[ReMIPS] project website has been\nbuilt using AsciiDoc.",
                                            attr_reader :blocks = []
                                        >,
                                        [ 6] #<Asciidoc::ListItem:0x100bce980
                                            attr_accessor :content = "Here are some link:asciidoc-docbook-xsl.html[DocBook XSL Stylesheets\nNotes].",
                                            attr_reader :blocks = []
                                        >,
                                        [ 7] #<Asciidoc::ListItem:0x100bce110
                                            attr_accessor :content = "Karl Mowatt-Wilson has developed an http://ikiwiki.info/[ikiwiki]\nplugin for AsciiDoc which he uses to render\nhttp://mowson.org/karl[his website].  The plugin is available\nhttp://www.mowson.org/karl/colophon/[here] and there is some\ndiscussion of the ikiwiki integration\nhttp://ikiwiki.info/users/KarlMW/discussion/[here].",
                                            attr_reader :blocks = []
                                        >,
                                        [ 8] #<Asciidoc::ListItem:0x100bcd620
                                            attr_accessor :content = "Glenn Eychaner has\nhttp://groups.google.com/group/asciidoc/browse_thread/thread/bf04b55628efe214[reworked\nthe Asciidoc plugin for ikiwiki] that was created by Karl Mowson,\nthe source can be downloaded from\nhttp://dl.dropbox.com/u/11256359/asciidoc.pm",
                                            attr_reader :blocks = []
                                        >,
                                        [ 9] #<Asciidoc::ListItem:0x100bccbd0
                                            attr_accessor :content = "David Hajage has written an AsciiDoc package for the\nhttp://www.r-project.org/[R Project] (R is a free software\nenvironment for statistical computing).  'ascii' is available on\n'CRAN' (just run `install.package(\"ascii\")` from R).  Briefly,\n'ascii' replaces R results in AsciiDoc document with AsciiDoc\nmarkup.  More information and examples here:\nhttp://eusebe.github.com/ascii/.",
                                            attr_reader :blocks = []
                                        >,
                                        [10] #<Asciidoc::ListItem:0x100bcc040
                                            attr_accessor :content = "Pascal Rapaz has written a Python script to automate AsciiDoc\nwebsite generation. You can find it at\nhttp://www.rapazp.ch/opensource/tools/asciidoc.html.",
                                            attr_reader :blocks = []
                                        >,
                                        [11] #<Asciidoc::ListItem:0x100bcb730
                                            attr_accessor :content = "Jared Henley has written\nhttp://jared.henley.id.au/software/awb/documentation.html[AsciiDoc\nWebsite Builder]. 'AsciiDoc Website Builder' (awb) is a python\nprogram that automates the building of of a website written in\nAsciiDoc. All you need to write is the AsciiDoc source plus a few\nsimple configuration files.",
                                            attr_reader :blocks = []
                                        >,
                                        [12] #<Asciidoc::ListItem:0x100bcac40
                                            attr_accessor :content = "Brad Adkins has written\nhttp://dbixjcl.org/jcl/asciidocgen/asciidocgen.html[AsciiDocGen], a\nweb site generation and deployment tool that allows you write your\nweb site content in AsciiDoc. The\nhttp://dbixjcl.org/jcl/asciidocgen/asciidocgen.html[AsciiDocGen web\nsite] is managed using 'AsciiDocGen'.",
                                            attr_reader :blocks = []
                                        >,
                                        [13] #<Asciidoc::ListItem:0x100bca150
                                            attr_accessor :content = "Filippo Negroni has developed a set of tools to facilitate 'literate\nprogramming' using AsciiDoc.  The set of tools is called\nhttp://eweb.sourceforge.net/[eWEB].",
                                            attr_reader :blocks = []
                                        >,
                                        [14] #<Asciidoc::ListItem:0x100bc9840
                                            attr_accessor :content = "http://vanderwijk.info/2009/4/23/full-text-based-document-generation-using-asciidoc-and-ditaa[Ivo's\nblog] describes a http://ditaa.sourceforge.net/[ditaa] filter for\nAsciiDoc which converts http://en.wikipedia.org/wiki/ASCII_art[ASCII\nart] into graphics.",
                                            attr_reader :blocks = []
                                        >,
                                        [15] #<Asciidoc::ListItem:0x100bc8e90
                                            attr_accessor :content = "http://github.com/github/gollum[Gollum] is a git-powered wiki, it\nsupports various formats, including AsciiDoc.",
                                            attr_reader :blocks = []
                                        >,
                                        [16] #<Asciidoc::ListItem:0x100bc8620
                                            attr_accessor :content = "Gregory Rom\303\251 has written an\nhttp://github.com/gpr/redmine_asciidoc_formatter[AsciiDoc plugin]\nfor the http://www.redmine.org/[Redmine] project management\napplication.",
                                            attr_reader :blocks = []
                                        >,
                                        [17] #<Asciidoc::ListItem:0x100bc7c70
                                            attr_accessor :content = "Paul Hsu has started a\nhttp://github.com/paulhsu/AsciiDoc.CHT.userguide[Chinese translation\nof the AsciiDoc User Guide].",
                                            attr_reader :blocks = []
                                        >,
                                        [18] #<Asciidoc::ListItem:0x100bc7360
                                            attr_accessor :content = "Dag Wieers has written\nhttp://dag.wieers.com/home-made/unoconv/[UNOCONV]. 'UNOCONV' can\nexport AsciiDoc outputs to OpenOffice export formats.",
                                            attr_reader :blocks = []
                                        >,
                                        [19] #<Asciidoc::ListItem:0x100bc6a50
                                            attr_accessor :content = "Ed Keith has written http://codeextactor.berlios.de/[Code\nExtractor], it extracts code snippets from source code files and\ninserts them into AsciiDoc documents.",
                                            attr_reader :blocks = []
                                        >,
                                        [20] #<Asciidoc::ListItem:0x100bc6140
                                            attr_accessor :content = "The http://csrp.iut-blagnac.fr/jmiwebsite/home/[JMI website] hosts\na number of extras for AsciiDoc and Slidy written by Jean-Michel\nInglebert.",
                                            attr_reader :blocks = []
                                        >,
                                        [21] #<Asciidoc::ListItem:0x100bc5830
                                            attr_accessor :content = "Ryan Tomayko has written an number of\nhttp://tomayko.com/src/adoc-themes/[themes for AsciiDoc] along with\na http://tomayko.com/src/adoc-themes/hacking.html[script for\ncombining the CSS files] into single CSS theme files for AsciiDoc\nembedded CSS documents.",
                                            attr_reader :blocks = []
                                        >,
                                        [22] #<Asciidoc::ListItem:0x100bc4de0
                                            attr_accessor :content = "Ilya Portnov has written a\nhttps://gitorious.org/doc-building-system[document building system\nfor AsciiDoc], here is\nhttp://iportnov.blogspot.com/2011/03/asciidoc-beamer.html[short\narticle in Russian] describing it.",
                                            attr_reader :blocks = []
                                        >,
                                        [23] #<Asciidoc::ListItem:0x100bc43b8
                                            attr_accessor :content = "Lex Trotman has written\nhttps://github.com/elextr/codiicsa[codiicsa], a program that\nconverts DocBook to AsciiDoc.",
                                            attr_reader :blocks = []
                                        >,
                                        [24] #<Asciidoc::ListItem:0x100bc3af8
                                            attr_accessor :content = "Qingping Hou has written http://houqp.github.com/asciidoc-deckjs/[an\nAsciiDoc backend for deck.js].\nhttp://imakewebthings.github.com/deck.js/[deck.js] is a JavaScript\nlibrary for building modern HTML presentations (slideshows).",
                                            attr_reader :blocks = []
                                        >,
                                        [25] #<Asciidoc::ListItem:0x100bc3198
                                            attr_accessor :content = "The guys from O'Reilly Media have posted an\nhttps://github.com/oreillymedia/docbook2asciidoc[XSL Stylesheet to\ngithub] that converts DocBook to AsciiDoc.",
                                            attr_reader :blocks = []
                                        >
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :ulist
                                >,
                                [2] #<Asciidoc::Block:0x100bc2568
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "Please let me know if any of these links need updating.\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >
                            ]
                        >,
                        [ 9] #<Asciidoc::Section:0x100bc2018
                            @parent = ...Asciidoc::Document...,
                            attr_accessor :anchor = "X6",
                            attr_accessor :caption = nil,
                            attr_accessor :level = 1,
                            attr_accessor :name = "Documents written using AsciiDoc",
                            attr_accessor :title = nil,
                            attr_reader :blocks = [
                                [0] #<Asciidoc::Block:0x100bbfa20
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "Here are some documents I know of, if you know of more drop me a line\n",
                                        [1] "and I'll add them to the list.\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >,
                                [1] #<Asciidoc::Block:0x100bbf7a0
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [ 0] #<Asciidoc::ListItem:0x100bbf6d8
                                            attr_accessor :content = "The book http://practicalunittesting.com/[Practical Unit Testing] by\nTomek Kaczanowski was\nhttps://groups.google.com/group/asciidoc/browse_frm/thread/4ba13926262efa23[written\nusing Asciidoc].",
                                            attr_reader :blocks = []
                                        >,
                                        [ 1] #<Asciidoc::ListItem:0x100bbed00
                                            attr_accessor :content = "The book http://oreilly.com/catalog/9781449397296[Programming iOS 4]\nby Matt Neuburg was written using AsciiDoc. Matt has\nhttp://www.apeth.net/matt/iosbooktoolchain.html[written an article]\ndescribing how he used AsciiDoc and other tools to write the book.",
                                            attr_reader :blocks = []
                                        >,
                                        [ 2] #<Asciidoc::ListItem:0x100bbe328
                                            attr_accessor :content = "The book\nhttp://oreilly.com/catalog/9780596155957/index.html[Programming\nScala] by Dean Wampler and Alex Payne (O'Reilly) was\nhttp://groups.google.com/group/asciidoc/browse_frm/thread/449f1199343f0e27[written\nusing Asciidoc].",
                                            attr_reader :blocks = []
                                        >,
                                        [ 3] #<Asciidoc::ListItem:0x100bbd8b0
                                            attr_accessor :content = "The http://www.ncfaculty.net/dogle/fishR/index.html[fishR] website\nhas a number of\nhttp://www.ncfaculty.net/dogle/fishR/bookex/AIFFD/AIFFD.html[book\nexamples] written using AsciiDoc.",
                                            attr_reader :blocks = []
                                        >,
                                        [ 4] #<Asciidoc::ListItem:0x100bbced8
                                            attr_accessor :content = "The Neo4j graph database project uses Asciidoc, and the output is\npublished here: http://docs.neo4j.org/. The build process includes\nlive tested source code snippets and is described\nhttp://groups.google.com/group/asciidoc/browse_thread/thread/49d570062fd3ff52[here].",
                                            attr_reader :blocks = []
                                        >,
                                        [ 5] #<Asciidoc::ListItem:0x100bbc500
                                            attr_accessor :content = "http://frugalware.org/[Frugalware Linux] uses AsciiDoc for\nhttp://frugalware.org/docs[documentation].",
                                            attr_reader :blocks = []
                                        >,
                                        [ 6] #<Asciidoc::ListItem:0x100bbbc90
                                            attr_accessor :content = "http://www.cherokee-project.com/doc/[Cherokee documentation].",
                                            attr_reader :blocks = []
                                        >,
                                        [ 7] #<Asciidoc::ListItem:0x100bbb448
                                            attr_accessor :content = "Henrik Maier produced this professional User manual using AsciiDoc:\nhttp://www.proconx.com/assets/files/products/modg100/UMMBRG300-1101.pdf",
                                            attr_reader :blocks = []
                                        >,
                                        [ 8] #<Asciidoc::ListItem:0x100bbabb0
                                            attr_accessor :content = "Henrik also produced this folded single page brochure format\nexample:\nhttp://www.proconx.com/assets/files/products/modg100/IGMBRG300-1101-up.pdf",
                                            attr_reader :blocks = [
                                                [0] #<Asciidoc::Block:0x100bb9f30
                                                    @parent = ...Asciidoc::Block...,
                                                    attr_accessor :anchor = nil,
                                                    attr_accessor :buffer = [
                                                        [0] "See this\n",
                                                        [1] "http://groups.google.com/group/asciidoc/browse_thread/thread/16ab5a06864b934f[AsciiDoc\n",
                                                        [2] "discussion group thread] for details.\n"
                                                    ],
                                                    attr_accessor :caption = nil,
                                                    attr_accessor :title = nil,
                                                    attr_reader :blocks = [],
                                                    attr_reader :context = :paragraph
                                                >
                                            ]
                                        >,
                                        [ 9] #<Asciidoc::ListItem:0x100bb9d28
                                            attr_accessor :content = "The\nhttp://www.kernel.org/pub/software/scm/git/docs/user-manual.html[Git\nUser's Manual].",
                                            attr_reader :blocks = []
                                        >,
                                        [10] #<Asciidoc::ListItem:0x100bb9418
                                            attr_accessor :content = "'Git Magic' +\nhttp://www-cs-students.stanford.edu/~blynn/gitmagic/ +\nhttp://github.com/blynn/gitmagic/tree/1e5780f658962f8f9b01638059b27275cfda095c",
                                            attr_reader :blocks = []
                                        >,
                                        [11] #<Asciidoc::ListItem:0x100bb8bf8
                                            attr_accessor :content = "'CouchDB: The Definitive Guide' +\nhttp://books.couchdb.org/relax/ +\nhttp://groups.google.com/group/asciidoc/browse_thread/thread/a60f67cbbaf862aa/d214bf7fa2d538c4?lnk=gst&q=book#d214bf7fa2d538c4",
                                            attr_reader :blocks = []
                                        >,
                                        [12] #<Asciidoc::ListItem:0x100bb83d8
                                            attr_accessor :content = "'Ramaze Manual' +\nhttp://book.ramaze.net/ +\nhttp://github.com/manveru/ramaze-book/tree/master",
                                            attr_reader :blocks = []
                                        >,
                                        [13] #<Asciidoc::ListItem:0x100bb7bb8
                                            attr_accessor :content = "Some documentation about git by Nico Schottelius (in German)\nhttp://nico.schotteli.us/papers/linux/git-firmen/.",
                                            attr_reader :blocks = []
                                        >,
                                        [14] #<Asciidoc::ListItem:0x100bb7348
                                            attr_accessor :content = "The http://www.netpromi.com/kirbybase_ruby.html[KirbyBase for Ruby]\ndatabase management system manual.",
                                            attr_reader :blocks = []
                                        >,
                                        [15] #<Asciidoc::ListItem:0x100bb6ad8
                                            attr_accessor :content = "The http://xpt.sourceforge.net/[*Nix Power Tools project] uses\nAsciiDoc for documentation.",
                                            attr_reader :blocks = []
                                        >,
                                        [16] #<Asciidoc::ListItem:0x100bb6268
                                            attr_accessor :content = "The http://www.wesnoth.org/[Battle for Wesnoth] project uses\nAsciiDoc for its http://www.wesnoth.org/wiki/WesnothManual[Manual]\nin a number of different languages.",
                                            attr_reader :blocks = []
                                        >,
                                        [17] #<Asciidoc::ListItem:0x100bb5958
                                            attr_accessor :content = "Troy Hanson uses AsciiDoc to generate user guides for the\nhttp://tpl.sourceforge.net/[tpl] and\nhttp://uthash.sourceforge.net/[uthash] projects (the HTML versions\nhave a customised contents sidebar).",
                                            attr_reader :blocks = []
                                        >,
                                        [18] #<Asciidoc::ListItem:0x100bb4fa8
                                            attr_accessor :content = "http://volnitsky.com/[Leonid Volnitsky's site] is generated using\nAsciiDoc and includes Leonid's matplotlib filter.",
                                            attr_reader :blocks = []
                                        >,
                                        [19] #<Asciidoc::ListItem:0x100bb4738
                                            attr_accessor :content = "http://www.weechat.org/[WeeChat] uses AsciiDoc for\nhttp://www.weechat.org/doc[project documentation].",
                                            attr_reader :blocks = []
                                        >,
                                        [20] #<Asciidoc::ListItem:0x100bb3ec8
                                            attr_accessor :content = "http://www.clansuite.com/[Clansuite] uses AsciiDoc for\nhttp://www.clansuite.com/documentation/[project documentation].",
                                            attr_reader :blocks = []
                                        >,
                                        [21] #<Asciidoc::ListItem:0x100bb3658
                                            attr_accessor :content = "The http://fc-solve.berlios.de/[Freecell Solver program] uses\nAsciiDoc for its\nhttp://fc-solve.berlios.de/docs/#distributed-docs[distributed\ndocumentation].",
                                            attr_reader :blocks = []
                                        >,
                                        [22] #<Asciidoc::ListItem:0x100bb2ca8
                                            attr_accessor :content = "Eric Raymond's http://gpsd.berlios.de/AIVDM.html[AIVDM/AIVDO\nprotocol decoding] documentation is written using AsciiDoc.",
                                            attr_reader :blocks = []
                                        >,
                                        [23] #<Asciidoc::ListItem:0x100bb2438
                                            attr_accessor :content = "Dwight Schauer has written an http://lxc.teegra.net/[LXC HOWTO] in\nAsciiDoc.",
                                            attr_reader :blocks = []
                                        >,
                                        [24] #<Asciidoc::ListItem:0x100bb1bc8
                                            attr_accessor :content = "The http://www.rowetel.com/ucasterisk/[Free Telephony Project]\nwebsite is generated using AsciiDoc.",
                                            attr_reader :blocks = []
                                        >,
                                        [25] #<Asciidoc::ListItem:0x100bb1358
                                            attr_accessor :content = "Warren Block has http://www.wonkity.com/~wblock/docs/[posted a\nnumber of articles written using AsciiDoc].",
                                            attr_reader :blocks = []
                                        >,
                                        [26] #<Asciidoc::ListItem:0x100bb0ae8
                                            attr_accessor :content = "The http://code.google.com/p/waf/[Waf project's] 'Waf Book' is\nwritten using AsciiDoc, there is an\nhttp://waf.googlecode.com/svn/docs/wafbook/single.html[HTML] and a\nhttp://waf.googlecode.com/svn/docs/wafbook/waf.pdf[PDF] version.",
                                            attr_reader :blocks = []
                                        >,
                                        [27] #<Asciidoc::ListItem:0x100bb0138
                                            attr_accessor :content = "The http://www.diffkit.org/[DiffKit] project's documentation and\nwebsite have been written using Asciidoc.",
                                            attr_reader :blocks = []
                                        >,
                                        [28] #<Asciidoc::ListItem:0x100baf8c8
                                            attr_accessor :content = "The http://www.networkupstools.org[Network UPS Tools] project\nhttp://www.networkupstools.org/documentation.html[documentation] is\nan example of a large documentation project written using AsciiDoc.",
                                            attr_reader :blocks = []
                                        >,
                                        [29] #<Asciidoc::ListItem:0x100baefb8
                                            attr_accessor :content = "http://www.archlinux.org/pacman/[Pacman], the\nhttp://www.archlinux.org/[Arch Linux] package manager, has been\ndocumented using AsciiDoc.",
                                            attr_reader :blocks = []
                                        >,
                                        [30] #<Asciidoc::ListItem:0x100bae6d0
                                            attr_accessor :content = "Suraj Kurapati has written a number of customized manuals for his\nOpen Source projects using AsciiDoc:",
                                            attr_reader :blocks = []
                                        >,
                                        [31] #<Asciidoc::ListItem:0x100bade60
                                            attr_accessor :content = "http://snk.tuxfamily.org/lib/detest/",
                                            attr_reader :blocks = []
                                        >,
                                        [32] #<Asciidoc::ListItem:0x100bad690
                                            attr_accessor :content = "http://snk.tuxfamily.org/lib/ember/",
                                            attr_reader :blocks = []
                                        >,
                                        [33] #<Asciidoc::ListItem:0x100bacec0
                                            attr_accessor :content = "http://snk.tuxfamily.org/lib/inochi/",
                                            attr_reader :blocks = []
                                        >,
                                        [34] #<Asciidoc::ListItem:0x100bac6f0
                                            attr_accessor :content = "http://snk.tuxfamily.org/lib/rumai/",
                                            attr_reader :blocks = []
                                        >,
                                        [35] #<Asciidoc::ListItem:0x100babed0
                                            attr_accessor :content = "The http://cxxtest.com/[CxxTest] project (unit testing for C++\nlanguage) has written its User Guide using AsciiDoc.",
                                            attr_reader :blocks = []
                                        >
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :ulist
                                >,
                                [2] #<Asciidoc::Block:0x100bab340
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "Please let me know if any of these links need updating.\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >
                            ]
                        >,
                        [10] #<Asciidoc::Section:0x100baaf08
                            @parent = ...Asciidoc::Document...,
                            attr_accessor :anchor = nil,
                            attr_accessor :caption = nil,
                            attr_accessor :level = 1,
                            attr_accessor :name = "DocBook 5.0 Backend",
                            attr_accessor :title = nil,
                            attr_reader :blocks = [
                                [0] #<Asciidoc::Block:0x100ba9cc0
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "Shlomi Fish has begun work on a DocBook 5.0 `docbook50.conf` backend\n",
                                        [1] "configuration file, you can find it\n",
                                        [2] "http://bitbucket.org/shlomif/asciidoc[here]. See also:\n",
                                        [3] "http://groups.google.com/group/asciidoc/browse_thread/thread/4386c7cc053d51a9\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >
                            ]
                        >,
                        [11] #<Asciidoc::Section:0x100ba9770
                            @parent = ...Asciidoc::Document...,
                            attr_accessor :anchor = "X1",
                            attr_accessor :caption = nil,
                            attr_accessor :level = 1,
                            attr_accessor :name = "LaTeX Backend",
                            attr_accessor :title = nil,
                            attr_reader :blocks = [
                                [0] #<Asciidoc::Block:0x100ba80c8
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "An experimental LaTeX backend was written for AsciiDoc in 2006 by\n",
                                        [1] "Benjamin Klum.  Benjamin did a superhuman job (I admit it, I didn't\n",
                                        [2] "think this was doable due to AsciiDoc's SGML/XML bias).  Owning to to\n",
                                        [3] "other commitments, Benjamin was unable to maintain this backend.\n",
                                        [4] "Here's link:latex-backend.html[Benjamin's original documentation].\n",
                                        [5] "Incompatibilities introduced after AsciiDoc 8.2.7 broke the LaTeX\n",
                                        [6] "backend.\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >,
                                [1] #<Asciidoc::Block:0x100ba7c40
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "In 2009 Geoff Eddy stepped up and updated the LaTeX backend, thanks to\n",
                                        [1] "Geoff's efforts it now works with AsciiDoc 8.4.3. Geoff's updated\n",
                                        [2] "`latex.conf` file shipped with AsciiDoc version 8.4.4. The backend\n",
                                        [3] "still has limitations and remains experimental (see\n",
                                        [4] "link:latex-bugs.html[Geoff's notes]).\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >,
                                [2] #<Asciidoc::Block:0x100ba7830
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "It's probably also worth pointing out that LaTeX output can be\n",
                                        [1] "generated by passing AsciiDoc generated DocBook through `dblatex(1)`.\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >
                            ]
                        >,
                        [12] #<Asciidoc::Section:0x100ba73f8
                            @parent = ...Asciidoc::Document...,
                            attr_accessor :anchor = nil,
                            attr_accessor :caption = nil,
                            attr_accessor :level = 1,
                            attr_accessor :name = "Patches and bug reports",
                            attr_accessor :title = nil,
                            attr_reader :blocks = [
                                [0] #<Asciidoc::Block:0x100ba6200
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] "Patches and bug reports are are encouraged, but please try to follow\n",
                                        [1] "these guidelines:\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >,
                                [1] #<Asciidoc::Block:0x100ba5f80
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [0] #<Asciidoc::ListItem:0x100ba5eb8
                                            attr_accessor :content = "Post bug reports and patches to the\nhttp://groups.google.com/group/asciidoc[asciidoc discussion list],\nthis keeps things transparent and gives everyone a chance to\ncomment.",
                                            attr_reader :blocks = []
                                        >,
                                        [1] #<Asciidoc::ListItem:0x100ba5508
                                            attr_accessor :content = "The email subject line should be a specific and concise topic\nsummary. Commonly accepted subject line prefixes such as '[ANN]',\n'[PATCH]' and '[SOLVED]' are good.",
                                            attr_reader :blocks = []
                                        >
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :ulist
                                >,
                                [2] #<Asciidoc::Block:0x100ba47c0
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [ 0] "=== Bug reports\n",
                                        [ 1] "- When reporting problems please illustrate the problem with the\n",
                                        [ 2] "  smallest possible example that replicates the issue (and please test\n",
                                        [ 3] "  your example before posting). This technique will also help to\n",
                                        [ 4] "  eliminate red herrings prior to posting.\n",
                                        [ 5] "- Paste the commands that you executed along with any relevant\n",
                                        [ 6] "  outputs.\n",
                                        [ 7] "- Include the version of AsciiDoc and the platform you're running it\n",
                                        [ 8] "  on.\n",
                                        [ 9] "- If you can program please consider writing a patch to fix the\n",
                                        [10] "  problem.\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >,
                                [3] #<Asciidoc::Block:0x100ba4310
                                    @parent = ...Asciidoc::Section...,
                                    attr_accessor :anchor = nil,
                                    attr_accessor :buffer = [
                                        [ 0] "=== Patches\n",
                                        [ 1] "- Keep patches small and atomic (one issue per patch) -- no patch\n",
                                        [ 2] "  bombs.\n",
                                        [ 3] "- If possible test your patch against the current trunk.\n",
                                        [ 4] "- If your patch adds or modifies functionality include a short example\n",
                                        [ 5] "  that illustrates the changes.\n",
                                        [ 6] "- Send patches in `diff -u` format, inline inside the mail message is\n",
                                        [ 7] "  usually best; if it is a very long patch then send it as an\n",
                                        [ 8] "  attachment.\n",
                                        [ 9] "- Include documentation updates if you're up to it; otherwise insert\n",
                                        [10] "  'TODO' comments at relevant places in the documentation.\n"
                                    ],
                                    attr_accessor :caption = nil,
                                    attr_accessor :title = nil,
                                    attr_reader :blocks = [],
                                    attr_reader :context = :paragraph
                                >
                            ]
                        >
                    ]
                >,
                attr_accessor :anchor = nil,
                attr_accessor :buffer = [
                    [0] "'Stuart Rackham'\n",
                    [1] "************************************************************************\n"
                ],
                attr_accessor :caption = nil,
                attr_accessor :title = nil,
                attr_reader :blocks = [],
                attr_reader :context = :paragraph
            >
        ]
    >,
    attr_reader :references = {
        "X8" => "[X8]",
        "X1" => "[X1]",
        "X2" => "[X2]",
        "X3" => "[X3]",
        "X6" => "[X6]",
        "X7" => "[X7]"
    },
    attr_reader :renderer = #<Asciidoc::Renderer:0x100ba4130
        @debug = false,
        @render_stack = [],
        @views = {
                      "section" => #<SectionTemplate:0x100ba2448
                attr_reader :template = #<ERB:0x100b99730
                    @safe_level = nil,
                    attr_accessor :filename = nil,
                    attr_reader :src = "_erbout = ''; _erbout.concat \"      \";  if !anchor.nil? ; _erbout.concat \"\\n        <a name=\\\"\"\n; _erbout.concat(( anchor ).to_s); _erbout.concat \"\\\">\\n      \"\n;  end ; _erbout.concat \"\\n      <div class=\\\"sect\"\n; _erbout.concat(( level ).to_s); _erbout.concat \"\\\">\\n        <h\"\n; _erbout.concat(( level + 1 ).to_s); _erbout.concat \" id=\\\"\"; _erbout.concat(( section_id ).to_s); _erbout.concat \"\\\">\"; _erbout.concat(( name ).to_s); _erbout.concat \"</h\"; _erbout.concat(( level + 1 ).to_s); _erbout.concat \">\\n        \"\n;  if !anchor.nil? ; _erbout.concat \"\\n          </a>\\n        \"\n\n;  end ; _erbout.concat \"\\n        \"\n;  if level == 1 ; _erbout.concat \"\\n          <div class=\\\"sectionbody\\\">\"\n; _erbout.concat(( content ).to_s); _erbout.concat \"</div>\\n        \"\n;  else ; _erbout.concat \"\\n          \"\n; _erbout.concat(( content ).to_s); _erbout.concat \"\\n        \"\n;  end ; _erbout.concat \"\\n      </div>\\n      <div class=\\\"paragraph\\\">\\n        <p>\"\n\n\n; _erbout.concat(( content ).to_s); _erbout.concat \"</p>\\n      </div>\\n\"\n\n; _erbout"
                >
            >,
                "section_dlist" => #<SectionDlistTemplate:0x100ba1728>,
                     "document" => #<DocumentTemplate:0x100ba2768
                attr_reader :template = #<ERB:0x100ba1228
                    @safe_level = nil,
                    attr_accessor :filename = nil,
                    attr_reader :src = "_erbout = ''; _erbout.concat \"      <div class='man-page'>\\n        <div id=\\\"header\\\">\\n          \"\n\n;  if document ; _erbout.concat \"\\n            \"\n;  if document.header ; _erbout.concat \"\\n              <h2>\"\n; _erbout.concat(( document.header.name ).to_s); _erbout.concat \"</h2>\\n              <div class=\\\"sectionbody\\\">\"\n; _erbout.concat(( document.header.content ).to_s); _erbout.concat \"</div>\\n            \"\n;  elsif document.preamble ; _erbout.concat \"\\n              <div class=\\\"preamble\\\">\\n                <div class=\\\"sectionbody\\\">\\n                  \"\n\n\n; _erbout.concat(( document.preamble.content ).to_s); _erbout.concat \"\\n                </div>\\n              </div>\\n            \"\n\n\n;  end ; _erbout.concat \"\\n          \"\n;  end ; _erbout.concat \"\\n        </div>\\n\\n        \"\n\n\n; _erbout.concat(( content ).to_s); _erbout.concat \"\\n      </div>\\n\"\n\n; _erbout"
                >
            >,
               "section_anchor" => #<SectionAnchorTemplate:0x100ba2100>,
              "section_literal" => #<SectionLiteralTemplate:0x100ba1db8
                attr_reader :template = #<ERB:0x100b7db98
                    @safe_level = nil,
                    attr_accessor :filename = nil,
                    attr_reader :src = "_erbout = ''; _erbout.concat \"      <div class=\\\"literalblock\\\">\\n        <div class=\\\"content\\\">\\n          <pre><tt>\"\n\n; _erbout.concat(( content ).to_s); _erbout.concat \"</tt></pre>\\n        </div>\\n      </div>\\n\"\n\n\n; _erbout"
                >
            >,
                "section_ulist" => #<SectionUlistTemplate:0x100ba13e0
                attr_reader :template = #<ERB:0x100b81978
                    @safe_level = nil,
                    attr_accessor :filename = nil,
                    attr_reader :src = "_erbout = ''; _erbout.concat \"      <div class=\\\"ulist\\\">\\n        <ul>\\n          \"\n\n;  content.each do |li| ; _erbout.concat \"\\n            <li><p>\"\n; _erbout.concat(( li ).to_s); _erbout.concat \"</p></li>\\n          \"\n;  end ; _erbout.concat \"\\n        </ul>\\n      </div>\\n\"\n\n\n; _erbout"
                >
            >,
            "section_paragraph" => #<SectionParagraphTemplate:0x100ba1a70
                attr_reader :template = #<ERB:0x100b9c610
                    @safe_level = nil,
                    attr_accessor :filename = nil,
                    attr_reader :src = "_erbout = ''; _erbout.concat \"      <div class=\\\"paragraph\\\">\\n        <p>\"\n; _erbout.concat(( content ).to_s); _erbout.concat \"</p>\\n      </div>\\n\"\n\n; _erbout"
                >
            >
        }
    >,
    attr_reader :root = #<Asciidoc::Section:0x100c09bc0
        @parent = ...Asciidoc::Document...,
        attr_accessor :level = 0,
        attr_accessor :name = "AsciiDoc Home Page",
        attr_reader :blocks = [
            [ 0] #<Asciidoc::Section:0x100bfaff8
                @parent = ...Asciidoc::Document...,
                attr_accessor :anchor = nil,
                attr_accessor :caption = nil,
                attr_accessor :level = 1,
                attr_accessor :name = "Introduction",
                attr_accessor :title = nil,
                attr_reader :blocks = [
                    [0] #<Asciidoc::Block:0x100bf9d60
                        @parent = ...Asciidoc::Section...,
                        attr_accessor :anchor = nil,
                        attr_accessor :buffer = [
                            [0] "{description}\n"
                        ],
                        attr_accessor :caption = nil,
                        attr_accessor :title = nil,
                        attr_reader :blocks = [],
                        attr_reader :context = :paragraph
                    >,
                    [1] #<Asciidoc::Block:0x100bf9928
                        @parent = ...Asciidoc::Section...,
                        attr_accessor :anchor = nil,
                        attr_accessor :buffer = [
                            [0] "AsciiDoc is highly configurable: both the AsciiDoc source file syntax\n",
                            [1] "and the backend output markups (which can be almost any type of\n",
                            [2] "SGML/XML markup) can be customized and extended by the user.\n"
                        ],
                        attr_accessor :caption = nil,
                        attr_accessor :title = nil,
                        attr_reader :blocks = [],
                        attr_reader :context = :paragraph
                    >,
                    [2] #<Asciidoc::Block:0x100bf9518
                        @parent = ...Asciidoc::Section...,
                        attr_accessor :anchor = nil,
                        attr_accessor :buffer = [
                            [0] "AsciiDoc is free software and is licenced under the terms of the 'GNU\n",
                            [1] "General Public License version 2' (GPLv2).\n"
                        ],
                        attr_accessor :caption = nil,
                        attr_accessor :title = nil,
                        attr_reader :blocks = [],
                        attr_reader :context = :paragraph
                    >,
                    [3] #<Asciidoc::Block:0x100bf90e0
                        @parent = ...Asciidoc::Section...,
                        attr_accessor :anchor = nil,
                        attr_accessor :buffer = [
                            [0] "TIP: The pages you are reading were written using AsciiDoc, to view\n",
                            [1] "the corresponding AsciiDoc source click on the *Page Source* menu item\n",
                            [2] "in the left hand margin.\n"
                        ],
                        attr_accessor :caption = nil,
                        attr_accessor :title = nil,
                        attr_reader :blocks = [],
                        attr_reader :context = :paragraph
                    >
                ]
            >,
            [ 1] #<Asciidoc::Section:0x100bf8ca8
                @parent = ...Asciidoc::Document...,
                attr_accessor :anchor = nil,
                attr_accessor :caption = nil,
                attr_accessor :level = 1,
                attr_accessor :name = "Overview and Examples",
                attr_accessor :title = nil,
                attr_reader :blocks = [
                    [0] #<Asciidoc::Block:0x100bf49c8
                        @parent = ...Asciidoc::Section...,
                        attr_accessor :anchor = nil,
                        attr_accessor :buffer = [
                            [0] "You write an AsciiDoc document the same way you would write a\n",
                            [1] "normal text document, there are no markup tags or weird format\n",
                            [2] "notations. AsciiDoc files are designed to be viewed, edited and\n",
                            [3] "printed directly or translated to other presentation formats using\n",
                            [4] "the asciidoc(1) command.\n"
                        ],
                        attr_accessor :caption = nil,
                        attr_accessor :title = nil,
                        attr_reader :blocks = [],
                        attr_reader :context = :paragraph
                    >,
                    [1] #<Asciidoc::Block:0x100bf4568
                        @parent = ...Asciidoc::Section...,
                        attr_accessor :anchor = nil,
                        attr_accessor :buffer = [
                            [0] "The asciidoc(1) command translates AsciiDoc files to HTML, XHTML and\n",
                            [1] "DocBook markups.  DocBook can be post-processed to presentation\n",
                            [2] "formats such as HTML, PDF, EPUB, DVI, LaTeX, roff, and Postscript\n",
                            [3] "using readily available Open Source tools.\n"
                        ],
                        attr_accessor :caption = nil,
                        attr_accessor :title = nil,
                        attr_reader :blocks = [],
                        attr_reader :context = :paragraph
                    >,
                    [2] #<Asciidoc::Section:0x100bf4220
                        @parent = ...Asciidoc::Document...,
                        attr_accessor :anchor = nil,
                        attr_accessor :caption = nil,
                        attr_accessor :level = 2,
                        attr_accessor :name = "Example Articles",
                        attr_accessor :title = nil,
                        attr_reader :blocks = [
                            [0] #<Asciidoc::Block:0x100bf2e98
                                @parent = ...Asciidoc::Section...,
                                attr_accessor :anchor = nil,
                                attr_accessor :buffer = [
                                    [0] #<Asciidoc::ListItem:0x100bf2dd0
                                        attr_accessor :content = "This XHTML version of the\nlink:asciidoc.css-embedded.html[AsciiDoc User Guide]\nwas generated by AsciiDoc from\nlink:asciidoc.txt[this AsciiDoc file].",
                                        attr_reader :blocks = []
                                    >,
                                    [1] #<Asciidoc::ListItem:0x100bf23f8
                                        attr_accessor :content = "Here's the link:asciidoc.html[same document] created by first\ngenerating DocBook markup using AsciiDoc and then converting the\nDocBook markup to HTML using 'DocBook XSL Stylesheets'.",
                                        attr_reader :blocks = []
                                    >,
                                    [2] #<Asciidoc::ListItem:0x100bf1ac0
                                        attr_accessor :content = "The User Guide again, this time a\nlink:chunked/index.html[chunked version].",
                                        attr_reader :blocks = []
                                    >,
                                    [3] #<Asciidoc::ListItem:0x100bf1228
                                        attr_accessor :content = "AsciiDoc generated this link:article-standalone.html[stand-alone\nHTML file] containing embedded CSS, JavaScript and images from this\nlink:article.txt[AsciiDoc article template] with this command:",
                                        attr_reader :blocks = [
                                            [0] #<Asciidoc::Block:0x100bf0698
                                                @parent = ...Asciidoc::Block...,
                                                attr_accessor :anchor = nil,
                                                attr_accessor :buffer = [
                                                    [0] "  asciidoc -a data-uri -a icons -a toc -a max-width=55em article.txt\n"
                                                ],
                                                attr_accessor :caption = nil,
                                                attr_accessor :title = nil,
                                                attr_reader :blocks = [],
                                                attr_reader :context = :literal
                                            >
                                        ]
                                    >,
                                    [4] #<Asciidoc::ListItem:0x100bf0490
                                        attr_accessor :content = "The same link:article.txt[AsciiDoc article template] generated\nlink:article-html5-toc2.html[this HTML 5] (the 'toc2' attribute puts\na table of contents in the left margin) from this command:",
                                        attr_reader :blocks = [
                                            [0] #<Asciidoc::Block:0x100bef928
                                                @parent = ...Asciidoc::Block...,
                                                attr_accessor :anchor = nil,
                                                attr_accessor :buffer = [
                                                    [0] "  asciidoc -b html5 -a icons -a toc2 -a theme=flask article.txt\n"
                                                ],
                                                attr_accessor :caption = nil,
                                                attr_accessor :title = nil,
                                                attr_reader :blocks = [],
                                                attr_reader :context = :literal
                                            >
                                        ]
                                    >,
                                    [5] #<Asciidoc::ListItem:0x100bef720
                                        attr_accessor :content = "The same link:article.txt[AsciiDoc article template] produced\nthis link:article.html[HTML file] and this\nlink:article.pdf[PDF file] via DocBook markup generated by AsciiDoc.",
                                        attr_reader :blocks = []
                                    >
                                ],
                                attr_accessor :caption = nil,
                                attr_accessor :title = nil,
                                attr_reader :blocks = [],
                                attr_reader :context = :ulist
                            >
                        ]
                    >,
                    [3] #<Asciidoc::Section:0x100beeaa0
                        @parent = ...Asciidoc::Document...,
                        attr_accessor :anchor = "X7",
                        attr_accessor :caption = nil,
                        attr_accessor :level = 2,
                        attr_accessor :name = "Example Books",
                        attr_accessor :title = nil,
                        attr_reader :blocks = [
                            [0] #<Asciidoc::Block:0x100bed600
                                @parent = ...Asciidoc::Section...,
                                attr_accessor :anchor = nil,
                                attr_accessor :buffer = [
                                    [0] "AsciiDoc markup supports all the standard DocBook frontmatter and\n",
                                    [1] "backmatter sections (dedication, preface, bibliography, glossary,\n",
                                    [2] "index, colophon) plus footnotes and index entries.\n"
                                ],
                                attr_accessor :caption = nil,
                                attr_accessor :title = nil,
                                attr_reader :blocks = [],
                                attr_reader :context = :paragraph
                            >,
                            [1] #<Asciidoc::Block:0x100bed380
                                @parent = ...Asciidoc::Section...,
                                attr_accessor :anchor = nil,
                                attr_accessor :buffer = [
                                    [0] #<Asciidoc::ListItem:0x100bed2b8
                                        attr_accessor :content = "This link:book.txt[AsciiDoc book] produced link:book.html[this HTML\nfile] using the 'DocBook XSL Stylesheets'.",
                                        attr_reader :blocks = []
                                    >,
                                    [1] #<Asciidoc::ListItem:0x100beca98
                                        attr_accessor :content = "The link:asciidoc.pdf[PDF formatted AsciiDoc User Guide] was\ngenerated from asciidoc(1) DocBook output.",
                                        attr_reader :blocks = []
                                    >,
                                    [2] #<Asciidoc::ListItem:0x100bec278
                                        attr_accessor :content = "The link:asciidoc.epub[EPUB formatted AsciiDoc User Guide] was\ngenerated using link:a2x.1.html[a2x].",
                                        attr_reader :blocks = []
                                    >,
                                    [3] #<Asciidoc::ListItem:0x100beba58
                                        attr_accessor :content = "This link:book.epub[EPUB formatted book skeleton] was generated\nusing link:a2x.1.html[a2x].",
                                        attr_reader :blocks = []
                                    >,
                                    [4] #<Asciidoc::ListItem:0x100beb238
                                        attr_accessor :content = "This link:book-multi.txt[multi-part AsciiDoc book] produced\nlink:book-multi.html[this HTML file] using the 'DocBook XSL\nStylesheets'.",
                                        attr_reader :blocks = []
                                    >
                                ],
                                attr_accessor :caption = nil,
                                attr_accessor :title = nil,
                                attr_reader :blocks = [],
                                attr_reader :context = :ulist
                            >
                        ]
                    >,
                    [4] #<Asciidoc::Section:0x100bea6d0
                        @parent = ...Asciidoc::Document...,
                        attr_accessor :anchor = nil,
                        attr_accessor :caption = nil,
                        attr_accessor :level = 2,
                        attr_accessor :name = "Example UNIX Man Pages",
                        attr_accessor :title = nil,
                        attr_reader :blocks = [
                            [0] #<Asciidoc::Block:0x100be91b8
                                @parent = ...Asciidoc::Section...,
                                attr_accessor :anchor = nil,
                                attr_accessor :buffer = [
                                    [0] "HTML formatted AsciiDoc man pages\n",
                                    [1] "link:asciidoc.1.css-embedded.html[with stylesheets] and\n",
                                    [2] "link:asciidoc.1.html[without stylesheets] were generated by AsciiDoc\n",
                                    [3] "from link:asciidoc.1.txt[this file].\n"
                                ],
                                attr_accessor :caption = nil,
                                attr_accessor :title = nil,
                                attr_reader :blocks = [],
                                attr_reader :context = :paragraph
                            >,
                            [1] #<Asciidoc::Block:0x100be8d80
                                @parent = ...Asciidoc::Section...,
                                attr_accessor :anchor = nil,
                                attr_accessor :buffer = [
                                    [0] "This link:asciidoc.1[roff formatted  man page] was generated from\n",
                                    [1] "asciidoc(1) DocBook output using `xsltproc(1)` and DocBook XSL\n",
                                    [2] "Stylesheets.\n"
                                ],
                                attr_accessor :caption = nil,
                                attr_accessor :title = nil,
                                attr_reader :blocks = [],
                                attr_reader :context = :paragraph
                            >
                        ]
                    >,
                    [5] #<Asciidoc::Section:0x100be88f8
                        @parent = ...Asciidoc::Document...,
                        attr_accessor :anchor = "X8",
                        attr_accessor :caption = nil,
                        attr_accessor :level = 2,
                        attr_accessor :name = "Example Slideshows",
                        attr_accessor :title = nil,
                        attr_reader :blocks = [
                            [0] #<Asciidoc::Block:0x100be7548
                                @parent = ...Asciidoc::Section...,
                                attr_accessor :anchor = nil,
                                attr_accessor :buffer = [
                                    [0] "The http://www.w3.org/Talks/Tools/Slidy2/[Slidy] backend generates\n",
                                    [1] "HTML slideshows that can be viewed in any web browser.  What's nice is\n",
                                    [2] "that you can create completely self contained slideshows including\n",
                                    [3] "embedded images.\n"
                                ],
                                attr_accessor :caption = nil,
                                attr_accessor :title = nil,
                                attr_reader :blocks = [],
                                attr_reader :context = :paragraph
                            >,
                            [1] #<Asciidoc::Block:0x100be72c8
                                @parent = ...Asciidoc::Section...,
                                attr_accessor :anchor = nil,
                                attr_accessor :buffer = [
                                    [0] #<Asciidoc::ListItem:0x100be7200
                                        attr_accessor :content = "Here is the link:slidy.html[slidy backend documentation] slideshow\nand here is it's link:slidy.txt[AsciiDoc source].",
                                        attr_reader :blocks = []
                                    >,
                                    [1] #<Asciidoc::ListItem:0x100be69e0
                                        attr_accessor :content = "An link:slidy-example.html[example slidy slideshow] and the\nlink:slidy-example.txt[AsciiDoc source].",
                                        attr_reader :blocks = []
                                    >
                                ],
                                attr_accessor :caption = nil,
                                attr_accessor :title = nil,
                                attr_reader :blocks = [],
                                attr_reader :context = :ulist
                            >
                        ]
                    >,
                    [6] #<Asciidoc::Section:0x100be5f40
                        @parent = ...Asciidoc::Document...,
                        attr_accessor :anchor = nil,
                        attr_accessor :caption = nil,
                        attr_accessor :level = 2,
                        attr_accessor :name = "Example Web Site",
                        attr_accessor :title = nil,
                        attr_reader :blocks = [
                            [0] #<Asciidoc::Block:0x100be4e10
                                @parent = ...Asciidoc::Section...,
                                attr_accessor :anchor = nil,
                                attr_accessor :buffer = [
                                    [0] "The link:README-website.html[AsciiDoc website] is included in the\n",
                                    [1] "AsciiDoc distribution (in `./examples/website/`) as an example website\n",
                                    [2] "built using AsciiDoc.  See `./examples/website/README-website.txt`.\n"
                                ],
                                attr_accessor :caption = nil,
                                attr_accessor :title = nil,
                                attr_reader :blocks = [],
                                attr_reader :context = :paragraph
                            >
                        ]
                    >,
                    [7] #<Asciidoc::Section:0x100be4ac8
                        @parent = ...Asciidoc::Document...,
                        attr_accessor :anchor = nil,
                        attr_accessor :caption = nil,
                        attr_accessor :level = 2,
                        attr_accessor :name = "More examples",
                        attr_accessor :title = nil,
                        attr_reader :blocks = [
                            [0] #<Asciidoc::Block:0x100be4118
                                @parent = ...Asciidoc::Section...,
                                attr_accessor :anchor = nil,
                                attr_accessor :buffer = [
                                    [0] #<Asciidoc::ListItem:0x100be4050
                                        attr_accessor :content = "See below: <<X6,'Documents written using AsciiDoc'>>.",
                                        attr_reader :blocks = []
                                    >,
                                    [1] #<Asciidoc::ListItem:0x100be3880
                                        attr_accessor :content = "Example link:newtables.html[Tables].",
                                        attr_reader :blocks = []
                                    >
                                ],
                                attr_accessor :caption = nil,
                                attr_accessor :title = nil,
                                attr_reader :blocks = [],
                                attr_reader :context = :ulist
                            >
                        ]
                    >
                ]
            >,
            [ 2] #<Asciidoc::Section:0x100be2d90
                @parent = ...Asciidoc::Document...,
                attr_accessor :anchor = nil,
                attr_accessor :caption = nil,
                attr_accessor :level = 1,
                attr_accessor :name = "eBook Publication",
                attr_accessor :title = nil,
                attr_reader :blocks = [
                    [0] #<Asciidoc::Block:0x100be19b8
                        @parent = ...Asciidoc::Section...,
                        attr_accessor :anchor = nil,
                        attr_accessor :buffer = [
                            [0] "The two most popular open eBook formats are\n",
                            [1] "http://en.wikipedia.org/wiki/EPUB[EPUB] and PDF.\n",
                            [2] "The AsciiDoc link:a2x.1.html[a2x] toolchain wrapper makes it easy to\n",
                            [3] "link:publishing-ebooks-with-asciidoc.html[publish EPUB and PDF eBooks\n",
                            [4] "with AsciiDoc]. See also <<X7,example books>> and\n",
                            [5] "link:epub-notes.html[AsciiDoc EPUB Notes]).\n"
                        ],
                        attr_accessor :caption = nil,
                        attr_accessor :title = nil,
                        attr_reader :blocks = [],
                        attr_reader :context = :paragraph
                    >
                ]
            >,
            [ 3] #<Asciidoc::Section:0x100be1580
                @parent = ...Asciidoc::Document...,
                attr_accessor :anchor = nil,
                attr_accessor :caption = nil,
                attr_accessor :level = 1,
                attr_accessor :name = "Blogpost weblog client",
                attr_accessor :title = nil,
                attr_reader :blocks = [
                    [0] #<Asciidoc::Block:0x100be01a8
                        @parent = ...Asciidoc::Section...,
                        attr_accessor :anchor = nil,
                        attr_accessor :buffer = [
                            [0] "http://srackham.wordpress.com/blogpost-readme/[blogpost] is a\n",
                            [1] "command-line weblog client for publishing AsciiDoc documents to\n",
                            [2] "http://wordpress.org/[WordPress] blog hosts. It creates and updates\n",
                            [3] "weblog posts and pages directly from AsciiDoc source documents.\n"
                        ],
                        attr_accessor :caption = nil,
                        attr_accessor :title = nil,
                        attr_reader :blocks = [],
                        attr_reader :context = :paragraph
                    >
                ]
            >,
            [ 4] #<Asciidoc::Section:0x100bdfd70
                @parent = ...Asciidoc::Document...,
                attr_accessor :anchor = nil,
                attr_accessor :caption = nil,
                attr_accessor :level = 1,
                attr_accessor :name = "Source code highlighter",
                attr_accessor :title = nil,
                attr_reader :blocks = [
                    [0] #<Asciidoc::Block:0x100bde8d0
                        @parent = ...Asciidoc::Section...,
                        attr_accessor :anchor = nil,
                        attr_accessor :buffer = [
                            [0] "AsciiDoc includes a link:source-highlight-filter.html[source code\n",
                            [1] "highlighter filter] that uses\n",
                            [2] "http://www.gnu.org/software/src-highlite/[GNU source-highlight] to\n",
                            [3] "highlight HTML outputs. You also have the option of using the\n",
                            [4] "http://pygments.org/[Pygments] highlighter.\n"
                        ],
                        attr_accessor :caption = nil,
                        attr_accessor :title = nil,
                        attr_reader :blocks = [],
                        attr_reader :context = :paragraph
                    >
                ]
            >,
            [ 5] #<Asciidoc::Section:0x100bde380
                @parent = ...Asciidoc::Document...,
                attr_accessor :anchor = "X3",
                attr_accessor :caption = nil,
                attr_accessor :level = 1,
                attr_accessor :name = "Mathematical Formulae",
                attr_accessor :title = nil,
                attr_reader :blocks = [
                    [0] #<Asciidoc::Block:0x100bdcf30
                        @parent = ...Asciidoc::Section...,
                        attr_accessor :anchor = nil,
                        attr_accessor :buffer = [
                            [0] "You can include mathematical formulae in AsciiDoc XHTML documents using\n",
                            [1] "link:asciimathml.html[ASCIIMathML] or link:latexmathml.html[LaTeXMathML]\n",
                            [2] "notation.\n"
                        ],
                        attr_accessor :caption = nil,
                        attr_accessor :title = nil,
                        attr_reader :blocks = [],
                        attr_reader :context = :paragraph
                    >,
                    [1] #<Asciidoc::Block:0x100bdcaf8
                        @parent = ...Asciidoc::Section...,
                        attr_accessor :anchor = nil,
                        attr_accessor :buffer = [
                            [0] "The link:latex-filter.html[AsciiDoc LaTeX filter] translates LaTeX\n",
                            [1] "source to a PNG image that is automatically inserted into the AsciiDoc\n",
                            [2] "output documents.\n"
                        ],
                        attr_accessor :caption = nil,
                        attr_accessor :title = nil,
                        attr_reader :blocks = [],
                        attr_reader :context = :paragraph
                    >,
                    [2] #<Asciidoc::Block:0x100bdc6c0
                        @parent = ...Asciidoc::Section...,
                        attr_accessor :anchor = nil,
                        attr_accessor :buffer = [
                            [0] "AsciiDoc also has 'latexmath' macros for DocBook outputs -- they are\n",
                            [1] "documented in link:latexmath.pdf[this PDF file] and can be used in\n",
                            [2] "AsciiDoc documents processed by `dblatex(1)`.\n"
                        ],
                        attr_accessor :caption = nil,
                        attr_accessor :title = nil,
                        attr_reader :blocks = [],
                        attr_reader :context = :paragraph
                    >
                ]
            >,
            [ 6] #<Asciidoc::Section:0x100bdc288
                @parent = ...Asciidoc::Document...,
                attr_accessor :anchor = nil,
                attr_accessor :caption = nil,
                attr_accessor :level = 1,
                attr_accessor :name = "Editor Support",
                attr_accessor :title = nil,
                attr_reader :blocks = [
                    [0] #<Asciidoc::Block:0x100bdae88
                        @parent = ...Asciidoc::Section...,
                        attr_accessor :anchor = nil,
                        attr_accessor :buffer = [
                            [0] #<Asciidoc::ListItem:0x100bdadc0
                                attr_accessor :content = "An AsciiDoc syntax highlighter for the Vim text editor is included in the\nAsciiDoc distribution (see 'Appendix F' of the 'AsciiDoc User Guide' for\ndetails).",
                                attr_reader :blocks = [
                                    [0] #<Asciidoc::Block:0x100bda118
                                        @parent = ...Asciidoc::Block...,
                                        attr_accessor :anchor = nil,
                                        attr_accessor :buffer = [
                                            [0] "image::images/highlighter.png[height=400,caption=\"\",link=\"images/highlighter.png\"]\n"
                                        ],
                                        attr_accessor :caption = nil,
                                        attr_accessor :title = "Syntax highlighter screenshot",
                                        attr_reader :blocks = [],
                                        attr_reader :context = :paragraph
                                    >
                                ]
                            >,
                            [1] #<Asciidoc::ListItem:0x100bd9f10
                                attr_accessor :content = "Dag Wieers has implemented an alternative Vim syntax file for\nAsciiDoc which can be found here\nhttp://svn.rpmforge.net/svn/trunk/tools/asciidoc-vim/.",
                                attr_reader :blocks = []
                            >,
                            [2] #<Asciidoc::ListItem:0x100bd9600
                                attr_accessor :content = "David Avsajanishvili has written a source highlighter for AsciiDoc\nfiles for http://projects.gnome.org/gtksourceview/[GtkSourceView]\n(used by http://projects.gnome.org/gedit/[gedit] and a number of\nother applications). The project is hosted here:\nhttps://launchpad.net/asciidoc-gtk-highlight",
                                attr_reader :blocks = []
                            >,
                            [3] #<Asciidoc::ListItem:0x100bd8bd8
                                attr_accessor :content = "Florian Kaufman has written 'adoc-mode.el' -- a major-mode for\nediting AsciiDoc files in Emacs, you can find it\nhttp://code.google.com/p/sensorflo-emacs/[here].",
                                attr_reader :blocks = []
                            >,
                            [4] #<Asciidoc::ListItem:0x100bd8318
                                attr_accessor :content = "The http://xpt.sourceforge.net/[*Nix Power Tools project] has\nreleased an http://xpt.sourceforge.net/tools/doc-mode/[AsciiDoc\nsyntax highlighter for Emacs].",
                                attr_reader :blocks = []
                            >,
                            [5] #<Asciidoc::ListItem:0x100bd7a58
                                attr_accessor :content = "Terrence Brannon has written\nhttp://github.com/metaperl/asciidoc-el[AsciiDoc functions for\nEmacs].",
                                attr_reader :blocks = []
                            >,
                            [6] #<Asciidoc::ListItem:0x100bd7198
                                attr_accessor :content = "Christian Zuckschwerdt has written a\nhttps://github.com/zuckschwerdt/asciidoc.tmbundle[TextMate bundle]\nfor AsciiDoc.",
                                attr_reader :blocks = []
                            >
                        ],
                        attr_accessor :caption = nil,
                        attr_accessor :title = nil,
                        attr_reader :blocks = [],
                        attr_reader :context = :ulist
                    >
                ]
            >,
            [ 7] #<Asciidoc::Section:0x100bd65b8
                @parent = ...Asciidoc::Document...,
                attr_accessor :anchor = nil,
                attr_accessor :caption = nil,
                attr_accessor :level = 1,
                attr_accessor :name = "Try AsciiDoc on the Web",
                attr_accessor :title = nil,
                attr_reader :blocks = [
                    [0] #<Asciidoc::Block:0x100bd4fd8
                        @parent = ...Asciidoc::Section...,
                        attr_accessor :anchor = nil,
                        attr_accessor :buffer = [
                            [0] "Andrew Koster has written a Web based application to interactively\n",
                            [1] "convert and display AsciiDoc source:\n",
                            [2] "http://andrewk.webfactional.com/asciidoc.php\n"
                        ],
                        attr_accessor :caption = nil,
                        attr_accessor :title = nil,
                        attr_reader :blocks = [],
                        attr_reader :context = :paragraph
                    >
                ]
            >,
            [ 8] #<Asciidoc::Section:0x100bd4a88
                @parent = ...Asciidoc::Document...,
                attr_accessor :anchor = "X2",
                attr_accessor :caption = nil,
                attr_accessor :level = 1,
                attr_accessor :name = "External Resources and Applications",
                attr_accessor :title = nil,
                attr_reader :blocks = [
                    [0] #<Asciidoc::Block:0x100bd2328
                        @parent = ...Asciidoc::Section...,
                        attr_accessor :anchor = nil,
                        attr_accessor :buffer = [
                            [0] "Here are resources that I know of, if you know of more drop me a line\n",
                            [1] "and I'll add them to the list.\n"
                        ],
                        attr_accessor :caption = nil,
                        attr_accessor :title = nil,
                        attr_reader :blocks = [],
                        attr_reader :context = :paragraph
                    >,
                    [1] #<Asciidoc::Block:0x100bd20a8
                        @parent = ...Asciidoc::Section...,
                        attr_accessor :anchor = nil,
                        attr_accessor :buffer = [
                            [ 0] #<Asciidoc::ListItem:0x100bd1fe0
                                attr_accessor :content = "Check the link:INSTALL.html#X2[installation page] for packaged versions\nof AsciiDoc.",
                                attr_reader :blocks = []
                            >,
                            [ 1] #<Asciidoc::ListItem:0x100bd1770
                                attr_accessor :content = "Alex Efros has written an HTML formatted\nhttp://powerman.name/doc/asciidoc[AsciiDoc Cheatsheet] using\nAsciidoc.",
                                attr_reader :blocks = []
                            >,
                            [ 2] #<Asciidoc::ListItem:0x100bd0e60
                                attr_accessor :content = "Thomas Berker has written an\nhttp://liksom.info/blog/?q=node/114[AsciiDoc Cheatsheet] in Open\nDocument and PDF formats.",
                                attr_reader :blocks = []
                            >,
                            [ 3] #<Asciidoc::ListItem:0x100bd0550
                                attr_accessor :content = "The http://www.wikimatrix.org/[WikiMatrix] website has an excellent\nhttp://www.wikimatrix.org/syntax.php[web page] that compares the\nvarious Wiki markup syntaxes. An interesting attempt at Wiki markup\nstandardization is http://www.wikicreole.org/[CREOLE].",
                                attr_reader :blocks = []
                            >,
                            [ 4] #<Asciidoc::ListItem:0x100bcfba0
                                attr_accessor :content = "Franck Pommereau has written\nhttp://www.univ-paris12.fr/lacl/pommereau/soft/asciidoctest.html[Asciidoctest],\na program that doctests snippets of Python code within your Asciidoc\ndocuments.",
                                attr_reader :blocks = []
                            >,
                            [ 5] #<Asciidoc::ListItem:0x100bcf1f0
                                attr_accessor :content = "The http://remips.sourceforge.net/[ReMIPS] project website has been\nbuilt using AsciiDoc.",
                                attr_reader :blocks = []
                            >,
                            [ 6] #<Asciidoc::ListItem:0x100bce980
                                attr_accessor :content = "Here are some link:asciidoc-docbook-xsl.html[DocBook XSL Stylesheets\nNotes].",
                                attr_reader :blocks = []
                            >,
                            [ 7] #<Asciidoc::ListItem:0x100bce110
                                attr_accessor :content = "Karl Mowatt-Wilson has developed an http://ikiwiki.info/[ikiwiki]\nplugin for AsciiDoc which he uses to render\nhttp://mowson.org/karl[his website].  The plugin is available\nhttp://www.mowson.org/karl/colophon/[here] and there is some\ndiscussion of the ikiwiki integration\nhttp://ikiwiki.info/users/KarlMW/discussion/[here].",
                                attr_reader :blocks = []
                            >,
                            [ 8] #<Asciidoc::ListItem:0x100bcd620
                                attr_accessor :content = "Glenn Eychaner has\nhttp://groups.google.com/group/asciidoc/browse_thread/thread/bf04b55628efe214[reworked\nthe Asciidoc plugin for ikiwiki] that was created by Karl Mowson,\nthe source can be downloaded from\nhttp://dl.dropbox.com/u/11256359/asciidoc.pm",
                                attr_reader :blocks = []
                            >,
                            [ 9] #<Asciidoc::ListItem:0x100bccbd0
                                attr_accessor :content = "David Hajage has written an AsciiDoc package for the\nhttp://www.r-project.org/[R Project] (R is a free software\nenvironment for statistical computing).  'ascii' is available on\n'CRAN' (just run `install.package(\"ascii\")` from R).  Briefly,\n'ascii' replaces R results in AsciiDoc document with AsciiDoc\nmarkup.  More information and examples here:\nhttp://eusebe.github.com/ascii/.",
                                attr_reader :blocks = []
                            >,
                            [10] #<Asciidoc::ListItem:0x100bcc040
                                attr_accessor :content = "Pascal Rapaz has written a Python script to automate AsciiDoc\nwebsite generation. You can find it at\nhttp://www.rapazp.ch/opensource/tools/asciidoc.html.",
                                attr_reader :blocks = []
                            >,
                            [11] #<Asciidoc::ListItem:0x100bcb730
                                attr_accessor :content = "Jared Henley has written\nhttp://jared.henley.id.au/software/awb/documentation.html[AsciiDoc\nWebsite Builder]. 'AsciiDoc Website Builder' (awb) is a python\nprogram that automates the building of of a website written in\nAsciiDoc. All you need to write is the AsciiDoc source plus a few\nsimple configuration files.",
                                attr_reader :blocks = []
                            >,
                            [12] #<Asciidoc::ListItem:0x100bcac40
                                attr_accessor :content = "Brad Adkins has written\nhttp://dbixjcl.org/jcl/asciidocgen/asciidocgen.html[AsciiDocGen], a\nweb site generation and deployment tool that allows you write your\nweb site content in AsciiDoc. The\nhttp://dbixjcl.org/jcl/asciidocgen/asciidocgen.html[AsciiDocGen web\nsite] is managed using 'AsciiDocGen'.",
                                attr_reader :blocks = []
                            >,
                            [13] #<Asciidoc::ListItem:0x100bca150
                                attr_accessor :content = "Filippo Negroni has developed a set of tools to facilitate 'literate\nprogramming' using AsciiDoc.  The set of tools is called\nhttp://eweb.sourceforge.net/[eWEB].",
                                attr_reader :blocks = []
                            >,
                            [14] #<Asciidoc::ListItem:0x100bc9840
                                attr_accessor :content = "http://vanderwijk.info/2009/4/23/full-text-based-document-generation-using-asciidoc-and-ditaa[Ivo's\nblog] describes a http://ditaa.sourceforge.net/[ditaa] filter for\nAsciiDoc which converts http://en.wikipedia.org/wiki/ASCII_art[ASCII\nart] into graphics.",
                                attr_reader :blocks = []
                            >,
                            [15] #<Asciidoc::ListItem:0x100bc8e90
                                attr_accessor :content = "http://github.com/github/gollum[Gollum] is a git-powered wiki, it\nsupports various formats, including AsciiDoc.",
                                attr_reader :blocks = []
                            >,
                            [16] #<Asciidoc::ListItem:0x100bc8620
                                attr_accessor :content = "Gregory Rom\303\251 has written an\nhttp://github.com/gpr/redmine_asciidoc_formatter[AsciiDoc plugin]\nfor the http://www.redmine.org/[Redmine] project management\napplication.",
                                attr_reader :blocks = []
                            >,
                            [17] #<Asciidoc::ListItem:0x100bc7c70
                                attr_accessor :content = "Paul Hsu has started a\nhttp://github.com/paulhsu/AsciiDoc.CHT.userguide[Chinese translation\nof the AsciiDoc User Guide].",
                                attr_reader :blocks = []
                            >,
                            [18] #<Asciidoc::ListItem:0x100bc7360
                                attr_accessor :content = "Dag Wieers has written\nhttp://dag.wieers.com/home-made/unoconv/[UNOCONV]. 'UNOCONV' can\nexport AsciiDoc outputs to OpenOffice export formats.",
                                attr_reader :blocks = []
                            >,
                            [19] #<Asciidoc::ListItem:0x100bc6a50
                                attr_accessor :content = "Ed Keith has written http://codeextactor.berlios.de/[Code\nExtractor], it extracts code snippets from source code files and\ninserts them into AsciiDoc documents.",
                                attr_reader :blocks = []
                            >,
                            [20] #<Asciidoc::ListItem:0x100bc6140
                                attr_accessor :content = "The http://csrp.iut-blagnac.fr/jmiwebsite/home/[JMI website] hosts\na number of extras for AsciiDoc and Slidy written by Jean-Michel\nInglebert.",
                                attr_reader :blocks = []
                            >,
                            [21] #<Asciidoc::ListItem:0x100bc5830
                                attr_accessor :content = "Ryan Tomayko has written an number of\nhttp://tomayko.com/src/adoc-themes/[themes for AsciiDoc] along with\na http://tomayko.com/src/adoc-themes/hacking.html[script for\ncombining the CSS files] into single CSS theme files for AsciiDoc\nembedded CSS documents.",
                                attr_reader :blocks = []
                            >,
                            [22] #<Asciidoc::ListItem:0x100bc4de0
                                attr_accessor :content = "Ilya Portnov has written a\nhttps://gitorious.org/doc-building-system[document building system\nfor AsciiDoc], here is\nhttp://iportnov.blogspot.com/2011/03/asciidoc-beamer.html[short\narticle in Russian] describing it.",
                                attr_reader :blocks = []
                            >,
                            [23] #<Asciidoc::ListItem:0x100bc43b8
                                attr_accessor :content = "Lex Trotman has written\nhttps://github.com/elextr/codiicsa[codiicsa], a program that\nconverts DocBook to AsciiDoc.",
                                attr_reader :blocks = []
                            >,
                            [24] #<Asciidoc::ListItem:0x100bc3af8
                                attr_accessor :content = "Qingping Hou has written http://houqp.github.com/asciidoc-deckjs/[an\nAsciiDoc backend for deck.js].\nhttp://imakewebthings.github.com/deck.js/[deck.js] is a JavaScript\nlibrary for building modern HTML presentations (slideshows).",
                                attr_reader :blocks = []
                            >,
                            [25] #<Asciidoc::ListItem:0x100bc3198
                                attr_accessor :content = "The guys from O'Reilly Media have posted an\nhttps://github.com/oreillymedia/docbook2asciidoc[XSL Stylesheet to\ngithub] that converts DocBook to AsciiDoc.",
                                attr_reader :blocks = []
                            >
                        ],
                        attr_accessor :caption = nil,
                        attr_accessor :title = nil,
                        attr_reader :blocks = [],
                        attr_reader :context = :ulist
                    >,
                    [2] #<Asciidoc::Block:0x100bc2568
                        @parent = ...Asciidoc::Section...,
                        attr_accessor :anchor = nil,
                        attr_accessor :buffer = [
                            [0] "Please let me know if any of these links need updating.\n"
                        ],
                        attr_accessor :caption = nil,
                        attr_accessor :title = nil,
                        attr_reader :blocks = [],
                        attr_reader :context = :paragraph
                    >
                ]
            >,
            [ 9] #<Asciidoc::Section:0x100bc2018
                @parent = ...Asciidoc::Document...,
                attr_accessor :anchor = "X6",
                attr_accessor :caption = nil,
                attr_accessor :level = 1,
                attr_accessor :name = "Documents written using AsciiDoc",
                attr_accessor :title = nil,
                attr_reader :blocks = [
                    [0] #<Asciidoc::Block:0x100bbfa20
                        @parent = ...Asciidoc::Section...,
                        attr_accessor :anchor = nil,
                        attr_accessor :buffer = [
                            [0] "Here are some documents I know of, if you know of more drop me a line\n",
                            [1] "and I'll add them to the list.\n"
                        ],
                        attr_accessor :caption = nil,
                        attr_accessor :title = nil,
                        attr_reader :blocks = [],
                        attr_reader :context = :paragraph
                    >,
                    [1] #<Asciidoc::Block:0x100bbf7a0
                        @parent = ...Asciidoc::Section...,
                        attr_accessor :anchor = nil,
                        attr_accessor :buffer = [
                            [ 0] #<Asciidoc::ListItem:0x100bbf6d8
                                attr_accessor :content = "The book http://practicalunittesting.com/[Practical Unit Testing] by\nTomek Kaczanowski was\nhttps://groups.google.com/group/asciidoc/browse_frm/thread/4ba13926262efa23[written\nusing Asciidoc].",
                                attr_reader :blocks = []
                            >,
                            [ 1] #<Asciidoc::ListItem:0x100bbed00
                                attr_accessor :content = "The book http://oreilly.com/catalog/9781449397296[Programming iOS 4]\nby Matt Neuburg was written using AsciiDoc. Matt has\nhttp://www.apeth.net/matt/iosbooktoolchain.html[written an article]\ndescribing how he used AsciiDoc and other tools to write the book.",
                                attr_reader :blocks = []
                            >,
                            [ 2] #<Asciidoc::ListItem:0x100bbe328
                                attr_accessor :content = "The book\nhttp://oreilly.com/catalog/9780596155957/index.html[Programming\nScala] by Dean Wampler and Alex Payne (O'Reilly) was\nhttp://groups.google.com/group/asciidoc/browse_frm/thread/449f1199343f0e27[written\nusing Asciidoc].",
                                attr_reader :blocks = []
                            >,
                            [ 3] #<Asciidoc::ListItem:0x100bbd8b0
                                attr_accessor :content = "The http://www.ncfaculty.net/dogle/fishR/index.html[fishR] website\nhas a number of\nhttp://www.ncfaculty.net/dogle/fishR/bookex/AIFFD/AIFFD.html[book\nexamples] written using AsciiDoc.",
                                attr_reader :blocks = []
                            >,
                            [ 4] #<Asciidoc::ListItem:0x100bbced8
                                attr_accessor :content = "The Neo4j graph database project uses Asciidoc, and the output is\npublished here: http://docs.neo4j.org/. The build process includes\nlive tested source code snippets and is described\nhttp://groups.google.com/group/asciidoc/browse_thread/thread/49d570062fd3ff52[here].",
                                attr_reader :blocks = []
                            >,
                            [ 5] #<Asciidoc::ListItem:0x100bbc500
                                attr_accessor :content = "http://frugalware.org/[Frugalware Linux] uses AsciiDoc for\nhttp://frugalware.org/docs[documentation].",
                                attr_reader :blocks = []
                            >,
                            [ 6] #<Asciidoc::ListItem:0x100bbbc90
                                attr_accessor :content = "http://www.cherokee-project.com/doc/[Cherokee documentation].",
                                attr_reader :blocks = []
                            >,
                            [ 7] #<Asciidoc::ListItem:0x100bbb448
                                attr_accessor :content = "Henrik Maier produced this professional User manual using AsciiDoc:\nhttp://www.proconx.com/assets/files/products/modg100/UMMBRG300-1101.pdf",
                                attr_reader :blocks = []
                            >,
                            [ 8] #<Asciidoc::ListItem:0x100bbabb0
                                attr_accessor :content = "Henrik also produced this folded single page brochure format\nexample:\nhttp://www.proconx.com/assets/files/products/modg100/IGMBRG300-1101-up.pdf",
                                attr_reader :blocks = [
                                    [0] #<Asciidoc::Block:0x100bb9f30
                                        @parent = ...Asciidoc::Block...,
                                        attr_accessor :anchor = nil,
                                        attr_accessor :buffer = [
                                            [0] "See this\n",
                                            [1] "http://groups.google.com/group/asciidoc/browse_thread/thread/16ab5a06864b934f[AsciiDoc\n",
                                            [2] "discussion group thread] for details.\n"
                                        ],
                                        attr_accessor :caption = nil,
                                        attr_accessor :title = nil,
                                        attr_reader :blocks = [],
                                        attr_reader :context = :paragraph
                                    >
                                ]
                            >,
                            [ 9] #<Asciidoc::ListItem:0x100bb9d28
                                attr_accessor :content = "The\nhttp://www.kernel.org/pub/software/scm/git/docs/user-manual.html[Git\nUser's Manual].",
                                attr_reader :blocks = []
                            >,
                            [10] #<Asciidoc::ListItem:0x100bb9418
                                attr_accessor :content = "'Git Magic' +\nhttp://www-cs-students.stanford.edu/~blynn/gitmagic/ +\nhttp://github.com/blynn/gitmagic/tree/1e5780f658962f8f9b01638059b27275cfda095c",
                                attr_reader :blocks = []
                            >,
                            [11] #<Asciidoc::ListItem:0x100bb8bf8
                                attr_accessor :content = "'CouchDB: The Definitive Guide' +\nhttp://books.couchdb.org/relax/ +\nhttp://groups.google.com/group/asciidoc/browse_thread/thread/a60f67cbbaf862aa/d214bf7fa2d538c4?lnk=gst&q=book#d214bf7fa2d538c4",
                                attr_reader :blocks = []
                            >,
                            [12] #<Asciidoc::ListItem:0x100bb83d8
                                attr_accessor :content = "'Ramaze Manual' +\nhttp://book.ramaze.net/ +\nhttp://github.com/manveru/ramaze-book/tree/master",
                                attr_reader :blocks = []
                            >,
                            [13] #<Asciidoc::ListItem:0x100bb7bb8
                                attr_accessor :content = "Some documentation about git by Nico Schottelius (in German)\nhttp://nico.schotteli.us/papers/linux/git-firmen/.",
                                attr_reader :blocks = []
                            >,
                            [14] #<Asciidoc::ListItem:0x100bb7348
                                attr_accessor :content = "The http://www.netpromi.com/kirbybase_ruby.html[KirbyBase for Ruby]\ndatabase management system manual.",
                                attr_reader :blocks = []
                            >,
                            [15] #<Asciidoc::ListItem:0x100bb6ad8
                                attr_accessor :content = "The http://xpt.sourceforge.net/[*Nix Power Tools project] uses\nAsciiDoc for documentation.",
                                attr_reader :blocks = []
                            >,
                            [16] #<Asciidoc::ListItem:0x100bb6268
                                attr_accessor :content = "The http://www.wesnoth.org/[Battle for Wesnoth] project uses\nAsciiDoc for its http://www.wesnoth.org/wiki/WesnothManual[Manual]\nin a number of different languages.",
                                attr_reader :blocks = []
                            >,
                            [17] #<Asciidoc::ListItem:0x100bb5958
                                attr_accessor :content = "Troy Hanson uses AsciiDoc to generate user guides for the\nhttp://tpl.sourceforge.net/[tpl] and\nhttp://uthash.sourceforge.net/[uthash] projects (the HTML versions\nhave a customised contents sidebar).",
                                attr_reader :blocks = []
                            >,
                            [18] #<Asciidoc::ListItem:0x100bb4fa8
                                attr_accessor :content = "http://volnitsky.com/[Leonid Volnitsky's site] is generated using\nAsciiDoc and includes Leonid's matplotlib filter.",
                                attr_reader :blocks = []
                            >,
                            [19] #<Asciidoc::ListItem:0x100bb4738
                                attr_accessor :content = "http://www.weechat.org/[WeeChat] uses AsciiDoc for\nhttp://www.weechat.org/doc[project documentation].",
                                attr_reader :blocks = []
                            >,
                            [20] #<Asciidoc::ListItem:0x100bb3ec8
                                attr_accessor :content = "http://www.clansuite.com/[Clansuite] uses AsciiDoc for\nhttp://www.clansuite.com/documentation/[project documentation].",
                                attr_reader :blocks = []
                            >,
                            [21] #<Asciidoc::ListItem:0x100bb3658
                                attr_accessor :content = "The http://fc-solve.berlios.de/[Freecell Solver program] uses\nAsciiDoc for its\nhttp://fc-solve.berlios.de/docs/#distributed-docs[distributed\ndocumentation].",
                                attr_reader :blocks = []
                            >,
                            [22] #<Asciidoc::ListItem:0x100bb2ca8
                                attr_accessor :content = "Eric Raymond's http://gpsd.berlios.de/AIVDM.html[AIVDM/AIVDO\nprotocol decoding] documentation is written using AsciiDoc.",
                                attr_reader :blocks = []
                            >,
                            [23] #<Asciidoc::ListItem:0x100bb2438
                                attr_accessor :content = "Dwight Schauer has written an http://lxc.teegra.net/[LXC HOWTO] in\nAsciiDoc.",
                                attr_reader :blocks = []
                            >,
                            [24] #<Asciidoc::ListItem:0x100bb1bc8
                                attr_accessor :content = "The http://www.rowetel.com/ucasterisk/[Free Telephony Project]\nwebsite is generated using AsciiDoc.",
                                attr_reader :blocks = []
                            >,
                            [25] #<Asciidoc::ListItem:0x100bb1358
                                attr_accessor :content = "Warren Block has http://www.wonkity.com/~wblock/docs/[posted a\nnumber of articles written using AsciiDoc].",
                                attr_reader :blocks = []
                            >,
                            [26] #<Asciidoc::ListItem:0x100bb0ae8
                                attr_accessor :content = "The http://code.google.com/p/waf/[Waf project's] 'Waf Book' is\nwritten using AsciiDoc, there is an\nhttp://waf.googlecode.com/svn/docs/wafbook/single.html[HTML] and a\nhttp://waf.googlecode.com/svn/docs/wafbook/waf.pdf[PDF] version.",
                                attr_reader :blocks = []
                            >,
                            [27] #<Asciidoc::ListItem:0x100bb0138
                                attr_accessor :content = "The http://www.diffkit.org/[DiffKit] project's documentation and\nwebsite have been written using Asciidoc.",
                                attr_reader :blocks = []
                            >,
                            [28] #<Asciidoc::ListItem:0x100baf8c8
                                attr_accessor :content = "The http://www.networkupstools.org[Network UPS Tools] project\nhttp://www.networkupstools.org/documentation.html[documentation] is\nan example of a large documentation project written using AsciiDoc.",
                                attr_reader :blocks = []
                            >,
                            [29] #<Asciidoc::ListItem:0x100baefb8
                                attr_accessor :content = "http://www.archlinux.org/pacman/[Pacman], the\nhttp://www.archlinux.org/[Arch Linux] package manager, has been\ndocumented using AsciiDoc.",
                                attr_reader :blocks = []
                            >,
                            [30] #<Asciidoc::ListItem:0x100bae6d0
                                attr_accessor :content = "Suraj Kurapati has written a number of customized manuals for his\nOpen Source projects using AsciiDoc:",
                                attr_reader :blocks = []
                            >,
                            [31] #<Asciidoc::ListItem:0x100bade60
                                attr_accessor :content = "http://snk.tuxfamily.org/lib/detest/",
                                attr_reader :blocks = []
                            >,
                            [32] #<Asciidoc::ListItem:0x100bad690
                                attr_accessor :content = "http://snk.tuxfamily.org/lib/ember/",
                                attr_reader :blocks = []
                            >,
                            [33] #<Asciidoc::ListItem:0x100bacec0
                                attr_accessor :content = "http://snk.tuxfamily.org/lib/inochi/",
                                attr_reader :blocks = []
                            >,
                            [34] #<Asciidoc::ListItem:0x100bac6f0
                                attr_accessor :content = "http://snk.tuxfamily.org/lib/rumai/",
                                attr_reader :blocks = []
                            >,
                            [35] #<Asciidoc::ListItem:0x100babed0
                                attr_accessor :content = "The http://cxxtest.com/[CxxTest] project (unit testing for C++\nlanguage) has written its User Guide using AsciiDoc.",
                                attr_reader :blocks = []
                            >
                        ],
                        attr_accessor :caption = nil,
                        attr_accessor :title = nil,
                        attr_reader :blocks = [],
                        attr_reader :context = :ulist
                    >,
                    [2] #<Asciidoc::Block:0x100bab340
                        @parent = ...Asciidoc::Section...,
                        attr_accessor :anchor = nil,
                        attr_accessor :buffer = [
                            [0] "Please let me know if any of these links need updating.\n"
                        ],
                        attr_accessor :caption = nil,
                        attr_accessor :title = nil,
                        attr_reader :blocks = [],
                        attr_reader :context = :paragraph
                    >
                ]
            >,
            [10] #<Asciidoc::Section:0x100baaf08
                @parent = ...Asciidoc::Document...,
                attr_accessor :anchor = nil,
                attr_accessor :caption = nil,
                attr_accessor :level = 1,
                attr_accessor :name = "DocBook 5.0 Backend",
                attr_accessor :title = nil,
                attr_reader :blocks = [
                    [0] #<Asciidoc::Block:0x100ba9cc0
                        @parent = ...Asciidoc::Section...,
                        attr_accessor :anchor = nil,
                        attr_accessor :buffer = [
                            [0] "Shlomi Fish has begun work on a DocBook 5.0 `docbook50.conf` backend\n",
                            [1] "configuration file, you can find it\n",
                            [2] "http://bitbucket.org/shlomif/asciidoc[here]. See also:\n",
                            [3] "http://groups.google.com/group/asciidoc/browse_thread/thread/4386c7cc053d51a9\n"
                        ],
                        attr_accessor :caption = nil,
                        attr_accessor :title = nil,
                        attr_reader :blocks = [],
                        attr_reader :context = :paragraph
                    >
                ]
            >,
            [11] #<Asciidoc::Section:0x100ba9770
                @parent = ...Asciidoc::Document...,
                attr_accessor :anchor = "X1",
                attr_accessor :caption = nil,
                attr_accessor :level = 1,
                attr_accessor :name = "LaTeX Backend",
                attr_accessor :title = nil,
                attr_reader :blocks = [
                    [0] #<Asciidoc::Block:0x100ba80c8
                        @parent = ...Asciidoc::Section...,
                        attr_accessor :anchor = nil,
                        attr_accessor :buffer = [
                            [0] "An experimental LaTeX backend was written for AsciiDoc in 2006 by\n",
                            [1] "Benjamin Klum.  Benjamin did a superhuman job (I admit it, I didn't\n",
                            [2] "think this was doable due to AsciiDoc's SGML/XML bias).  Owning to to\n",
                            [3] "other commitments, Benjamin was unable to maintain this backend.\n",
                            [4] "Here's link:latex-backend.html[Benjamin's original documentation].\n",
                            [5] "Incompatibilities introduced after AsciiDoc 8.2.7 broke the LaTeX\n",
                            [6] "backend.\n"
                        ],
                        attr_accessor :caption = nil,
                        attr_accessor :title = nil,
                        attr_reader :blocks = [],
                        attr_reader :context = :paragraph
                    >,
                    [1] #<Asciidoc::Block:0x100ba7c40
                        @parent = ...Asciidoc::Section...,
                        attr_accessor :anchor = nil,
                        attr_accessor :buffer = [
                            [0] "In 2009 Geoff Eddy stepped up and updated the LaTeX backend, thanks to\n",
                            [1] "Geoff's efforts it now works with AsciiDoc 8.4.3. Geoff's updated\n",
                            [2] "`latex.conf` file shipped with AsciiDoc version 8.4.4. The backend\n",
                            [3] "still has limitations and remains experimental (see\n",
                            [4] "link:latex-bugs.html[Geoff's notes]).\n"
                        ],
                        attr_accessor :caption = nil,
                        attr_accessor :title = nil,
                        attr_reader :blocks = [],
                        attr_reader :context = :paragraph
                    >,
                    [2] #<Asciidoc::Block:0x100ba7830
                        @parent = ...Asciidoc::Section...,
                        attr_accessor :anchor = nil,
                        attr_accessor :buffer = [
                            [0] "It's probably also worth pointing out that LaTeX output can be\n",
                            [1] "generated by passing AsciiDoc generated DocBook through `dblatex(1)`.\n"
                        ],
                        attr_accessor :caption = nil,
                        attr_accessor :title = nil,
                        attr_reader :blocks = [],
                        attr_reader :context = :paragraph
                    >
                ]
            >,
            [12] #<Asciidoc::Section:0x100ba73f8
                @parent = ...Asciidoc::Document...,
                attr_accessor :anchor = nil,
                attr_accessor :caption = nil,
                attr_accessor :level = 1,
                attr_accessor :name = "Patches and bug reports",
                attr_accessor :title = nil,
                attr_reader :blocks = [
                    [0] #<Asciidoc::Block:0x100ba6200
                        @parent = ...Asciidoc::Section...,
                        attr_accessor :anchor = nil,
                        attr_accessor :buffer = [
                            [0] "Patches and bug reports are are encouraged, but please try to follow\n",
                            [1] "these guidelines:\n"
                        ],
                        attr_accessor :caption = nil,
                        attr_accessor :title = nil,
                        attr_reader :blocks = [],
                        attr_reader :context = :paragraph
                    >,
                    [1] #<Asciidoc::Block:0x100ba5f80
                        @parent = ...Asciidoc::Section...,
                        attr_accessor :anchor = nil,
                        attr_accessor :buffer = [
                            [0] #<Asciidoc::ListItem:0x100ba5eb8
                                attr_accessor :content = "Post bug reports and patches to the\nhttp://groups.google.com/group/asciidoc[asciidoc discussion list],\nthis keeps things transparent and gives everyone a chance to\ncomment.",
                                attr_reader :blocks = []
                            >,
                            [1] #<Asciidoc::ListItem:0x100ba5508
                                attr_accessor :content = "The email subject line should be a specific and concise topic\nsummary. Commonly accepted subject line prefixes such as '[ANN]',\n'[PATCH]' and '[SOLVED]' are good.",
                                attr_reader :blocks = []
                            >
                        ],
                        attr_accessor :caption = nil,
                        attr_accessor :title = nil,
                        attr_reader :blocks = [],
                        attr_reader :context = :ulist
                    >,
                    [2] #<Asciidoc::Block:0x100ba47c0
                        @parent = ...Asciidoc::Section...,
                        attr_accessor :anchor = nil,
                        attr_accessor :buffer = [
                            [ 0] "=== Bug reports\n",
                            [ 1] "- When reporting problems please illustrate the problem with the\n",
                            [ 2] "  smallest possible example that replicates the issue (and please test\n",
                            [ 3] "  your example before posting). This technique will also help to\n",
                            [ 4] "  eliminate red herrings prior to posting.\n",
                            [ 5] "- Paste the commands that you executed along with any relevant\n",
                            [ 6] "  outputs.\n",
                            [ 7] "- Include the version of AsciiDoc and the platform you're running it\n",
                            [ 8] "  on.\n",
                            [ 9] "- If you can program please consider writing a patch to fix the\n",
                            [10] "  problem.\n"
                        ],
                        attr_accessor :caption = nil,
                        attr_accessor :title = nil,
                        attr_reader :blocks = [],
                        attr_reader :context = :paragraph
                    >,
                    [3] #<Asciidoc::Block:0x100ba4310
                        @parent = ...Asciidoc::Section...,
                        attr_accessor :anchor = nil,
                        attr_accessor :buffer = [
                            [ 0] "=== Patches\n",
                            [ 1] "- Keep patches small and atomic (one issue per patch) -- no patch\n",
                            [ 2] "  bombs.\n",
                            [ 3] "- If possible test your patch against the current trunk.\n",
                            [ 4] "- If your patch adds or modifies functionality include a short example\n",
                            [ 5] "  that illustrates the changes.\n",
                            [ 6] "- Send patches in `diff -u` format, inline inside the mail message is\n",
                            [ 7] "  usually best; if it is a very long patch then send it as an\n",
                            [ 8] "  attachment.\n",
                            [ 9] "- Include documentation updates if you're up to it; otherwise insert\n",
                            [10] "  'TODO' comments at relevant places in the documentation.\n"
                        ],
                        attr_accessor :caption = nil,
                        attr_accessor :title = nil,
                        attr_reader :blocks = [],
                        attr_reader :context = :paragraph
                    >
                ]
            >
        ]
    >,
    attr_reader :source = "AsciiDoc Home Page\n==================\n\n\n.{revdate}: AsciiDoc {revnumber} Released\n************************************************************************\nRead the link:CHANGELOG.html[CHANGELOG] for release highlights and a\nfull list of all additions, changes and bug fixes. Changes are\ndocumented in the updated link:userguide.html[User Guide]. See the\nlink:INSTALL.html[Installation page] for downloads and and\ninstallation instructions.\n\n'Stuart Rackham'\n************************************************************************\n\nIntroduction\n------------\n{description}\n\nAsciiDoc is highly configurable: both the AsciiDoc source file syntax\nand the backend output markups (which can be almost any type of\nSGML/XML markup) can be customized and extended by the user.\n\nAsciiDoc is free software and is licenced under the terms of the 'GNU\nGeneral Public License version 2' (GPLv2).\n\nTIP: The pages you are reading were written using AsciiDoc, to view\nthe corresponding AsciiDoc source click on the *Page Source* menu item\nin the left hand margin.\n\n\nOverview and Examples\n---------------------\nYou write an AsciiDoc document the same way you would write a\nnormal text document, there are no markup tags or weird format\nnotations. AsciiDoc files are designed to be viewed, edited and\nprinted directly or translated to other presentation formats using\nthe asciidoc(1) command.\n\nThe asciidoc(1) command translates AsciiDoc files to HTML, XHTML and\nDocBook markups.  DocBook can be post-processed to presentation\nformats such as HTML, PDF, EPUB, DVI, LaTeX, roff, and Postscript\nusing readily available Open Source tools.\n\nExample Articles\n~~~~~~~~~~~~~~~~\n- This XHTML version of the\n  link:asciidoc.css-embedded.html[AsciiDoc User Guide]\n  was generated by AsciiDoc from\n  link:asciidoc.txt[this AsciiDoc file].\n\n- Here's the link:asciidoc.html[same document] created by first\n  generating DocBook markup using AsciiDoc and then converting the\n  DocBook markup to HTML using 'DocBook XSL Stylesheets'.\n\n- The User Guide again, this time a\n  link:chunked/index.html[chunked version].\n\n- AsciiDoc generated this link:article-standalone.html[stand-alone\n  HTML file] containing embedded CSS, JavaScript and images from this\n  link:article.txt[AsciiDoc article template] with this command:\n\n  asciidoc -a data-uri -a icons -a toc -a max-width=55em article.txt\n\n- The same link:article.txt[AsciiDoc article template] generated\n  link:article-html5-toc2.html[this HTML 5] (the 'toc2' attribute puts\n  a table of contents in the left margin) from this command:\n\n  asciidoc -b html5 -a icons -a toc2 -a theme=flask article.txt\n\n- The same link:article.txt[AsciiDoc article template] produced\n  this link:article.html[HTML file] and this\n  link:article.pdf[PDF file] via DocBook markup generated by AsciiDoc.\n\n[[X7]]\nExample Books\n~~~~~~~~~~~~~\nAsciiDoc markup supports all the standard DocBook frontmatter and\nbackmatter sections (dedication, preface, bibliography, glossary,\nindex, colophon) plus footnotes and index entries.\n\n- This link:book.txt[AsciiDoc book] produced link:book.html[this HTML\n  file] using the 'DocBook XSL Stylesheets'.\n- The link:asciidoc.pdf[PDF formatted AsciiDoc User Guide] was\n  generated from asciidoc(1) DocBook output.\n- The link:asciidoc.epub[EPUB formatted AsciiDoc User Guide] was\n  generated using link:a2x.1.html[a2x].\n- This link:book.epub[EPUB formatted book skeleton] was generated\n  using link:a2x.1.html[a2x].\n- This link:book-multi.txt[multi-part AsciiDoc book] produced\n  link:book-multi.html[this HTML file] using the 'DocBook XSL\n  Stylesheets'.\n\nExample UNIX Man Pages\n~~~~~~~~~~~~~~~~~~~~~~\nHTML formatted AsciiDoc man pages\nlink:asciidoc.1.css-embedded.html[with stylesheets] and\nlink:asciidoc.1.html[without stylesheets] were generated by AsciiDoc\nfrom link:asciidoc.1.txt[this file].\n\nThis link:asciidoc.1[roff formatted  man page] was generated from\nasciidoc(1) DocBook output using `xsltproc(1)` and DocBook XSL\nStylesheets.\n\n[[X8]]\nExample Slideshows\n~~~~~~~~~~~~~~~~~~\nThe http://www.w3.org/Talks/Tools/Slidy2/[Slidy] backend generates\nHTML slideshows that can be viewed in any web browser.  What's nice is\nthat you can create completely self contained slideshows including\nembedded images.\n\n- Here is the link:slidy.html[slidy backend documentation] slideshow\n  and here is it's link:slidy.txt[AsciiDoc source].\n- An link:slidy-example.html[example slidy slideshow] and the\n  link:slidy-example.txt[AsciiDoc source].\n\nExample Web Site\n~~~~~~~~~~~~~~~~\nThe link:README-website.html[AsciiDoc website] is included in the\nAsciiDoc distribution (in `./examples/website/`) as an example website\nbuilt using AsciiDoc.  See `./examples/website/README-website.txt`.\n\nMore examples\n~~~~~~~~~~~~~\n- See below: <<X6,'Documents written using AsciiDoc'>>.\n- Example link:newtables.html[Tables].\n\n\neBook Publication\n-----------------\nThe two most popular open eBook formats are\nhttp://en.wikipedia.org/wiki/EPUB[EPUB] and PDF.\nThe AsciiDoc link:a2x.1.html[a2x] toolchain wrapper makes it easy to\nlink:publishing-ebooks-with-asciidoc.html[publish EPUB and PDF eBooks\nwith AsciiDoc]. See also <<X7,example books>> and\nlink:epub-notes.html[AsciiDoc EPUB Notes]).\n\n\nBlogpost weblog client\n----------------------\nhttp://srackham.wordpress.com/blogpost-readme/[blogpost] is a\ncommand-line weblog client for publishing AsciiDoc documents to\nhttp://wordpress.org/[WordPress] blog hosts. It creates and updates\nweblog posts and pages directly from AsciiDoc source documents.\n\n\nSource code highlighter\n-----------------------\nAsciiDoc includes a link:source-highlight-filter.html[source code\nhighlighter filter] that uses\nhttp://www.gnu.org/software/src-highlite/[GNU source-highlight] to\nhighlight HTML outputs. You also have the option of using the\nhttp://pygments.org/[Pygments] highlighter.\n\n\n[[X3]]\nMathematical Formulae\n---------------------\nYou can include mathematical formulae in AsciiDoc XHTML documents using\nlink:asciimathml.html[ASCIIMathML] or link:latexmathml.html[LaTeXMathML]\nnotation.\n\nThe link:latex-filter.html[AsciiDoc LaTeX filter] translates LaTeX\nsource to a PNG image that is automatically inserted into the AsciiDoc\noutput documents.\n\nAsciiDoc also has 'latexmath' macros for DocBook outputs -- they are\ndocumented in link:latexmath.pdf[this PDF file] and can be used in\nAsciiDoc documents processed by `dblatex(1)`.\n\n\nEditor Support\n--------------\n- An AsciiDoc syntax highlighter for the Vim text editor is included in the\n  AsciiDoc distribution (see 'Appendix F' of the 'AsciiDoc User Guide' for\n  details).\n+\n.Syntax highlighter screenshot\nimage::images/highlighter.png[height=400,caption=\"\",link=\"images/highlighter.png\"]\n\n- Dag Wieers has implemented an alternative Vim syntax file for\n  AsciiDoc which can be found here\n  http://svn.rpmforge.net/svn/trunk/tools/asciidoc-vim/.\n- David Avsajanishvili has written a source highlighter for AsciiDoc\n  files for http://projects.gnome.org/gtksourceview/[GtkSourceView]\n  (used by http://projects.gnome.org/gedit/[gedit] and a number of\n  other applications). The project is hosted here:\n  https://launchpad.net/asciidoc-gtk-highlight\n- Florian Kaufman has written 'adoc-mode.el' -- a major-mode for\n  editing AsciiDoc files in Emacs, you can find it\n  http://code.google.com/p/sensorflo-emacs/[here].\n- The http://xpt.sourceforge.net/[*Nix Power Tools project] has\n  released an http://xpt.sourceforge.net/tools/doc-mode/[AsciiDoc\n  syntax highlighter for Emacs].\n- Terrence Brannon has written\n  http://github.com/metaperl/asciidoc-el[AsciiDoc functions for\n  Emacs].\n- Christian Zuckschwerdt has written a\n  https://github.com/zuckschwerdt/asciidoc.tmbundle[TextMate bundle]\n  for AsciiDoc.\n\n\nTry AsciiDoc on the Web\n-----------------------\nAndrew Koster has written a Web based application to interactively\nconvert and display AsciiDoc source:\nhttp://andrewk.webfactional.com/asciidoc.php\n\n\n[[X2]]\nExternal Resources and Applications\n-----------------------------------\nHere are resources that I know of, if you know of more drop me a line\nand I'll add them to the list.\n\n- Check the link:INSTALL.html#X2[installation page] for packaged versions\n  of AsciiDoc.\n- Alex Efros has written an HTML formatted\n  http://powerman.name/doc/asciidoc[AsciiDoc Cheatsheet] using\n  Asciidoc.\n- Thomas Berker has written an\n  http://liksom.info/blog/?q=node/114[AsciiDoc Cheatsheet] in Open\n  Document and PDF formats.\n- The http://www.wikimatrix.org/[WikiMatrix] website has an excellent\n  http://www.wikimatrix.org/syntax.php[web page] that compares the\n  various Wiki markup syntaxes. An interesting attempt at Wiki markup\n  standardization is http://www.wikicreole.org/[CREOLE].\n- Franck Pommereau has written\n  http://www.univ-paris12.fr/lacl/pommereau/soft/asciidoctest.html[Asciidoctest],\n  a program that doctests snippets of Python code within your Asciidoc\n  documents.\n- The http://remips.sourceforge.net/[ReMIPS] project website has been\n  built using AsciiDoc.\n- Here are some link:asciidoc-docbook-xsl.html[DocBook XSL Stylesheets\n  Notes].\n- Karl Mowatt-Wilson has developed an http://ikiwiki.info/[ikiwiki]\n  plugin for AsciiDoc which he uses to render\n  http://mowson.org/karl[his website].  The plugin is available\n  http://www.mowson.org/karl/colophon/[here] and there is some\n  discussion of the ikiwiki integration\n  http://ikiwiki.info/users/KarlMW/discussion/[here].\n- Glenn Eychaner has\n  http://groups.google.com/group/asciidoc/browse_thread/thread/bf04b55628efe214[reworked\n  the Asciidoc plugin for ikiwiki] that was created by Karl Mowson,\n  the source can be downloaded from\n  http://dl.dropbox.com/u/11256359/asciidoc.pm\n- David Hajage has written an AsciiDoc package for the\n  http://www.r-project.org/[R Project] (R is a free software\n  environment for statistical computing).  'ascii' is available on\n  'CRAN' (just run `install.package(\"ascii\")` from R).  Briefly,\n  'ascii' replaces R results in AsciiDoc document with AsciiDoc\n  markup.  More information and examples here:\n  http://eusebe.github.com/ascii/.\n- Pascal Rapaz has written a Python script to automate AsciiDoc\n  website generation. You can find it at\n  http://www.rapazp.ch/opensource/tools/asciidoc.html.\n- Jared Henley has written\n  http://jared.henley.id.au/software/awb/documentation.html[AsciiDoc\n  Website Builder]. 'AsciiDoc Website Builder' (awb) is a python\n  program that automates the building of of a website written in\n  AsciiDoc. All you need to write is the AsciiDoc source plus a few\n  simple configuration files.\n- Brad Adkins has written\n  http://dbixjcl.org/jcl/asciidocgen/asciidocgen.html[AsciiDocGen], a\n  web site generation and deployment tool that allows you write your\n  web site content in AsciiDoc. The\n  http://dbixjcl.org/jcl/asciidocgen/asciidocgen.html[AsciiDocGen web\n  site] is managed using 'AsciiDocGen'.\n- Filippo Negroni has developed a set of tools to facilitate 'literate\n  programming' using AsciiDoc.  The set of tools is called\n  http://eweb.sourceforge.net/[eWEB].\n- http://vanderwijk.info/2009/4/23/full-text-based-document-generation-using-asciidoc-and-ditaa[Ivo's\n  blog] describes a http://ditaa.sourceforge.net/[ditaa] filter for\n  AsciiDoc which converts http://en.wikipedia.org/wiki/ASCII_art[ASCII\n  art] into graphics.\n- http://github.com/github/gollum[Gollum] is a git-powered wiki, it\n  supports various formats, including AsciiDoc.\n- Gregory Rom\303\251 has written an\n  http://github.com/gpr/redmine_asciidoc_formatter[AsciiDoc plugin]\n  for the http://www.redmine.org/[Redmine] project management\n  application.\n- Paul Hsu has started a\n  http://github.com/paulhsu/AsciiDoc.CHT.userguide[Chinese translation\n  of the AsciiDoc User Guide].\n- Dag Wieers has written\n  http://dag.wieers.com/home-made/unoconv/[UNOCONV]. 'UNOCONV' can\n  export AsciiDoc outputs to OpenOffice export formats.\n- Ed Keith has written http://codeextactor.berlios.de/[Code\n  Extractor], it extracts code snippets from source code files and\n  inserts them into AsciiDoc documents.\n- The http://csrp.iut-blagnac.fr/jmiwebsite/home/[JMI website] hosts\n  a number of extras for AsciiDoc and Slidy written by Jean-Michel\n  Inglebert.\n- Ryan Tomayko has written an number of\n  http://tomayko.com/src/adoc-themes/[themes for AsciiDoc] along with\n  a http://tomayko.com/src/adoc-themes/hacking.html[script for\n  combining the CSS files] into single CSS theme files for AsciiDoc\n  embedded CSS documents.\n- Ilya Portnov has written a\n  https://gitorious.org/doc-building-system[document building system\n  for AsciiDoc], here is\n  http://iportnov.blogspot.com/2011/03/asciidoc-beamer.html[short\n  article in Russian] describing it.\n- Lex Trotman has written\n  https://github.com/elextr/codiicsa[codiicsa], a program that\n  converts DocBook to AsciiDoc.\n- Qingping Hou has written http://houqp.github.com/asciidoc-deckjs/[an\n  AsciiDoc backend for deck.js].\n  http://imakewebthings.github.com/deck.js/[deck.js] is a JavaScript\n  library for building modern HTML presentations (slideshows).\n- The guys from O'Reilly Media have posted an\n  https://github.com/oreillymedia/docbook2asciidoc[XSL Stylesheet to\ngithub] that converts DocBook to AsciiDoc.\n\nPlease let me know if any of these links need updating.\n\n\n[[X6]]\nDocuments written using AsciiDoc\n--------------------------------\nHere are some documents I know of, if you know of more drop me a line\nand I'll add them to the list.\n\n- The book http://practicalunittesting.com/[Practical Unit Testing] by\n  Tomek Kaczanowski was\n  https://groups.google.com/group/asciidoc/browse_frm/thread/4ba13926262efa23[written\n  using Asciidoc].\n\n- The book http://oreilly.com/catalog/9781449397296[Programming iOS 4]\n  by Matt Neuburg was written using AsciiDoc. Matt has\n  http://www.apeth.net/matt/iosbooktoolchain.html[written an article]\n  describing how he used AsciiDoc and other tools to write the book.\n\n- The book\n  http://oreilly.com/catalog/9780596155957/index.html[Programming\n  Scala] by Dean Wampler and Alex Payne (O'Reilly) was\n  http://groups.google.com/group/asciidoc/browse_frm/thread/449f1199343f0e27[written\n  using Asciidoc].\n\n- The http://www.ncfaculty.net/dogle/fishR/index.html[fishR] website\n  has a number of\n  http://www.ncfaculty.net/dogle/fishR/bookex/AIFFD/AIFFD.html[book\n  examples] written using AsciiDoc.\n\n- The Neo4j graph database project uses Asciidoc, and the output is\n  published here: http://docs.neo4j.org/. The build process includes\n  live tested source code snippets and is described\n  http://groups.google.com/group/asciidoc/browse_thread/thread/49d570062fd3ff52[here].\n\n- http://frugalware.org/[Frugalware Linux] uses AsciiDoc for\n  http://frugalware.org/docs[documentation].\n- http://www.cherokee-project.com/doc/[Cherokee documentation].\n\n- Henrik Maier produced this professional User manual using AsciiDoc:\n  http://www.proconx.com/assets/files/products/modg100/UMMBRG300-1101.pdf\n\n- Henrik also produced this folded single page brochure format\n  example:\n  http://www.proconx.com/assets/files/products/modg100/IGMBRG300-1101-up.pdf\n+\nSee this\nhttp://groups.google.com/group/asciidoc/browse_thread/thread/16ab5a06864b934f[AsciiDoc\ndiscussion group thread] for details.\n\n- The\n  http://www.kernel.org/pub/software/scm/git/docs/user-manual.html[Git\n  User's Manual].\n- 'Git Magic' +\n  http://www-cs-students.stanford.edu/~blynn/gitmagic/ +\n  http://github.com/blynn/gitmagic/tree/1e5780f658962f8f9b01638059b27275cfda095c\n- 'CouchDB: The Definitive Guide' +\n  http://books.couchdb.org/relax/ +\n  http://groups.google.com/group/asciidoc/browse_thread/thread/a60f67cbbaf862aa/d214bf7fa2d538c4?lnk=gst&q=book#d214bf7fa2d538c4\n- 'Ramaze Manual' +\n  http://book.ramaze.net/ +\n  http://github.com/manveru/ramaze-book/tree/master\n- Some documentation about git by Nico Schottelius (in German)\n  http://nico.schotteli.us/papers/linux/git-firmen/.\n- The http://www.netpromi.com/kirbybase_ruby.html[KirbyBase for Ruby]\n  database management system manual.\n- The http://xpt.sourceforge.net/[*Nix Power Tools project] uses\n  AsciiDoc for documentation.\n- The http://www.wesnoth.org/[Battle for Wesnoth] project uses\n  AsciiDoc for its http://www.wesnoth.org/wiki/WesnothManual[Manual]\n  in a number of different languages.\n- Troy Hanson uses AsciiDoc to generate user guides for the\n  http://tpl.sourceforge.net/[tpl] and\n  http://uthash.sourceforge.net/[uthash] projects (the HTML versions\n  have a customised contents sidebar).\n- http://volnitsky.com/[Leonid Volnitsky's site] is generated using\n  AsciiDoc and includes Leonid's matplotlib filter.\n- http://www.weechat.org/[WeeChat] uses AsciiDoc for\n  http://www.weechat.org/doc[project documentation].\n- http://www.clansuite.com/[Clansuite] uses AsciiDoc for\n  http://www.clansuite.com/documentation/[project documentation].\n- The http://fc-solve.berlios.de/[Freecell Solver program] uses\n  AsciiDoc for its\n  http://fc-solve.berlios.de/docs/#distributed-docs[distributed\n  documentation].\n- Eric Raymond's http://gpsd.berlios.de/AIVDM.html[AIVDM/AIVDO\n  protocol decoding] documentation is written using AsciiDoc.\n- Dwight Schauer has written an http://lxc.teegra.net/[LXC HOWTO] in\n  AsciiDoc.\n- The http://www.rowetel.com/ucasterisk/[Free Telephony Project]\n  website is generated using AsciiDoc.\n- Warren Block has http://www.wonkity.com/~wblock/docs/[posted a\n  number of articles written using AsciiDoc].\n- The http://code.google.com/p/waf/[Waf project's] 'Waf Book' is\n  written using AsciiDoc, there is an\n  http://waf.googlecode.com/svn/docs/wafbook/single.html[HTML] and a\n  http://waf.googlecode.com/svn/docs/wafbook/waf.pdf[PDF] version.\n- The http://www.diffkit.org/[DiffKit] project's documentation and\n  website have been written using Asciidoc.\n- The http://www.networkupstools.org[Network UPS Tools] project\n  http://www.networkupstools.org/documentation.html[documentation] is\n  an example of a large documentation project written using AsciiDoc.\n- http://www.archlinux.org/pacman/[Pacman], the\n  http://www.archlinux.org/[Arch Linux] package manager, has been\n  documented using AsciiDoc.\n- Suraj Kurapati has written a number of customized manuals for his\n  Open Source projects using AsciiDoc:\n\n  * http://snk.tuxfamily.org/lib/detest/\n  * http://snk.tuxfamily.org/lib/ember/\n  * http://snk.tuxfamily.org/lib/inochi/\n  * http://snk.tuxfamily.org/lib/rumai/\n\n- The http://cxxtest.com/[CxxTest] project (unit testing for C++\n  language) has written its User Guide using AsciiDoc.\n\nPlease let me know if any of these links need updating.\n\n\nDocBook 5.0 Backend\n-------------------\nShlomi Fish has begun work on a DocBook 5.0 `docbook50.conf` backend\nconfiguration file, you can find it\nhttp://bitbucket.org/shlomif/asciidoc[here]. See also:\nhttp://groups.google.com/group/asciidoc/browse_thread/thread/4386c7cc053d51a9\n\n\n[[X1]]\nLaTeX Backend\n-------------\nAn experimental LaTeX backend was written for AsciiDoc in 2006 by\nBenjamin Klum.  Benjamin did a superhuman job (I admit it, I didn't\nthink this was doable due to AsciiDoc's SGML/XML bias).  Owning to to\nother commitments, Benjamin was unable to maintain this backend.\nHere's link:latex-backend.html[Benjamin's original documentation].\nIncompatibilities introduced after AsciiDoc 8.2.7 broke the LaTeX\nbackend.\n\nIn 2009 Geoff Eddy stepped up and updated the LaTeX backend, thanks to\nGeoff's efforts it now works with AsciiDoc 8.4.3. Geoff's updated\n`latex.conf` file shipped with AsciiDoc version 8.4.4. The backend\nstill has limitations and remains experimental (see\nlink:latex-bugs.html[Geoff's notes]).\n\nIt's probably also worth pointing out that LaTeX output can be\ngenerated by passing AsciiDoc generated DocBook through `dblatex(1)`.\n\n\nPatches and bug reports\n-----------------------\nPatches and bug reports are are encouraged, but please try to follow\nthese guidelines:\n\n- Post bug reports and patches to the\n  http://groups.google.com/group/asciidoc[asciidoc discussion list],\n  this keeps things transparent and gives everyone a chance to\n  comment.\n- The email subject line should be a specific and concise topic\n  summary. Commonly accepted subject line prefixes such as '[ANN]',\n  '[PATCH]' and '[SOLVED]' are good.\n\n=== Bug reports\n- When reporting problems please illustrate the problem with the\n  smallest possible example that replicates the issue (and please test\n  your example before posting). This technique will also help to\n  eliminate red herrings prior to posting.\n- Paste the commands that you executed along with any relevant\n  outputs.\n- Include the version of AsciiDoc and the platform you're running it\n  on.\n- If you can program please consider writing a patch to fix the\n  problem.\n\n=== Patches\n- Keep patches small and atomic (one issue per patch) -- no patch\n  bombs.\n- If possible test your patch against the current trunk.\n- If your patch adds or modifies functionality include a short example\n  that illustrates the changes.\n- Send patches in `diff -u` format, inline inside the mail message is\n  usually best; if it is a very long patch then send it as an\n  attachment.\n- Include documentation updates if you're up to it; otherwise insert\n  'TODO' comments at relevant places in the documentation.\n\n"
>
